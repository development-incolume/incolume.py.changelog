{"config":{"lang":["pt","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Incolume Python Changelog","text":""},{"location":"#objetivos","title":"Objetivos","text":"<p>Esta API automatiza a cria\u00e7\u00e3o de um arquivo changelog utilizando os resgistros do git, para gerenciar melhor seus projetos, seguindo a metodologia do Keep a Changelog.</p>"},{"location":"#descricao","title":"Descri\u00e7\u00e3o","text":"<p>O funcionamento \u00e9 atrav\u00e9s da captura dos registros do comando <code>git tag -n</code>, obtendo assim data, etiquetas e modifica\u00e7\u00f5es, gerando ent\u00e3o um arquivo de gerenciamento de mudan\u00e7as relevantes para cada vers\u00e3o.</p> <p>No pacote h\u00e1 ferramentas para Quality Assurance (QA) como ruff, mypy, pylint, isort, pydocstyle; al\u00e9m de ferramentas de seguran\u00e7a como bandit, pipaudit e safety.</p>"},{"location":"#exemplos-e-uso","title":"Exemplos e Uso","text":"<p>Dispon\u00edvel em docs/api.</p>"},{"location":"#registro-de-mudancas","title":"Registro de Mudan\u00e7as","text":"<p>Dispon\u00edvel em docs/about/CHANGELOG.md.</p>"},{"location":"#contribuidores","title":"Contribuidores","text":"<p>Dispon\u00edvel em docs/about/CONTRIBUTORS.md.</p>"},{"location":"#tecnologias-aplicadas","title":"Tecnologias aplicadas","text":"<p>Deseja aprender mais sobre alguns dos requisitos n\u00e3o funcionais utilizados no projeto? Consulte a sess\u00e3o Padr\u00f5es Aplicados em Guia de Contribu\u00ed\u00e7\u00e3o.</p>"},{"location":"about/CHANGELOG/","title":"CHANGELOG","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, this project adheres to Semantic Versioning and Conventional Commit.</p> <p>This file was automatically generated for incolume.py.changelog</p>"},{"location":"about/CHANGELOG/#080-2024-01-06","title":"0.8.0   \u2014    2024-01-06:","text":""},{"location":"about/CHANGELOG/#added","title":"Added","text":"<ul> <li>Acrescentado campo de busca na documenta\u00e7\u00e3o da API;</li> <li>Acrescentado modo noturno na p\u00e1gina oficial de documenta\u00e7\u00e3o da API;</li> <li>Acrescentado suporte a multiplos idiomas para documenta\u00e7\u00e3o;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em italiano;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em franc\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em espanhol;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em alem\u00e3o;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em ingl\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do contributors.md em ingl\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do zenpy.md em ingl\u00eas;</li> </ul>"},{"location":"about/CHANGELOG/#deprecated","title":"Deprecated","text":"<ul> <li>Ser\u00e1 substitu\u00eddo em breve o pacote <code>isort</code>;</li> </ul>"},{"location":"about/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Redefinido renderiza\u00e7\u00e3o de rodap\u00e9 do arquivo CHANGELOG.md;</li> </ul>"},{"location":"about/CHANGELOG/#070-2024-01-05","title":"0.7.0   \u2014    2024-01-05:","text":""},{"location":"about/CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Formatador de c\u00f3digo redefindo com <code>ruff</code>;</li> <li>Adicionado badges de <code>wheel</code> e <code>stable</code>;</li> </ul>"},{"location":"about/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Renomeado workflow CI/CD <code>python-package.yml -&gt; unit-tests.yml</code>;</li> <li>Atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o com exemplos de utiliza\u00e7\u00e3o da API;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>taskipy</code>;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>makefile</code>;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>tox</code>;</li> <li>Informa\u00e7\u00f5es referente ao projeto atualizadas na p\u00e1gina de documenta\u00e7\u00e3o;</li> </ul>"},{"location":"about/CHANGELOG/#removed","title":"Removed","text":"<ul> <li>Removido pacote <code>blue</code>;</li> <li>Desativado formatador <code>blue</code> em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#062-2024-01-04","title":"0.6.2   \u2014    2024-01-04:","text":""},{"location":"about/CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Ativa\u00e7\u00e3o da configura\u00e7\u00e3o <code>Codecov.io</code>.;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> <li>Corre\u00e7\u00e3o de gera\u00e7\u00e3o de relat\u00f3rio de cobertura no container CI/CD.;</li> </ul>"},{"location":"about/CHANGELOG/#061-2024-01-02","title":"0.6.1   \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Habilitado diretiva <code>workflow_dispatch</code> para executar workflow manualmente;</li> </ul>"},{"location":"about/CHANGELOG/#060-2024-01-02","title":"0.6.0   \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#060rc0-2024-01-02","title":"0.6.0rc0    \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#050-2024-01-01","title":"0.5.0   \u2014    2024-01-01:","text":""},{"location":"about/CHANGELOG/#fixed_5","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o em a\u00e7\u00f5es de fluxo CI/CD;</li> <li>Sanado conflito entre ferramentas de valida\u00e7\u00e3o de tipo;</li> <li>Sanado conflito entre ferramentas de ordena\u00e7\u00e3o de pacotes;</li> <li>Sanado conflito entre ferramentas lint;</li> </ul>"},{"location":"about/CHANGELOG/#050rc0-2023-12-31","title":"0.5.0rc0    \u2014    2023-12-31:","text":""},{"location":"about/CHANGELOG/#fixed_6","title":"Fixed","text":"<ul> <li>Sanado conflito entre ferramentas de valida\u00e7\u00e3o de tipo;</li> <li>Sanado conflito entre ferramentas de ordena\u00e7\u00e3o de pacotes;</li> <li>Sanado conflito entre ferramentas lint;</li> </ul>"},{"location":"about/CHANGELOG/#040-2023-12-31","title":"0.4.0   \u2014    2023-12-31:","text":""},{"location":"about/CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>Atualizado verifica\u00e7\u00e3o de tipo est\u00e1tico <code>mypy</code> para compatibilidade de vers\u00e3o a partir do Python 3.8;</li> <li>Atualizado logo do projeto;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_7","title":"Fixed","text":"<ul> <li>Ajuste de conflitos entre ruff e mypy;</li> <li>Recuperado cobertura de 100% no m\u00f3dulo changelog.cli;</li> </ul>"},{"location":"about/CHANGELOG/#030-2023-12-24","title":"0.3.0   \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_3","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online (https://development-incolume.github.io/incolume.py.changelog/);</li> </ul>"},{"location":"about/CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc4-2023-12-24","title":"0.3.0rc4    \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_4","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online;</li> </ul>"},{"location":"about/CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc3-2023-12-24","title":"0.3.0rc3    \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_5","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online;</li> </ul>"},{"location":"about/CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc2-2023-12-23","title":"0.3.0rc2    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> </ul>"},{"location":"about/CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc1-2023-12-23","title":"0.3.0rc1    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> </ul>"},{"location":"about/CHANGELOG/#changed_6","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc0-2023-12-23","title":"0.3.0rc0    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_8","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> </ul>"},{"location":"about/CHANGELOG/#changed_7","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#020-2023-12-21","title":"0.2.0   \u2014    2023-12-21:","text":""},{"location":"about/CHANGELOG/#added_9","title":"Added","text":"<ul> <li>Pacotes de documenta\u00e7\u00e3o;</li> <li>Pacotes de seguran\u00e7a de software;</li> <li>Pacotes de desenvolvimento;</li> <li>Pacote types-toml;</li> <li>Ferramentas de QA;</li> <li>Documenta\u00e7\u00e3o padr\u00e3o(Google Style);</li> <li>Documenta\u00e7\u00e3o de API;</li> <li>Badges para documenta\u00e7\u00e3o;</li> <li>Estilo PEP8;</li> <li>100% de cobertura no m\u00f3dulo cli;</li> <li>Compatibilidade com Python 3.8;</li> <li>Valida\u00e7\u00e3o com ruff para todas as vers\u00f5es de Python configuradas;</li> <li>CI/CD funcional para multiplataforma;</li> </ul>"},{"location":"about/CHANGELOG/#changed_8","title":"Changed","text":"<ul> <li>README atualizado;</li> <li>Menu atualizado;</li> <li>Caracteres para Slugfy no nome do brach;</li> <li>Realoca\u00e7\u00e3o de Changelog para diret\u00f3rio docs;</li> <li>URLs do projeto atualizada;</li> <li>Comandos de terminal via script atualizados;</li> <li>Retorno do fixture;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_8","title":"Fixed","text":"<ul> <li>Linters corrigidos;</li> <li>Comando de captura de datas;</li> <li>Namespace duplicado;</li> </ul>"},{"location":"about/CHANGELOG/#010-2023-12-12","title":"0.1.0     \u2014    2023-12-12:","text":""},{"location":"about/CHANGELOG/#added_10","title":"Added","text":"<ul> <li>Projeto emancipado de https://gitlab.com/development-incolume/incolumepy.utils;</li> </ul>"},{"location":"about/CONTRIBUTORS/","title":"Mantenedores / Contribudores","text":"Nome Mantenedor Desenvolvedor Testador Documentador Contato Brito @britodfbr Igor Gabriel @igorgabrielg Frederico Louren\u00e7o Cavalcante de Souza @Fredvet00 Alfredo Gustavo \ud83d\udd34 \ud83d\udd34 \ud83d\udd34 @alfredogust Gustavo Ribeiro @Gustavo0121 Jo\u00e3o Ribeiro @EVANGELISTA-RIBEIRO"},{"location":"about/LICENSE/","title":"LICENSE","text":""},{"location":"about/LICENSE/#this-is-free-and-unencumbered-software-released-into-the-public-domain","title":"This is free and unencumbered software released into the public domain.","text":"<p>Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.</p> <p>In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p>For more information, please refer to https://unlicense.org</p>"},{"location":"api/","title":"Documenta\u00e7\u00e3o da API","text":"<p>Changelog Module.</p> <p>CLI - Command Line Interface module.</p>"},{"location":"api/#incolume.py.changelog.changelog.Changelog","title":"<code>Changelog</code>","text":"<p>Changelog class.</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>class Changelog:\n    \"\"\"Changelog class.\"\"\"\n\n    def __init__(\n        self: Changelog,\n        file_output: Path | str = '',\n        url_compare: str = '',\n        *,\n        reverse: bool = True,\n        **kwargs: str,\n    ):\n        \"\"\"Initialize from Changelog class.\n\n        Args:\n            file_output: The output file of changelog.\n            reverse: reverse to the last update be the first.\n            url_compare: Url to compare.\n            url_convetional_commit(str): Url of convetional commit.\n            url_keepachangelog(str): Url of keep a changelog.\n            url_principal(str): Url principal do projeto.\n            url_semver(str): Url of semantic version.\n            **kwargs: Anyone of the positional items.\n\n        Return:\n            None\n        \"\"\"\n        self.file_output = file_output or Path('CHANGELOG.md')\n        self.url_compare = url_compare\n        self.reverse = reverse\n        self.url_principal = kwargs.get(\n            'url_pricipal',\n            'https://gitlab.com/development-incolume/incolume.py.changelog',\n        )\n        self.url_keepachangelog = kwargs.get(\n            'url_keepachangelog',\n            'https://keepachangelog.com/en/1.0.0/',\n        )\n        self.url_semver = kwargs.get(\n            'url_semver',\n            'https://semver.org/spec/v2.0.0.html',\n        )\n        self.url_convetional_commit = kwargs.get(\n            'url_convetional_commit',\n            'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n        )\n\n    @staticmethod\n    def iter_logs(\n        content: list[tuple[str, dict[str, Any]]],\n        *,\n        linked: bool = True,\n    ) -&gt; list[str]:\n        r\"\"\"Iterador de registros git.\n\n        Args:\n            content: Content register in git.\n            linked: If has link.\n\n        Return:\n            A list with the version, date and a message.\n\n        Raises:\n            None\n\n        Examples:\n            &gt;&gt;&gt; iter_logs(\n            [('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n            'messages': {'Added': ['New function', 'One more new function.'],\n            'Fixed': ['A bug of connection.'],},},),], False)\n            ['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n            '\\n### Added',\n            '\\n  - New function;',\n            '\\n  - One more new function;',\n            '\\n### Fixed',\n            '\\n  - A bug of connection.\",;',],\n        \"\"\"\n        result = []\n        for _, entrada in content:\n            logging.debug(entrada)\n            if linked:\n                result.append(\n                    f\"\\n\\n## [{entrada['key']}]\\t &amp;#8212; \"\n                    f\"\\t{entrada['date']}:\",\n                )\n            else:\n                result.append(\n                    f\"\\n\\n## {entrada['key']}\\t &amp;#8212; \\t{entrada['date']}:\",\n                )\n\n            for label, msgs in entrada['messages'].items():\n                result.append(f'\\n### {label.capitalize()}')\n                for msg in msgs:\n                    frase = msg.strip()\n                    frase = frase[0].upper() + frase[1:]\n                    result.append(f'\\n  - {frase};')\n        return result\n\n    def header(self: Changelog) -&gt; list[str]:\n        r\"\"\"Header of changelog file.\n\n        Return:\n            Return a list with a header of changelog file.\n\n        Raises:\n            None\n\n        Examples:\n            &gt;&gt;&gt; changelog_header()\n            ['# CHANGELOG\\n\\n\\n',\n            'All notable changes to this project',\n            ' will be documented in this file.\\n\\n',\n            'The format is based on ',\n            '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n            'this project adheres to'\n            '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n            'and [Conventional Commit]'\n            '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n            'This file was automatically generated for',\n            ' [incolume.py.changelog](https://github.com/development-incolume/'\n            'incolume.py.changelog/-/tree/0.2.0a2)',\n            '\\n\\n---\\n']\n\n            &gt;&gt;&gt; changelog_header(\n            url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n            url_semver=https://semver.org/spec/v1.0.0.html)\n            [\"# CHANGELOG\\n\\n\\n\",\n            \"All notable changes to this project\",\n            \" will be documented in this file.\\n\\n\",\n            \"The format is based on \",\n            \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n            \"this project adheres to \"\n            \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n            \"and [Conventional Commit]\"\n            \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n            \"This file was automatically generated for\",\n            \"[incolume.py.changelog](https://github.com/development-incolume/'\n            'incolume.py.changelog/-/tree/0.2.0a0)\",\n            \"\\n\\n---\\n\"]\n        \"\"\"\n        return [\n            '# CHANGELOG\\n\\n\\n',\n            'All notable changes to this project',\n            ' will be documented in this file.\\n\\n',\n            'The format is based on ',\n            f'[Keep a Changelog]({self.url_keepachangelog}), ',\n            'this project adheres to '\n            f'[Semantic Versioning]({self.url_semver}) '\n            f'and [Conventional Commit]({self.url_convetional_commit}).\\n\\n',\n            'This file was automatically generated for',\n            f' [{__title__}]({self.url_principal}/-/tree/{__version__})',\n            '\\n\\n---\\n',\n        ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.__init__","title":"<code>__init__(file_output='', url_compare='', *, reverse=True, **kwargs)</code>","text":"<p>Initialize from Changelog class.</p> <p>Parameters:</p> Name Type Description Default <code>file_output</code> <code>Path | str</code> <p>The output file of changelog.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>reverse to the last update be the first.</p> <code>True</code> <code>url_compare</code> <code>str</code> <p>Url to compare.</p> <code>''</code> <code>url_convetional_commit(str)</code> <p>Url of convetional commit.</p> required <code>url_keepachangelog(str)</code> <p>Url of keep a changelog.</p> required <code>url_principal(str)</code> <p>Url principal do projeto.</p> required <code>url_semver(str)</code> <p>Url of semantic version.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>None</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def __init__(\n    self: Changelog,\n    file_output: Path | str = '',\n    url_compare: str = '',\n    *,\n    reverse: bool = True,\n    **kwargs: str,\n):\n    \"\"\"Initialize from Changelog class.\n\n    Args:\n        file_output: The output file of changelog.\n        reverse: reverse to the last update be the first.\n        url_compare: Url to compare.\n        url_convetional_commit(str): Url of convetional commit.\n        url_keepachangelog(str): Url of keep a changelog.\n        url_principal(str): Url principal do projeto.\n        url_semver(str): Url of semantic version.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        None\n    \"\"\"\n    self.file_output = file_output or Path('CHANGELOG.md')\n    self.url_compare = url_compare\n    self.reverse = reverse\n    self.url_principal = kwargs.get(\n        'url_pricipal',\n        'https://gitlab.com/development-incolume/incolume.py.changelog',\n    )\n    self.url_keepachangelog = kwargs.get(\n        'url_keepachangelog',\n        'https://keepachangelog.com/en/1.0.0/',\n    )\n    self.url_semver = kwargs.get(\n        'url_semver',\n        'https://semver.org/spec/v2.0.0.html',\n    )\n    self.url_convetional_commit = kwargs.get(\n        'url_convetional_commit',\n        'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.header","title":"<code>header()</code>","text":"<p>Header of changelog file.</p> Return <p>Return a list with a header of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_header()\n['# CHANGELOG\\n\\n\\n',\n'All notable changes to this project',\n' will be documented in this file.\\n\\n',\n'The format is based on ',\n'[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n'this project adheres to'\n'[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n'and [Conventional Commit]'\n'(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n'This file was automatically generated for',\n' [incolume.py.changelog](https://github.com/development-incolume/'\n'incolume.py.changelog/-/tree/0.2.0a2)',\n'\\n\\n---\\n']\n</code></pre> <pre><code>&gt;&gt;&gt; changelog_header(\nurl_keepachangelog='https://keepachangelog.com/en/2.0.0/',\nurl_semver=https://semver.org/spec/v1.0.0.html)\n[\"# CHANGELOG\\n\\n\\n\",\n\"All notable changes to this project\",\n\" will be documented in this file.\\n\\n\",\n\"The format is based on \",\n\"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n\"this project adheres to \"\n\"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n\"and [Conventional Commit]\"\n\"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n\"This file was automatically generated for\",\n\"[incolume.py.changelog](https://github.com/development-incolume/'\n'incolume.py.changelog/-/tree/0.2.0a0)\",\n\"\\n\\n---\\n\"]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def header(self: Changelog) -&gt; list[str]:\n    r\"\"\"Header of changelog file.\n\n    Return:\n        Return a list with a header of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_header()\n        ['# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n        'this project adheres to'\n        '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n        'and [Conventional Commit]'\n        '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n        'This file was automatically generated for',\n        ' [incolume.py.changelog](https://github.com/development-incolume/'\n        'incolume.py.changelog/-/tree/0.2.0a2)',\n        '\\n\\n---\\n']\n\n        &gt;&gt;&gt; changelog_header(\n        url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n        url_semver=https://semver.org/spec/v1.0.0.html)\n        [\"# CHANGELOG\\n\\n\\n\",\n        \"All notable changes to this project\",\n        \" will be documented in this file.\\n\\n\",\n        \"The format is based on \",\n        \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n        \"this project adheres to \"\n        \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n        \"and [Conventional Commit]\"\n        \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n        \"This file was automatically generated for\",\n        \"[incolume.py.changelog](https://github.com/development-incolume/'\n        'incolume.py.changelog/-/tree/0.2.0a0)\",\n        \"\\n\\n---\\n\"]\n    \"\"\"\n    return [\n        '# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        f'[Keep a Changelog]({self.url_keepachangelog}), ',\n        'this project adheres to '\n        f'[Semantic Versioning]({self.url_semver}) '\n        f'and [Conventional Commit]({self.url_convetional_commit}).\\n\\n',\n        'This file was automatically generated for',\n        f' [{__title__}]({self.url_principal}/-/tree/{__version__})',\n        '\\n\\n---\\n',\n    ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.iter_logs","title":"<code>iter_logs(content, *, linked=True)</code>  <code>staticmethod</code>","text":"<p>Iterador de registros git.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content register in git.</p> required <code>linked</code> <code>bool</code> <p>If has link.</p> <code>True</code> Return <p>A list with the version, date and a message.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; iter_logs(\n[('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n'messages': {'Added': ['New function', 'One more new function.'],\n'Fixed': ['A bug of connection.'],},},),], False)\n['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n'\\n### Added',\n'\\n  - New function;',\n'\\n  - One more new function;',\n'\\n### Fixed',\n'\\n  - A bug of connection.\",;',],\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>@staticmethod\ndef iter_logs(\n    content: list[tuple[str, dict[str, Any]]],\n    *,\n    linked: bool = True,\n) -&gt; list[str]:\n    r\"\"\"Iterador de registros git.\n\n    Args:\n        content: Content register in git.\n        linked: If has link.\n\n    Return:\n        A list with the version, date and a message.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; iter_logs(\n        [('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n        'messages': {'Added': ['New function', 'One more new function.'],\n        'Fixed': ['A bug of connection.'],},},),], False)\n        ['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n        '\\n### Added',\n        '\\n  - New function;',\n        '\\n  - One more new function;',\n        '\\n### Fixed',\n        '\\n  - A bug of connection.\",;',],\n    \"\"\"\n    result = []\n    for _, entrada in content:\n        logging.debug(entrada)\n        if linked:\n            result.append(\n                f\"\\n\\n## [{entrada['key']}]\\t &amp;#8212; \"\n                f\"\\t{entrada['date']}:\",\n            )\n        else:\n            result.append(\n                f\"\\n\\n## {entrada['key']}\\t &amp;#8212; \\t{entrada['date']}:\",\n            )\n\n        for label, msgs in entrada['messages'].items():\n            result.append(f'\\n### {label.capitalize()}')\n            for msg in msgs:\n                frase = msg.strip()\n                frase = frase[0].upper() + frase[1:]\n                result.append(f'\\n  - {frase};')\n    return result\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_body","title":"<code>changelog_body(content, content_formated, **kwargs)</code>","text":"<p>Body of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content of changelog.</p> required <code>content_formated</code> <code>list[str]</code> <p>Content formated of changelog.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>Return a list with a content of changelog's body.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_body([('1.0.1', {Added: 'New function'})],\n['1.0.1', 'Added', 'New Function'])\n['[1.0.1]', 'Added', 'New Function']\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_body(\n    content: list[tuple[str, dict[str, Any]]],\n    content_formated: list[str],\n    **kwargs: str,\n) -&gt; list[str]:\n    \"\"\"Body of changelog file.\n\n    Args:\n        content: Content of changelog.\n        content_formated: Content formated of changelog.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        Return a list with a content of changelog's body.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_body([('1.0.1', {Added: 'New function'})],\n        ['1.0.1', 'Added', 'New Function'])\n        ['[1.0.1]', 'Added', 'New Function']\n    \"\"\"\n    logging.debug(kwargs)\n    content_formated.extend(Changelog.iter_logs(content[:-1]))\n    content_formated.extend(Changelog.iter_logs(content[-1:], linked=False))\n    return content_formated\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_footer","title":"<code>changelog_footer(content, content_formated, **kwargs)</code>","text":"<p>Footer of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content of changelog's footer</p> required <code>content_formated</code> <code>list[str]</code> <p>Content formated of changelog's footer</p> required <code>urlcompare</code> <p>Url to compare.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>Return a list with a footer of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_footer([('1.0.1',{Added: 'New function'})],\n['1.0.1', 'Added', 'New Function'])\n['1.0.1', 'Added', 'New Function',\n'\\n---\\n\\n',\n'[1.0.1]: https://github.com/development-incolume/'\n'incolume.py.changelog/-/compare/1.0.0...1.0.1']\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_footer(\n    content: list[tuple[str, dict[str, Any]]],\n    content_formated: list[str],\n    **kwargs: str,\n) -&gt; list[str]:\n    r\"\"\"Footer of changelog file.\n\n    Args:\n        content: Content of changelog's footer\n        content_formated: Content formated of changelog's footer\n        urlcompare: Url to compare.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        Return a list with a footer of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_footer([('1.0.1',{Added: 'New function'})],\n        ['1.0.1', 'Added', 'New Function'])\n        ['1.0.1', 'Added', 'New Function',\n        '\\n---\\n\\n',\n        '[1.0.1]: https://github.com/development-incolume/'\n        'incolume.py.changelog/-/compare/1.0.0...1.0.1']\n    \"\"\"\n    urlcompare = (\n        kwargs.get('urlcompare')\n        or 'https://github.com/development-incolume/'\n        'incolume.py.changelog/-/compare'\n    )\n    logging.debug('urlcompare=%s', urlcompare)\n    content_formated.append('\\n\\n---\\n\\n')\n    y: dict[str, Any] = {}\n    for _, x in content[::-1]:\n        if y:\n            content_formated.append(\n                f'[{x[\"key\"]}]: {urlcompare}/{y[\"key\"]}...{x[\"key\"]}\\n',\n            )\n        y = x\n    return content_formated\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_header","title":"<code>changelog_header(**kwargs)</code>","text":"<p>Header of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>url_keepachangelog</code> <code>str</code> <p>url for keep changelog.</p> required <code>url_semver</code> <code>str</code> <p>url for semantic version.</p> required <code>url_convetional_commit</code> <code>str</code> <p>url for convetional commit.</p> required <code>url_project</code> <code>str</code> <p>url principal for project.</p> required <code>kwargs</code> <code>str</code> <p>Anyone of the others items.</p> <code>{}</code> Return <p>Return a list with a header of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_header()\n['# CHANGELOG\\n\\n\\n',\n'All notable changes to this project',\n' will be documented in this file.\\n\\n',\n'The format is based on ',\n'[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n'this project adheres to'\n'[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n'and [Conventional Commit]'\n'(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n'This file was automatically generated for',\n' [incolume.py.changelog](https://gitlab.com/development-incolume/'\n'incolumepy.utils/-/tree/0.2.0a2)',\n'\\n\\n---\\n']\n</code></pre> <pre><code>&gt;&gt;&gt; changelog_header(\n    url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n    url_semver=https://semver.org/spec/v1.0.0.html)\n[\"# CHANGELOG\\n\\n\\n\",\n\"All notable changes to this project\",\n\" will be documented in this file.\\n\\n\",\n\"The format is based on \",\n\"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n\"this project adheres to \"\n\"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n\"and [Conventional Commit]\"\n\"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n\"This file was automatically generated for\",\n\"[incolume.py.changelog](https://github.com/development-\"\n\"incolume/incolume.py.changelog/-/tree/0.2.0a0)\",\n\"\\n\\n---\\n\"]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_header(\n    **kwargs: str,\n) -&gt; list[str]:\n    r\"\"\"Header of changelog file.\n\n    Args:\n        url_keepachangelog (str): url for keep changelog.\n        url_semver (str): url for semantic version.\n        url_convetional_commit (str): url for convetional commit.\n        url_project (str): url principal for project.\n        kwargs: Anyone of the others items.\n\n    Return:\n        Return a list with a header of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_header()\n        ['# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n        'this project adheres to'\n        '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n        'and [Conventional Commit]'\n        '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n        'This file was automatically generated for',\n        ' [incolume.py.changelog](https://gitlab.com/development-incolume/'\n        'incolumepy.utils/-/tree/0.2.0a2)',\n        '\\n\\n---\\n']\n\n        &gt;&gt;&gt; changelog_header(\n            url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n            url_semver=https://semver.org/spec/v1.0.0.html)\n        [\"# CHANGELOG\\n\\n\\n\",\n        \"All notable changes to this project\",\n        \" will be documented in this file.\\n\\n\",\n        \"The format is based on \",\n        \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n        \"this project adheres to \"\n        \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n        \"and [Conventional Commit]\"\n        \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n        \"This file was automatically generated for\",\n        \"[incolume.py.changelog](https://github.com/development-\"\n        \"incolume/incolume.py.changelog/-/tree/0.2.0a0)\",\n        \"\\n\\n---\\n\"]\n    \"\"\"\n    url_keepachangelog = kwargs.get(\n        'url_keepachangelog',\n        'https://keepachangelog.com/en/1.0.0/',\n    )\n    url_semver = kwargs.get(\n        'url_semver',\n        'https://semver.org/spec/v2.0.0.html',\n    )\n    url_convetional_commit = kwargs.get(\n        'url_convetional_commit',\n        'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n    )\n    url_project = kwargs.get(\n        'url_project',\n        'https://github.com/development-incolume/incolume.py.changelog',\n    )\n    return [\n        '# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        f'[Keep a Changelog]({url_keepachangelog}), ',\n        'this project adheres to '\n        f'[Semantic Versioning]({url_semver}) '\n        f'and [Conventional Commit]({url_convetional_commit}).\\n\\n',\n        'This file was automatically generated for',\n        f' [{__title__}]({url_project}/-/tree/{__version__})',\n        '\\n\\n---\\n',\n    ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_messages","title":"<code>changelog_messages(*, text, start=None, end=None, **kwargs)</code>","text":"<p>Changelog messages sort and classify.</p> <p>Parameters:</p> Name Type Description Default <code>end</code> <code>str | int | None</code> <p>End of Message</p> <code>None</code> <code>start</code> <code>str | int | None</code> <p>Start of Message</p> <code>None</code> <code>text</code> <code>str</code> <p>Changelog's message</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>return a list of tuples with a changelog menssage per line.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_messages('1.0.0 Security: a;b;c;'\n'Removed: 1;2;3; Changed: a;b;c;d;e;'\n'Fixed: http://example.com; http://httpbin.com;'\n'Deprecated: 1;2;3;a;s;b; Added: a1;a2;a3.',\n'1.1.0 Removed: 1;2'\n'Added: g;u')\n[('1.0.0',{'key': '1.0.0', 'date': '2023-12-21',\n'messages': {\n'Added': ['a1', 'a2', 'a3.'],\n'Changed': ['a', 'b', 'c', 'd', 'e'],\n'Deprecated': ['1', '2', '3', 'a', 's', 'b'],\n'Fixed': ['http://example.com', 'http://httpbin.com',],\n'Removed': ['1', '2', '3'],\n'Security': ['a', 'b', 'c'],},},),\n('1.1.0',{'key': '1.1.0', 'date': '2023-12-21',\n'messages': {\n'Added': ['g', 'u'],\n'Removed: ['1', '2'],},},)]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_messages(\n    *,\n    text: str,\n    start: str | int | None = None,\n    end: str | int | None = None,\n    **kwargs: str,\n) -&gt; list[tuple[str, dict[str, Any]]]:\n    \"\"\"Changelog messages sort and classify.\n\n    Args:\n        end: End of Message\n        start: Start of Message\n        text: Changelog's message\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        return a list of tuples with a changelog menssage per line.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_messages('1.0.0 Security: a;b;c;'\n        'Removed: 1;2;3; Changed: a;b;c;d;e;'\n        'Fixed: http://example.com; http://httpbin.com;'\n        'Deprecated: 1;2;3;a;s;b; Added: a1;a2;a3.',\n        '1.1.0 Removed: 1;2'\n        'Added: g;u')\n        [('1.0.0',{'key': '1.0.0', 'date': '2023-12-21',\n        'messages': {\n        'Added': ['a1', 'a2', 'a3.'],\n        'Changed': ['a', 'b', 'c', 'd', 'e'],\n        'Deprecated': ['1', '2', '3', 'a', 's', 'b'],\n        'Fixed': ['http://example.com', 'http://httpbin.com',],\n        'Removed': ['1', '2', '3'],\n        'Security': ['a', 'b', 'c'],},},),\n        ('1.1.0',{'key': '1.1.0', 'date': '2023-12-21',\n        'messages': {\n        'Added': ['g', 'u'],\n        'Removed: ['1', '2'],},},)]\n    \"\"\"\n    logging.debug('parameters: (%s %s %s %s)', text, start, end, kwargs)\n    lang: str = kwargs.get('lang', '')\n    if start is not None:\n        start = int(start)\n    if end is not None:\n        end = int(end)\n\n    records = []\n    for msg in text.strip().splitlines()[start:end]:\n        logging.debug('msg=%s', msg)\n        record = msg_classify(msg=msg, lang=lang)\n        logging.debug('record=%s', record)\n        records.append((record['key'], record))\n    logging.debug('type return %s=%s', inspect.stack()[0][3], type(records))\n    logging.debug('return %s=%s', inspect.stack()[0][3], records)\n    return records\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_write","title":"<code>changelog_write(*, content, **kwargs)</code>","text":"<p>Write CHANGELOG.md file formatted.</p> <p>Parameters:</p> Name Type Description Default <code>changelog_file</code> <p>Path of changelog file.</p> required <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content to write the changelog</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>True if success.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_write(['Added: funcionalidade nova.'])\nTrue\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_write(\n    *,\n    content: list[tuple[str, dict[str, Any]]],\n    **kwargs: str,\n) -&gt; bool:\n    \"\"\"Write CHANGELOG.md file formatted.\n\n    Args:\n        changelog_file: Path of changelog file.\n        content: Content to write the changelog\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        True if success.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_write(['Added: funcionalidade nova.'])\n        True\n    \"\"\"\n    changelog_file = Path(kwargs.get('changelog_file') or CHANGELOG_FILE)\n    logging.debug('changelog_file=%s', changelog_file)\n\n    content_formated = changelog_header()\n    content_formated = changelog_body(content, content_formated, **kwargs)\n    content_formated = changelog_footer(content, content_formated, **kwargs)\n\n    with changelog_file.open('w') as f:\n        f.writelines(content_formated)\n        return True\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.get_os_command","title":"<code>get_os_command(key)</code>","text":"<p>Generate command to git tag according OS.</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def get_os_command(key: str) -&gt; str:\n    \"\"\"Generate command to git tag according OS.\"\"\"\n    cmd_supply = {\n        'win': r'^^{commit} --',\n    }\n    cmd = rf'git show -s --format=%cs {key}'\n    os_id = sys.platform.casefold()[:3]\n    cmd += cmd_supply.get(os_id, r'^{commit} --')\n\n    logging.debug(cmd)\n    return cmd\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.msg_classify","title":"<code>msg_classify(msg, lang='')</code>","text":"<p>Classify and sort one record for messages git tag -n.</p> <p>Parameters:</p> Name Type Description Default <code>lang</code> <code>str</code> <p>Language of command.</p> <code>''</code> <code>msg</code> <code>str</code> <p>Message of command.</p> required <code>**kwargs</code> <p>Anyone of the positional items.</p> required Return <p>A dictionary with the version, date and a message.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If lang selected don't have support.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; msg_classify('1.0.0 Adicionado: Nova funcionalidade.', 'pt-BR')\n{'key': '0.1.0', 'date': '2023-12-18',\n'messages': {'Added': ['Nova funcionalidade.']}\n</code></pre> <pre><code>&gt;&gt;&gt; msg_classify('Corregido: correcci\u00f3n de error.', 'es-AR')\nValueError: es-AR not suported! Use en-US, pt-BR\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def msg_classify(msg: str, lang: str = '') -&gt; dict[str, Any]:\n    \"\"\"Classify and sort one record for messages git tag -n.\n\n    Args:\n        lang: Language of command.\n        msg: Message of command.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        A dictionary with the version, date and a message.\n\n    Raises:\n        ValueError: If lang selected don't have support.\n\n    Examples:\n        &gt;&gt;&gt; msg_classify('1.0.0 Adicionado: Nova funcionalidade.', 'pt-BR')\n        {'key': '0.1.0', 'date': '2023-12-18',\n        'messages': {'Added': ['Nova funcionalidade.']}\n\n        &gt;&gt;&gt; msg_classify('Corregido: correcci\u00f3n de error.', 'es-AR')\n        ValueError: es-AR not suported! Use en-US, pt-BR\n    \"\"\"\n    logging.debug(lang)\n    suport_lang: dict[str, Any] = {\n        'en-US': {\n            'Added': 'Added',\n            'Changed': 'Changed',\n            'Deprecated': 'Deprecated',\n            'Removed': 'Removed',\n            'Fixed': 'Fixed',\n            'Security': 'Security',\n        },\n        'pt-BR': {\n            'Adicionado': 'Added',\n            'Modificado': 'Changed',\n            'Obsoleto': 'Deprecated',\n            'Removido': 'Removed',\n            'Corrigido': 'Fixed',\n            'Seguran\u00e7a': 'Security',\n        },\n    }\n    suport_lang.update(\n        {'all': {k: v for d in suport_lang.values() for k, v in d.items()}},\n    )\n    if lang not in suport_lang:\n        logging.error(\n            ValueError(f'{lang} not suported! Use {suport_lang.keys()}'),\n        )\n\n    key, msg = msg.split(maxsplit=1)\n    cmd = get_os_command(key)\n    date = subprocess.getoutput(cmd).strip()\n    logging.debug(date)\n\n    logging.debug('key=%s; date=%s; msg=%s', key, date, msg)\n    selected_lang = suport_lang.get(lang, suport_lang['all'])\n    regex: str = rf\"({'|'.join(selected_lang.keys())})\\s?:\"\n\n    txt = re.sub(\n        regex,\n        r'\u00a7\u00a7\\1\u00a7:',\n        msg,\n        flags=re.I,\n    )\n    logging.debug('txt=%s', txt)\n    dct: dict[str, Any] = {}\n    for i, j in sorted(\n        x.strip().rstrip(';').split('\u00a7:') for x in txt.strip().split('\u00a7\u00a7') if x\n    ):\n        dct.setdefault(selected_lang[i.capitalize()], []).extend(\n            j.strip().split(';'),\n        )\n\n    return {'key': key, 'date': date, 'messages': dct}\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.run","title":"<code>run()</code>","text":"<p>Examples ran.</p> Return <p>None</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def run() -&gt; None:\n    \"\"\"Examples ran.\n\n    Return:\n        None\n    \"\"\"\n    msg = subprocess.getoutput('git tag -n').splitlines()[-14]\n    logging.debug(msg)\n    logging.debug('msg_classify=%s', msg_classify(msg=msg))\n\n    msg = subprocess.getoutput('git tag -n')\n    result = changelog_messages(text=msg)\n\n    logging.debug('result=%s', result)\n    logging.debug('type(result)=%s', type(result))\n    result = sorted(result, reverse=True, key=key_versions_2_sort)\n    logging.debug('result = %s; result type = %s', result, type(result))\n\n    changelog_write(content=result)\n    update_changelog()\n    logging.info(\n        msg_classify(\n            '0.1.0           added: Projeto emancipado de '\n            'https://gitlab.com/development-incolume/incolumepy.utils',\n        ),\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.update_changelog","title":"<code>update_changelog(changelog_file='', *, reverse=True, **kwargs)</code>","text":"<p>Update Changelog.md file.</p> <p>Parameters:</p> Name Type Description Default <code>changelog_file</code> <code>str</code> <p>changelog full filename.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>reverse to the last update be the first.</p> <code>True</code> <code>urlcompare(str)</code> <p>Url to compare.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>True if success</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; update_changelog()\nTrue\n&gt;&gt;&gt; update_changelog(changelog_file='/tmp/CHANGELOG.md')\nTrue\n&gt;&gt;&gt; update_changelog(changelog_file=Path('CHANGELOG.md'),\nurlcompare=\"https://github.com/development-incolume/\"\n\"incolume.py.changelog/-/compare\")\nTrue\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def update_changelog(\n    changelog_file: str = '',\n    *,\n    reverse: bool = True,\n    **kwargs: str,\n) -&gt; bool:\n    \"\"\"Update Changelog.md file.\n\n    Args:\n        changelog_file: changelog full filename.\n        reverse: reverse to the last update be the first.\n        urlcompare(str): Url to compare.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        True if success\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; update_changelog()\n        True\n        &gt;&gt;&gt; update_changelog(changelog_file='/tmp/CHANGELOG.md')\n        True\n        &gt;&gt;&gt; update_changelog(changelog_file=Path('CHANGELOG.md'),\n        urlcompare=\"https://github.com/development-incolume/\"\n        \"incolume.py.changelog/-/compare\")\n        True\n    \"\"\"\n    logging.debug('argumentos=%s,%s,%s', changelog_file, reverse, kwargs)\n    urlcompare: str = (\n        kwargs.get('urlcompare')\n        or 'https://github.com/development-incolume'\n        '/incolume.py.changelog/-/compare'\n    )\n    content: str = kwargs.get('content', subprocess.getoutput('git tag -n'))\n    logging.info('registros encontrados ..')\n    logging.debug('content=%s', content)\n\n    return changelog_write(\n        content=sorted(\n            changelog_messages(\n                text=content,\n                start=kwargs.get('start', None),\n                end=kwargs.get('end', None),\n            ),\n            reverse=reverse,\n            key=key_versions_2_sort,\n        ),\n        urlcompare=urlcompare,\n        changelog_file=changelog_file,\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.cli.changelog","title":"<code>changelog(file_changelog, url='', *, reverse=True)</code>","text":"<p>Operacionaliza uma interface CLI para m\u00f3dulo incolume.py.changelog.</p> <p>Parameters:</p> Name Type Description Default <code>file_changelog</code> <code>str</code> <p>changelog full filename.</p> required <code>url</code> <code>str</code> <p>url compare from repository of project.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>Reverse order of records.</p> <code>True</code> Return <p>True if success</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When there is not git tag records.</p> Source code in <code>incolume/py/changelog/cli.py</code> <pre><code>@click.command()\n@click.argument(\n    'file_changelog',\n    type=click.STRING,\n    default='CHANGELOG.md',\n)\n@click.option(\n    '--url',\n    '-u',\n    default='https://github.com/development-incolume/'\n    'incolume.py.changelog/-/compare',\n    help='Url compare from repository of project.',\n)\n@click.option(\n    '--reverse',\n    '-r',\n    default=True,\n    help='Reverse order of records.',\n)\ndef changelog(\n    file_changelog: str,\n    url: str = '',\n    *,\n    reverse: bool = True,\n) -&gt; None:\n    \"\"\"Operacionaliza uma interface CLI para m\u00f3dulo incolume.py.changelog.\n\n    Args:\n        file_changelog:  changelog full filename.\n        url: url compare from repository of project.\n        reverse: Reverse order of records.\n\n    Return:\n        True if success\n\n    Raises:\n        ValueError: When there is not git tag records.\n\n    \"\"\"\n    result = update_changelog(\n        changelog_file=file_changelog,\n        urlcompare=url,\n        reverse=reverse,\n    )\n    click.echo(f'{result}')\n</code></pre>"},{"location":"api/#incolume.py.changelog.cli.greeting","title":"<code>greeting(nome)</code>","text":"<p>Retorna a sauda\u00e7\u00e3o para o nome passado.</p> <p>Parameters:</p> Name Type Description Default <code>nome</code> <code>str</code> <p>Nome de usu\u00e1rio</p> required Return <p>N\u00e3o h\u00e1 retorno. Uma sauda\u00e7\u00e3o \u00e9 exibida na tela.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; greeting Yoda\nOi Yoda!\n</code></pre> <pre><code>&gt;&gt;&gt; greeting\nOi &lt;usu\u00e1rio logado&gt;\n</code></pre> Source code in <code>incolume/py/changelog/cli.py</code> <pre><code>@click.command()\n@click.argument('nome', envvar='USERNAME', type=click.STRING)\ndef greeting(nome: str) -&gt; None:\n    \"\"\"Retorna a sauda\u00e7\u00e3o para o nome passado.\n\n    Args:\n      nome: Nome de usu\u00e1rio\n\n    Return:\n      N\u00e3o h\u00e1 retorno. Uma sauda\u00e7\u00e3o \u00e9 exibida na tela.\n\n    Raises:\n      None\n\n    Examples:\n        &gt;&gt;&gt; greeting Yoda\n        Oi Yoda!\n\n        &gt;&gt;&gt; greeting\n        Oi &lt;usu\u00e1rio logado&gt;\n\n    \"\"\"\n    click.echo(f'Oi {nome.title()}!')\n</code></pre>"},{"location":"user_guide/code_of_conduct/","title":"C\u00f3digo de Conduta do Contribuinte","text":""},{"location":"user_guide/code_of_conduct/#nosso-compromisso","title":"Nosso Compromisso","text":"<p>N\u00f3s, como membros, colaboradores e l\u00edderes, nos comprometemos a fazer a participa\u00e7\u00e3o em nosso comunidade uma experi\u00eancia livre de ass\u00e9dio para todos, independentemente da idade, corpo tamanho, defici\u00eancia vis\u00edvel ou invis\u00edvel, etnia, caracter\u00edsticas sexuais, g\u00eanero identidade e express\u00e3o, n\u00edvel de experi\u00eancia, educa\u00e7\u00e3o, status socioecon\u00f4mico, nacionalidade, apar\u00eancia pessoal, ra\u00e7a, casta, cor, religi\u00e3o ou identidade e orienta\u00e7\u00e3o.</p> <p>Comprometemo-nos a agir e interagir de forma a contribuir para um ambiente aberto, acolhedor, comunidade diversificada, inclusiva e saud\u00e1vel.</p>"},{"location":"user_guide/code_of_conduct/#nossos-padroes","title":"Nossos padr\u00f5es","text":"<p>Exemplos de comportamentos que contribuem para um ambiente positivo para os nossos comunidade incluem:</p> <ul> <li>Demonstrar empatia e bondade para com outras pessoas</li> <li>Ser respeitoso com as diferentes opini\u00f5es, pontos de vista e experi\u00eancias</li> <li>Dar e aceitar graciosamente feedback construtivo</li> <li>Aceitar a responsabilidade e pedir desculpas aos afetados por nossos erros,   e aprendendo com a experi\u00eancia</li> <li>Concentrar-se no que \u00e9 melhor n\u00e3o apenas para n\u00f3s como indiv\u00edduos, mas para o geral   comunidade</li> </ul> <p>Exemplos de comportamento inaceit\u00e1vel incluem:</p> <ul> <li>O uso de linguagem ou imagens sexualizadas e aten\u00e7\u00e3o sexual ou avan\u00e7os de   qualquer tipo</li> <li>Trolling, coment\u00e1rios insultuosos ou depreciativos e ataques pessoais ou pol\u00edticos</li> <li>Ass\u00e9dio p\u00fablico ou privado</li> <li>Publicar informa\u00e7\u00f5es privadas de outras pessoas, como endere\u00e7o f\u00edsico ou de e-mail,   sem sua permiss\u00e3o expl\u00edcita</li> <li>Outras condutas que possam ser razoavelmente consideradas inadequadas em um   ambiente profissional</li> </ul>"},{"location":"user_guide/code_of_conduct/#responsabilidades-de-execucao","title":"Responsabilidades de Execu\u00e7\u00e3o","text":"<p>Os l\u00edderes comunit\u00e1rios s\u00e3o respons\u00e1veis por esclarecer e fazer cumprir nossos padr\u00f5es de comportamento aceit\u00e1vel e tomar\u00e1 as medidas corretivas apropriadas e justas resposta a qualquer comportamento que considerem inadequado, amea\u00e7ador, ofensivo, ou prejudicial.</p> <p>Os l\u00edderes da comunidade t\u00eam o direito e a responsabilidade de remover, editar ou rejeitar coment\u00e1rios, commits, c\u00f3digo, edi\u00e7\u00f5es wiki, quest\u00f5es e outras contribui\u00e7\u00f5es que s\u00e3o n\u00e3o alinhado a este C\u00f3digo de Conduta, e comunicar\u00e1 os motivos da modera\u00e7\u00e3o decis\u00f5es quando apropriado.</p>"},{"location":"user_guide/code_of_conduct/#alcance","title":"Alcance","text":"<p>Este C\u00f3digo de Conduta aplica-se a todos os espa\u00e7os comunit\u00e1rios e tamb\u00e9m quando um indiv\u00edduo est\u00e1 representando oficialmente a comunidade em espa\u00e7os p\u00fablicos. Exemplos de representa\u00e7\u00e3o de nossa comunidade incluem o uso de um endere\u00e7o de e-mail oficial, postar por meio de uma conta oficial de m\u00eddia social ou agindo como um representante em um evento online ou offline.</p>"},{"location":"user_guide/code_of_conduct/#aplicacao","title":"Aplica\u00e7\u00e3o","text":"<p>Casos de comportamento abusivo, de ass\u00e9dio ou de outra forma inaceit\u00e1vel podem ser reportado aos l\u00edderes comunit\u00e1rios respons\u00e1veis pela fiscaliza\u00e7\u00e3o contato@incolume.com.br. Todas as reclama\u00e7\u00f5es ser\u00e3o analisadas e investigadas prontamente e de forma justa.</p> <p>Todos os l\u00edderes comunit\u00e1rios s\u00e3o obrigados a respeitar a privacidade e a seguran\u00e7a do relator de qualquer incidente.</p>"},{"location":"user_guide/code_of_conduct/#diretrizes-de-aplicacao","title":"Diretrizes de aplica\u00e7\u00e3o","text":"<p>Os l\u00edderes comunit\u00e1rios seguir\u00e3o estas Diretrizes de Impacto na Comunidade para determinar as consequ\u00eancias de qualquer a\u00e7\u00e3o que considerem violar este C\u00f3digo de Conduta:</p>"},{"location":"user_guide/code_of_conduct/#1-correcao","title":"1. Corre\u00e7\u00e3o","text":"<p>Impacto na comunidade: uso de linguagem impr\u00f3pria ou outro comportamento considerado pouco profissional ou indesej\u00e1vel na comunidade.</p> <p>Consequ\u00eancia: Uma advert\u00eancia privada por escrito dos l\u00edderes comunit\u00e1rios, fornecendo clareza sobre a natureza da viola\u00e7\u00e3o e uma explica\u00e7\u00e3o de por que o comportamento era inadequado. Um pedido de desculpas p\u00fablico pode ser solicitado.</p>"},{"location":"user_guide/code_of_conduct/#2-aviso","title":"2. Aviso","text":"<p>Impacto na comunidade: uma viola\u00e7\u00e3o por meio de um \u00fanico incidente ou s\u00e9rie de a\u00e7\u00f5es.</p> <p>Consequ\u00eancia: um aviso com consequ\u00eancias para o comportamento continuado. N\u00e3o intera\u00e7\u00e3o com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, por um per\u00edodo de tempo especificado. Isto inclui evitar intera\u00e7\u00f5es em espa\u00e7os comunit\u00e1rios, bem como canais externos como as redes sociais. A viola\u00e7\u00e3o destes termos pode levar a uma suspens\u00e3o tempor\u00e1ria ou permanente banimento.</p>"},{"location":"user_guide/code_of_conduct/#3-banimento-temporario","title":"3. Banimento Tempor\u00e1rio","text":"<p>Impacto na comunidade: uma viola\u00e7\u00e3o grave dos padr\u00f5es da comunidade, incluindo comportamento inadequado sustentado.</p> <p>Consequ\u00eancia: banimento tempor\u00e1rio de qualquer tipo de intera\u00e7\u00e3o ou p\u00fablico comunica\u00e7\u00e3o com a comunidade por um determinado per\u00edodo de tempo. Nenhum p\u00fablico ou intera\u00e7\u00e3o privada com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, \u00e9 permitido durante este per\u00edodo. A viola\u00e7\u00e3o destes termos pode levar a um banimento permanente.</p>"},{"location":"user_guide/code_of_conduct/#4-banimento-permanente","title":"4. Banimento Permanente","text":"<p>Impacto na comunidade: Demonstrando um padr\u00e3o de viola\u00e7\u00e3o da comunidade padr\u00f5es, incluindo comportamento inadequado sustentado, ass\u00e9dio de um indiv\u00edduo, ou agress\u00e3o ou deprecia\u00e7\u00e3o de classes de indiv\u00edduos.</p> <p>Consequ\u00eancia: banimento permanente de qualquer tipo de intera\u00e7\u00e3o p\u00fablica dentro do comunidade.</p>"},{"location":"user_guide/code_of_conduct/#atribuicao","title":"Atribui\u00e7\u00e3o","text":"<p>Este C\u00f3digo de Conduta \u00e9 adaptado do Contributor Covenant, vers\u00e3o 2.1, dispon\u00edvel em https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>As Diretrizes de Impacto na Comunidade foram inspiradas por Escada de aplica\u00e7\u00e3o do c\u00f3digo de conduta da Mozilla.</p> <p>Para obter respostas a perguntas comuns sobre este c\u00f3digo de conduta, consulte as Perguntas frequentes em https://www.contributor-covenant.org/faq. As tradu\u00e7\u00f5es est\u00e3o dispon\u00edveis em https://www.contributor-covenant.org/translations.</p>"},{"location":"user_guide/development/","title":"Guia de contribu\u00ed\u00e7\u00e3o (Desenvolvimento)","text":"<p>O desenvolvimento deste projeto segue algumas regras e conven\u00e7\u00f5es b\u00e1sicas. Como estilo de formata\u00e7\u00e3o de c\u00f3digo,</p>"},{"location":"user_guide/development/#codigo-de-conduta","title":"C\u00f3digo de conduta","text":"<p>Detalhes em docs/user_guide/code_of_conduct.md.</p>"},{"location":"user_guide/development/#padroes-aplicados","title":"Padr\u00f5es aplicados","text":"<p>Este projeto segue as recomenda\u00e7\u00f5es descritas em Tecnologias e Conven\u00e7\u00f5es Adotadas.</p>"},{"location":"user_guide/development/#prerequisitos","title":"Prerequisitos","text":"<ul> <li>Sistema Operacional Linux Like (preferencialmente) ou WSL</li> <li>git client</li> <li>python 3.10+</li> <li>pyenv</li> <li>poetry 1.2.0+ (preferencialmente) ou pip</li> </ul>"},{"location":"user_guide/development/#iniciando-ambiente-de-desenvolvimento","title":"Iniciando ambiente de desenvolvimento","text":"<p>Para definir a vers\u00e3o do Python para o ambiente, considerando o uso do poetry, e instalar as depend\u00eancias execute os comandos abaixo:</p> <pre><code>$ poetry env use 3.10\n$ poetry install\n</code></pre> <p>Estes comandos criar\u00e3o um ambiente virtual em Python, na vers\u00e3o especificada, apresentada no exemplo como 3.10, e instalar\u00e1 todas as depend\u00eancias fixadas em <code>pyproject.toml</code> com suas restri\u00e7\u00f5es especificadas em <code>poetry.lock</code>.</p> <p>Ap\u00f3s o ambiente criado com suas depend\u00eancias instaladas, execute o comando:</p> <pre><code>$ poetry run task setup\n</code></pre> <p>Este comando garantir\u00e1 que os hooks do projeto sejam ativados, e executados nos eventos apropriados.</p>"},{"location":"user_guide/development/#qualidade-de-codigo","title":"Qualidade de C\u00f3digo","text":"<p>\u00c9 utilizado de ferramentas validadoras de qualidade de c\u00f3digo est\u00e1tico, tamb\u00e9m denominadas linters.</p> <p>H\u00e1 uso das seguintes:</p> <ul> <li>black / blue</li> <li>isort</li> <li>mypy</li> <li>pydocstyle</li> <li>pylint</li> </ul>"},{"location":"user_guide/development/#seguranca","title":"Seguran\u00e7a","text":"<p>Tamb\u00e9m h\u00e1 preocupa\u00e7\u00e3o com a seguran\u00e7a do c\u00f3digo implementado, os pacotes <code>bandit</code>, <code>pip-audit</code> e <code>safety</code> s\u00e3o utilizados para monitoramento de seguran\u00e7a das depend\u00eancias.</p>"},{"location":"user_guide/development/#bandit","title":"bandit","text":"<p>Bandit \u00e9 uma ferramenta projetada para encontrar problemas de seguran\u00e7a comuns no c\u00f3digo Python. Para fazer isso, o Bandit processa cada arquivo, cria um AST a partir dele e executa os plug-ins apropriados nos nodos do AST. Depois que o Bandit terminar de escanear todos os arquivos, ele gerar\u00e1 um relat\u00f3rio. <pre><code>bandit -c pyproject.toml -r incolume/ test/\n</code></pre></p>"},{"location":"user_guide/development/#black","title":"black","text":"<p>O <code>black</code> \u00e9 classificado como Autoformator, s\u00e3o programas que refatoram seu c\u00f3digo para se adequar ao PEP 8 automaticamente. <pre><code>black --check incolume/ tests/\n</code></pre></p>"},{"location":"user_guide/development/#blue","title":"blue","text":"<p>o blue \u00e9 um autoformatador de c\u00f3digo um pouco menos intransigente do que o black, e segue a ideia de formatar automaticamente o c\u00f3digo Python, totalmente inspirada pelo black.</p> <pre><code>blue --check incolume/ tests/\n</code></pre>"},{"location":"user_guide/development/#flake8","title":"flake8","text":"<p>Flake8 \u00e9 um envolucro em torno das ferramentas: PyFlakes, pycodestyle e Roteiro McCabe de Ned Batchelder</p> <pre><code>flake8 --config pyproject.toml incolume/ tests/\n</code></pre>"},{"location":"user_guide/development/#pylama","title":"pylama","text":"<p>O <code>pylama</code> \u00e9 um envolucro que cont\u00e9m: PyFlakes, pycodestyle, McCabe. <pre><code>pylama incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#isort","title":"isort","text":"<p>O <code>isort</code> \u00e9 um utilit\u00e1rio para classificar as importa\u00e7\u00f5es em ordem alfab\u00e9tica e separadas automaticamente em se\u00e7\u00f5es e por tipo. <pre><code>isort incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#mypy","title":"mypy","text":"<p>O <code>Mypy</code> \u00e9 essencialmente um analizador de c\u00f3digo est\u00e1tico melhorado e com verificador de tipos, que pode detectar muitos erros de programa\u00e7\u00e3o analisando o c\u00f3digo, sem precisar execut\u00e1-lo. Ele possui um poderoso sistema de tipos com recursos como infer\u00eancia de tipos, digita\u00e7\u00e3o gradual, gen\u00e9ricos e tipos de uni\u00e3o. <pre><code>mypy incolumepy\n</code></pre></p>"},{"location":"user_guide/development/#pip-audit","title":"pip-audit","text":"<p>O <code>pip-audit</code> \u00e9 uma ferramenta para escanear pacotes em ambientes Python que possuem vulnerabilidades conhecidas. Este pacote faz uso do Python Packaging Advisory Database (https://github.com/pypa/advisory-database) atrav\u00e9s da API PyPI JSON como relat\u00f3rio de vulnerabilidade de c\u00f3digo</p> <pre><code>pip-audit\n</code></pre>"},{"location":"user_guide/development/#pydocstyle","title":"pydocstyle","text":"<p>O <code>pydocstyle</code> \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica para verificar a conformidade com as conven\u00e7\u00f5es docstring do Python. Ele suporta a maior parte do PEP 257, entretanto n\u00e3o deve ser considerado uma implementa\u00e7\u00e3o de refer\u00eancia. <pre><code>pydocstyle incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#pylint","title":"pylint","text":"<p>O <code>Pylint</code> \u00e9 uma ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico do Python que procura erros de programa\u00e7\u00e3o, ajuda a impor um padr\u00e3o de codifica\u00e7\u00e3o, detecta cheiros de c\u00f3digo e oferece sugest\u00f5es simples de refatora\u00e7\u00e3o. \u00c9 altamente configur\u00e1vel, possuindo pragmas especiais para controlar seus erros e avisos de dentro do seu c\u00f3digo, bem como de um extenso arquivo de configura\u00e7\u00e3o. Tamb\u00e9m \u00e9 poss\u00edvel escrever seus pr\u00f3prios plugins para adicionar suas pr\u00f3prias verifica\u00e7\u00f5es ou para estender o <code>pylint</code> de uma forma ou de outra. <pre><code>pylint incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#ruff","title":"ruff","text":"<p>O <code>ruff</code> \u00e9 um linter Python extremamente r\u00e1pido, codificado em Python. <pre><code>poetry run ruff check --preview incolume/ tests/\n</code></pre></p>"},{"location":"user_guide/development/#safety","title":"safety","text":"<p>O <code>safety</code> verifica as depend\u00eancias instaladas quanto a vulnerabilidades de seguran\u00e7a conhecidas. Por padr\u00e3o, ele usa o banco de dados de vulnerabilidades Python aberto Safety DB. <pre><code>safety check\n</code></pre></p>"},{"location":"user_guide/development/#ferramentas-de-automacao","title":"Ferramentas de Automa\u00e7\u00e3o","text":"<p>Para facilitar o trabalho, v\u00e1rias das tarefas est\u00e3o automatizadas pelo githooks, e/ou Makefile, e/ou tox e/ou taskipy.</p>"},{"location":"user_guide/development/#tox","title":"Tox","text":""},{"location":"user_guide/development/#verificacao-basica","title":"Verifica\u00e7\u00e3o b\u00e1sica","text":"<p>Na Verifica\u00e7\u00e3o b\u00e1sica engloba: - black - blue - isort - pydocstyle - mypy - pylint - py310 - py311</p> <pre><code>tox\n</code></pre>"},{"location":"user_guide/development/#verificacao-dos-testes-com-as-versoes-python-disponiveis","title":"Verifica\u00e7\u00e3o dos testes com as vers\u00f5es python dispon\u00edveis","text":"<pre><code>tox -e py310,py311\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-tres-linters-apenas-no-em-um-modulo","title":"Verifica\u00e7\u00e3o de tr\u00eas linters apenas no em um m\u00f3dulo","text":"<pre><code>tox -e pydocstyle,black,isort -- -k incolume/py/pack/module.py\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-todos-os-linters-configurados","title":"Verifica\u00e7\u00e3o de todos os linters configurados","text":"<pre><code>tox -e linters\n</code></pre>"},{"location":"user_guide/development/#verificacao-e-relatorio-de-cobertura","title":"Verifica\u00e7\u00e3o e relat\u00f3rio de cobertura","text":"<pre><code>tox -e stats\n</code></pre>"},{"location":"user_guide/development/#verificacao-resumida-de-seguranca","title":"Verifica\u00e7\u00e3o resumida de seguran\u00e7a","text":"<pre><code>tox -e safety\n</code></pre>"},{"location":"user_guide/development/#execucao-completa","title":"Execu\u00e7\u00e3o completa","text":"<p>Executa todas as verifica\u00e7\u00f5es dipon\u00edveis contidas no <code>tox</code>. <pre><code>tox -e ALL\n</code></pre></p>"},{"location":"user_guide/development/#makefile","title":"Makefile","text":"<p>O <code>Makefile</code> foi personalizado para rodar com as op\u00e7\u00f5es necess\u00e1rias. Com o help voc\u00ea ver\u00e1 todas as op\u00e7\u00f5es. Este comando \u00e9 exclusivo para linux like. <pre><code>make help\n</code></pre></p>"},{"location":"user_guide/development/#iniciar-ambiente-dev","title":"Iniciar ambiente dev","text":"<p>Atrav\u00e9s do <code>Makefile</code>, pode-se criar um ambiente virtual para o projeto, conforme a vers\u00e3o python predefinida, instalando todas as depend\u00eancias necess\u00e1rias, al\u00e9m de ativar as configura\u00e7\u00f5es em passos simples.</p> <pre><code>make setup\n</code></pre>"},{"location":"user_guide/development/#limpeza-basica-do-ambiente","title":"Limpeza b\u00e1sica do ambiente","text":"<p>Limpeza de arquivos tempor\u00e1rios, logs, compilados e afins. <pre><code>make clean\n</code></pre></p>"},{"location":"user_guide/development/#limpeza-profunda-do-ambiente","title":"Limpeza profunda do ambiente","text":"<p>Al\u00e9m da limpeza b\u00e1sica, s\u00e3o removidos dist, build, htmlcov, .tox, *_cache, e outros conte\u00fados gerados pelas ferramentas de desenvolvimento. <pre><code>make clean-all\n</code></pre></p>"},{"location":"user_guide/development/#gerar-a-documentacao-atualizada","title":"Gerar a documenta\u00e7\u00e3o atualizada","text":"<pre><code>make docsgen\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-seguranca-e-exposicao-de-motivos","title":"Verifica\u00e7\u00e3o de seguran\u00e7a e exposi\u00e7\u00e3o de motivos","text":"<pre><code>make safety\n</code></pre>"},{"location":"user_guide/development/#taskipy","title":"Taskipy","text":"<p>Com <code>taskipy</code> as tarefas s\u00e3o definidas puramente com Python em um arquivo e pode-se executar rotinas complexas com comandos simples.</p> <pre><code>$ poetry run task -l\n\nbandit          poetry run bandit -c pyproject.toml -r incolume/ test/\ncheck-all       Checking all\nclean           Shallow clean into environment (.pyc, .cache, .egg, .log, et all)\nclean-all       Deep cleanning into environment (dist, build, htmlcov, .tox, *_cache, et all)\ndocs-build      Generate documentation\ndocs-serve      Run server documentation\nlint            Checking all linters configurated\nlint_black      Checking with black\nlint_blue       Checking with blue\nlint_flake8     Checking with flake8\nlint_isort      Checking with isort\nlint_mypy       Checking with mypy\nlint_pydocstyle Checking with pydocstyle\nlint_pylint     Checking with pylint\npatch           Generate a patch Sematic Version\npremajor        poetry version premajor\npreminor        poetry version preminor\nprerelease      poetry version prerelease\nsafety          Check safety of packages into project.\nsec             Checking environment's safety\nchangelog       Update changelog file\nsetup           Configure environment develop\n</code></pre>"},{"location":"user_guide/keep-a-changelog/","title":"keep a changelog","text":""},{"location":"user_guide/keep-a-changelog/#o-que-e-um-changelog","title":"O que \u00e9 um changelog?","text":"<p>Um changelog \u00e9 um arquivo que cont\u00e9m uma lista selecionada, ordenada cronologicamente, de mudan\u00e7as significativas para cada vers\u00e3o de um projeto.</p>"},{"location":"user_guide/keep-a-changelog/#por-que-manter-um-changelog","title":"Por que manter um changelog?","text":"<p>Para facilitar que usu\u00e1rios e contribuidores vejam precisamente quais mudan\u00e7as significativas foram realizadas entre cada vers\u00e3o publicada de um projeto.</p>"},{"location":"user_guide/keep-a-changelog/#quem-precisa-de-um-changelog","title":"Quem precisa de um changelog?","text":"<p>Pessoas precisam. Seja consumidores ou desenvolvedores, os usu\u00e1rios finais de softwares s\u00e3o seres humanos que se preocupam com o que est\u00e1 no software. Quando o software muda, as pessoas querem saber por que e como.</p>"},{"location":"user_guide/keep-a-changelog/#como-fazer-um-bom-changelog","title":"Como fazer um bom changelog?","text":""},{"location":"user_guide/keep-a-changelog/#principios-fundamentais","title":"Princ\u00edpios fundamentais","text":"<ul> <li>Changelogs s\u00e3o para humanos, n\u00e3o m\u00e1quinas.</li> <li>Deve haver uma entrada para cada vers\u00e3o.</li> <li>Altera\u00e7\u00f5es do mesmo tipo devem ser agrupadas.</li> <li>Vers\u00f5es e se\u00e7\u00f5es devem ser vincul\u00e1veis (com links).</li> <li>A vers\u00e3o mais recente vem em primeiro lugar.</li> <li>A data de lan\u00e7amento de cada vers\u00e3o \u00e9 exibida.</li> <li>Mencione se voc\u00ea segue o versionamento sem\u00e2ntico.</li> </ul>"},{"location":"user_guide/keep-a-changelog/#tipos-de-mudancas","title":"Tipos de mudan\u00e7as","text":"<ul> <li>Added: (Adicionado) para novos recursos.</li> <li>Changed: (Modificado) para altera\u00e7\u00f5es em recursos existentes.</li> <li>Deprecated: (Obsoleto) para recursos que ser\u00e3o removidos nas pr\u00f3ximas vers\u00f5es.</li> <li>Removed: (Removido) para recursos removidos nesta vers\u00e3o.</li> <li>Fixed: (Corrigido) para qualquer corre\u00e7\u00e3o de bug.</li> <li>Security: (Seguran\u00e7a) em caso de vulnerabilidades.</li> </ul>"},{"location":"user_guide/keep-a-changelog/#como-aplicar-changelog-neste-projeto","title":"Como aplicar changelog neste projeto?","text":"<p>Este projeto utiliza o pacote python incolumepy.utils, que possui a    prerrogativa de criar um <code>CHANGELOG.md</code> automaticamente a partir das entradas do <code>git tag -n</code>.</p> <p>Exemplos: <pre><code>git tag -f Unreleased -m 'added: Adicionado orienta\u00e7\u00f5es sobre Keep a CHANGELOG.md em docs/user_guide/keep-a-chagelog.md'\ngit tag -f `poetry version -s` -m 'added: Adicionado orienta\u00e7\u00f5es sobre Keep a CHANGELOG.md em docs/user_guide/keep-a-chagelog.md'\ngit tag -f 1.0.0 -m 'Added: (Adicionado) para novos recursos;\nChanged: (Modificado) para altera\u00e7\u00f5es em recursos existentes;\nDeprecated: (Obsoleto) para recursos que ser\u00e3o removidos nas pr\u00f3ximas vers\u00f5es;\nRemoved: (Removido) para recursos removidos nesta vers\u00e3o;\nFixed: (Corrigido) para qualquer corre\u00e7\u00e3o de bug;\nSecurity: (Seguran\u00e7a) em caso de vulnerabilidades;'\n</code></pre></p>"},{"location":"user_guide/keep-a-changelog/#atualizar-o-changelogmd","title":"Atualizar o CHANGELOG.md","text":"<pre><code>task gcl\n</code></pre>"},{"location":"user_guide/keep-a-changelog/#referencia","title":"Refer\u00eancia","text":"<ul> <li>https://keepachangelog.com/pt-BR/1.0.0/</li> </ul>"},{"location":"user_guide/markdown/","title":"Markdown - Sint\u00e1xe b\u00e1sica","text":"<p>baseado em https://www.markdownguide.org/basic-syntax/</p>"},{"location":"user_guide/markdown/#visao-geral","title":"Vis\u00e3o geral","text":"<p>Quase todos os aplicativos Markdown suportam a sintaxe b\u00e1sica descrita no documento de design original do Markdown. Existem pequenas varia\u00e7\u00f5es e discrep\u00e2ncias entre os processadores Markdown \u2013 elas s\u00e3o anotadas em linha sempre que poss\u00edvel.</p>"},{"location":"user_guide/markdown/#titulos","title":"T\u00edtulos","text":"<p>Para criar um t\u00edtulo, adicione sinais num\u00e9ricos (<code>#</code>) antes de uma palavra ou frase. O n\u00famero de sinais num\u00e9ricos que voc\u00ea usa deve corresponder ao n\u00edvel do t\u00edtulo. Por exemplo, para criar um t\u00edtulo de n\u00edvel tr\u00eas (<code>&lt;h3&gt;</code>), use tr\u00eas sinais num\u00e9ricos (por exemplo, <code>### My Header</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code># Heading level 1</code> <code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code> Heading level 1 <code># Heading level 2</code> <code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code> Heading level 1 <code># Heading level 3</code> <code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code> Heading level 3 <code># Heading level 4</code> <code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code> Heading level 4 <code># Heading level 5</code> <code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code> Heading level 5 <code># Heading level 6</code> <code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code> Heading level 6"},{"location":"user_guide/markdown/#sintaxe-alternativa","title":"Sintaxe AlternativaHeading level 2","text":"<p>Como alternativa, na linha abaixo do texto, adicione qualquer n\u00famero de <code>==</code> caracteres para o n\u00edvel de t\u00edtulo 1 ou <code>--</code> caracteres para o n\u00edvel de t\u00edtulo 2.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>Heading level 1===============</code> <code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code> Heading level 1 <code>Heading level 2---------------</code> <code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code>"},{"location":"user_guide/markdown/#cabecalho-melhores-praticas","title":"Cabe\u00e7alho Melhores Pr\u00e1ticas","text":"<p>Os aplicativos de markdown n\u00e3o concordam sobre como lidar com a falta de espa\u00e7o entre os sinais num\u00e9ricos (<code>#</code>) e o nome do t\u00edtulo. Para compatibilidade, sempre coloque um espa\u00e7o entre os sinais num\u00e9ricos e o nome do t\u00edtulo.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code># Here's a Heading</code> <code>#Here's a Heading</code> <p>Voc\u00ea tamb\u00e9m deve colocar linhas em branco antes e depois de um t\u00edtulo para compatibilidade.</p> \u2705  Fa\u00e7a assim \u274c N\u00e3o assim <code>Try to put a blank line before...# Heading...and after a heading.</code> <code>Without blank lines, this might not look right.# Heading        Don't do this!</code>"},{"location":"user_guide/markdown/#paragrafos","title":"Par\u00e1grafos","text":"<p>Para criar par\u00e1grafos, use uma linha em branco para separar uma ou mais linhas de texto.</p> MarkDown HTML Sa\u00edda renderizada <code>Paragrafo1.Paragrafo2.</code> <code>&lt;p&gt;Paragrafo1.&lt;/p&gt;&lt;p&gt;Paragrafo2.&lt;/p&gt;</code> <code>Paragrafo1.Paragrafo2.</code>"},{"location":"user_guide/markdown/#melhores-praticas-de-paragrafo","title":"Melhores pr\u00e1ticas de par\u00e1grafo","text":"<p>A menos que o par\u00e1grafo esteja em uma lista, n\u00e3o recue os par\u00e1grafos com espa\u00e7os ou tabula\u00e7\u00f5es.</p> Observa\u00e7\u00e3o: se voc\u00ea precisar recuar par\u00e1grafos na sa\u00edda, consulte a se\u00e7\u00e3o sobre como recuar (tabula\u00e7\u00e3o)&lt; uma eu=3&gt;.  \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           Don't put tabs or spaces in front of your paragraphs.            Keep lines left-aligned like this. </code> <code>         \u00a0\u00a0\u00a0\u00a0This can result in unexpected         formatting problems.          \u00a0\u00a0Don't add tabs or spaces in front of paragraphs.         </code>"},{"location":"user_guide/markdown/#quebras-de-linha","title":"Quebras de linha","text":"<p>Para criar uma quebra de linha ou uma nova linha (<code>&lt;br&gt;</code>), termine uma linha com dois ou mais espa\u00e7os e digite return.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           This is the first line. \u00a0           And this is the second line.         </code> <code>&lt;p&gt;This is the first line.&lt;br&gt;          And this is the second line.&lt;/p&gt;</code> <p>Esta \u00e9 a primeira linha.         E esta \u00e9 a segunda linha.</p>"},{"location":"user_guide/markdown/#line-break-best-practices","title":"Pr\u00e1ticas recomendadas para quebra de linha","text":"<p>Voc\u00ea pode usar dois ou mais espa\u00e7os (comumente chamados de \u201cespa\u00e7o em branco \u00e0 direita\u201d) para quebras de linha em quase todos os aplicativos Markdown, mas isso \u00e9 controverso. \u00c9 dif\u00edcil ver espa\u00e7os em branco no final de um editor, e muitas pessoas acidentalmente ou intencionalmente colocam dois espa\u00e7os ap\u00f3s cada frase. Por esse motivo, voc\u00ea pode querer usar algo diferente de espa\u00e7os em branco \u00e0 direita para quebras de linha. Se seu aplicativo Markdown suportar HTML, voc\u00ea poder\u00e1 usar a tag HTML <code>&lt;br&gt;</code>.</p> <p>Para compatibilidade, use o espa\u00e7o em branco final ou a tag HTML <code>&lt;br&gt;</code> no final da linha.</p> <p>Existem duas outras op\u00e7\u00f5es que n\u00e3o recomendo usar. CommonMark e algumas outras linguagens de marca\u00e7\u00e3o leves permitem digitar uma barra invertida (<code>\\</code>) no final da linha, mas nem todos os aplicativos Markdown suportam isso, portanto n\u00e3o \u00e9 uma \u00f3tima op\u00e7\u00e3o de compatibilidade perspectiva. E pelo menos algumas linguagens de marca\u00e7\u00e3o leves n\u00e3o exigem nada no final da linha \u2014 basta digitar return e elas criar\u00e3o uma quebra de linha.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           First line with two spaces after. \u00a0           And the next line.            First line with the HTML tag after.&lt;br&gt;           And the next line. </code> <code>         First line with a backslash after.\\         And the next line.          First line with nothing after.         And the next line. </code>"},{"location":"user_guide/markdown/#enfase","title":"\u00canfase","text":"<p>Voc\u00ea pode adicionar \u00eanfase colocando o texto em negrito ou it\u00e1lico.</p>"},{"location":"user_guide/markdown/#bold","title":"Audacioso","text":"<p>Para texto em negrito, adicione dois asteriscos ou sublinhados antes e depois de uma palavra ou frase. Para colocar o meio de uma palavra em negrito para dar \u00eanfase, adicione dois asteriscos sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>I just love **bold text**.</code> <code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code> Adoro texto em negrito. <code>I just love __bold text__.</code> <code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code> Adoro texto em negrito. <code>Love**is**bold</code> <code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code> Amor\u00e9ousado"},{"location":"user_guide/markdown/#bold-best-practices","title":"Melhores pr\u00e1ticas ousadas","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos em negrito no meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           Love**is**bold         </code> <code>           Love__is__bold         </code>"},{"location":"user_guide/markdown/#italic","title":"it\u00e1lico","text":"<p>Para colocar o texto em it\u00e1lico, adicione um asterisco ou sublinhado antes e depois de uma palavra ou frase. Para colocar o meio de uma palavra em it\u00e1lico para dar \u00eanfase, adicione um asterisco sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>Italicized text is the *cat's meow*.</code> <code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code> O texto em it\u00e1lico \u00e9 o miau do gato. <code>Italicized text is the _cat's meow_.</code> <code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code> O texto em it\u00e1lico \u00e9 o miau do gato. <code>A*cat*meow</code> <code>A&lt;em&gt;cat&lt;/em&gt;meow</code> Umgatomiau"},{"location":"user_guide/markdown/#italic-best-practices","title":"Melhores pr\u00e1ticas em it\u00e1lico","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos para colocar em it\u00e1lico o meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           A*cat*meow         </code> <code>           A_cat_meow         </code>"},{"location":"user_guide/markdown/#bold-and-italic","title":"Negrito e It\u00e1lico","text":"<p>Para enfatizar o texto com negrito e it\u00e1lico ao mesmo tempo, adicione tr\u00eas asteriscos ou sublinhados antes e depois de uma palavra ou frase. Para colocar negrito e it\u00e1lico no meio de uma palavra para dar \u00eanfase, adicione tr\u00eas asteriscos sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>This text is ***really important***.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is ___really important___.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is __*really important*__.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is **_really important_**.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This is really***very***important text.</code> <code>This is really&lt;em&gt;&lt;strong&gt;very&lt;/strong&gt;&lt;/em&gt;important text.</code> Este \u00e9 realmenteum texto muitoimportante. Observa\u00e7\u00e3o: a ordem das tags <code>em</code> e <code>strong</code> pode ser invertida dependendo do processador Markdown que voc\u00ea usa. 39;est\u00e1 usando."},{"location":"user_guide/markdown/#bold-and-italic-best-practices","title":"Pr\u00e1ticas recomendadas para negrito e it\u00e1lico","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos para negrito e it\u00e1lico no meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           This is really***very***important text.         </code> <code>           This is really___very___important text.         </code>"},{"location":"user_guide/markdown/#citacoes-em-bloco","title":"Cita\u00e7\u00f5es em bloco","text":"<p>Para criar uma cita\u00e7\u00e3o em bloco, adicione um <code>&gt;</code> antes de um par\u00e1grafo.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p>"},{"location":"user_guide/markdown/#blockquotes-with-multiple-paragraphs","title":"Cita\u00e7\u00f5es em bloco com v\u00e1rios par\u00e1grafos","text":"<p>Aspas em bloco podem conter v\u00e1rios par\u00e1grafos. Adicione um <code>&gt;</code> nas linhas em branco entre os par\u00e1grafos.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n&gt;\n&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p> <p>A Bruxa ordenou-lhe que limpasse as panelas e as chaleiras, varresse o ch\u00e3o e mantivesse o fogo alimentado com lenha.</p>"},{"location":"user_guide/markdown/#nested-blockquotes","title":"Cita\u00e7\u00f5es aninhadas","text":"<p>Aspas em bloco podem ser aninhadas. Adicione um <code>&gt;&gt;</code> antes do par\u00e1grafo que voc\u00ea deseja aninhar.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n&gt;\n&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p> <p>A Bruxa ordenou-lhe que limpasse as panelas e as chaleiras, varresse o ch\u00e3o e mantivesse o fogo alimentado com lenha.</p>"},{"location":"user_guide/markdown/#blockquotes-with-other-elements","title":"Blockquotes com outros elementos","text":"<p>Blockquotes podem conter outros elementos formatados em Markdown. Nem todos os elementos podem ser usados \u200b\u200b\u2013 voc\u00ea precisar\u00e1 experimentar para ver quais funcionam.</p> <pre><code>&gt; #### The quarterly results look great!\n&gt;\n&gt; - Revenue was off the chart.\n&gt; - Profits were higher than ever.\n&gt;\n&gt;  *Everything* is going according to **plan**.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p>"},{"location":"user_guide/markdown/#the-quarterly-results-look-great","title":"Os resultados trimestrais parecem \u00f3timos!","text":"<ul> <li>A receita estava fora do gr\u00e1fico.</li> <li>Os lucros foram maiores do que nunca.</li> </ul> <p>Tudo est\u00e1 indo de acordo com o planejado.</p>"},{"location":"user_guide/markdown/#blockquotes-best-practices","title":"Pr\u00e1ticas recomendadas para cita\u00e7\u00f5es em bloco","text":"<p>Para compatibilidade, coloque linhas em branco antes e depois das aspas.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         Try to put a blank line before...          &gt; This is a blockquote          ...and after a blockquote.         </code> <code>         Without blank lines, this might not look right.         &gt; This is a blockquote         Don't do this!         </code>"},{"location":"user_guide/markdown/#listas","title":"Listas","text":"<p>Voc\u00ea pode organizar itens em listas ordenadas e n\u00e3o ordenadas.</p>"},{"location":"user_guide/markdown/#ordered-lists","title":"Listas ordenadas","text":"<p>Para criar uma lista ordenada, adicione itens de linha com n\u00fameros seguidos de pontos. Os n\u00fameros n\u00e3o precisam estar em ordem num\u00e9rica, mas a lista deve come\u00e7ar com o n\u00famero um.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>         1. First item         2. Second item         3. Third item         4. Fourth item       </code> <code>         &lt;ol&gt;           \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;         &lt;/ol&gt;       </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           1. Second item           1. Third item           1. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           8. Second item           3. Third item           5. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           2. Second item           3. Third item           \u00a0\u00a0\u00a0\u00a01. Indented item           \u00a0\u00a0\u00a0\u00a02. Indented item           4. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item               \u00a0\u00a0\u00a0\u00a0&lt;ol&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;               \u00a0\u00a0\u00a0\u00a0&lt;/ol&gt;             \u00a0\u00a0&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item             <ol> <li>Item recuado</li> <li>Item recuado</li> </ol> </li> <li>Quarto item</li> </ol>"},{"location":"user_guide/markdown/#ordered-list-best-practices","title":"Melhores pr\u00e1ticas de lista ordenada","text":"<p>CommonMark e algumas outras linguagens de marca\u00e7\u00e3o leves permitem usar par\u00eanteses (<code>)</code>) como delimitador (por exemplo, <code>1) First item</code>), mas nem todo Markdown os aplicativos suportam isso, portanto n\u00e3o \u00e9 uma \u00f3tima op\u00e7\u00e3o do ponto de vista de compatibilidade. Para fins de compatibilidade, use apenas pontos.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           1. First item           2. Second item         </code> <code>           1) First item           2) Second item         </code>"},{"location":"user_guide/markdown/#unordered-lists","title":"Listas n\u00e3o ordenadas","text":"<p>Para criar uma lista n\u00e3o ordenada, adicione travess\u00f5es (<code>-</code>), asteriscos (<code>*</code>) ou sinais de mais (<code>+</code>) na frente dos itens de linha. Recue um ou mais itens para criar uma lista aninhada.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           - First item           - Second item           - Third item           - Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           * First item           * Second item           * Third item           * Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           + First item           + Second item           + Third item           + Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           - First item           - Second item           - Third item           \u00a0\u00a0\u00a0\u00a0- Indented item           \u00a0\u00a0\u00a0\u00a0- Indented item           - Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item               \u00a0\u00a0\u00a0\u00a0&lt;ul&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;               \u00a0\u00a0\u00a0\u00a0&lt;/ul&gt;             \u00a0\u00a0&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item             <ul> <li>Item recuado</li> <li>Item recuado</li> </ul> </li> <li>Quarto item</li> </ul>"},{"location":"user_guide/markdown/#starting-unordered-list-items-with-numbers","title":"Iniciando itens de lista n\u00e3o ordenados com n\u00fameros","text":"<p>Se precisar iniciar um item de lista n\u00e3o ordenado com um n\u00famero seguido de um ponto final, voc\u00ea pode usar uma barra invertida (<code>\\</code>) para escapar&lt; /span&gt; o ponto final.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           - 1968\\. A great year!           - I think 1969 was second best.         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;1968. A great year!&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;I think 1969 was second best.&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>1968. Um \u00f3timo ano!</li> <li>Acho que 1969 foi o segundo melhor.</li> </ul>"},{"location":"user_guide/markdown/#unordered-list-best-practices","title":"Pr\u00e1ticas recomendadas para lista n\u00e3o ordenada","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com diferentes delimitadores na mesma lista. Para compatibilidade, n\u00e3o misture e combine delimitadores na mesma lista \u2013 escolha um e mantenha-o.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           - First item           - Second item           - Third item           - Fourth item         </code> <code>           + First item           * Second item           - Third item           + Fourth item         </code>"},{"location":"user_guide/markdown/#adding-elements-in-lists","title":"Adicionando Elementos em Listas","text":"<p>Para adicionar outro elemento a uma lista preservando a continuidade da lista, recue o elemento com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o, conforme mostrado nos exemplos a seguir.</p> Dica: se as coisas n\u00e3o aparecerem como voc\u00ea espera, verifique se voc\u00ea recuou os elementos da lista com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o."},{"location":"user_guide/markdown/#paragraphs","title":"Par\u00e1grafos","text":"<pre><code>* This is the first list item.\n* Here's the second list item.\n\n    I need to add another paragraph below the second list item.\n\n* And here's the third list item.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ul> <li>Este \u00e9 o primeiro item da lista.</li> <li> <p>Aqui est\u00e1 o segundo item da lista.</p> <p>Preciso adicionar outro par\u00e1grafo abaixo do segundo item da lista.</p> </li> <li>E aqui est\u00e1 o terceiro item da lista.</li> </ul>"},{"location":"user_guide/markdown/#blockquotes","title":"Cita\u00e7\u00f5es em bloco","text":"<pre><code>* This is the first list item.\n* Here's the second list item.\n\n    &gt; A blockquote would look great below the second list item.\n\n* And here's the third list item.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ul> <li>Este \u00e9 o primeiro item da lista.</li> <li> <p>Aqui est\u00e1 o segundo item da lista.</p> <p>Uma cita\u00e7\u00e3o em bloco ficaria \u00f3tima abaixo do segundo item da lista.</p> </li> <li>E aqui est\u00e1 o terceiro item da lista.</li> </ul>"},{"location":"user_guide/markdown/#code-blocks-1","title":"Blocos de c\u00f3digo","text":"<p>Blocos de c\u00f3digo normalmente s\u00e3o recuados com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o. Quando estiverem em uma lista, recue-os com oito espa\u00e7os ou duas tabula\u00e7\u00f5es.</p> <pre><code>1. Open the file.\n2. Find the following code block on line 21:\n\n        &lt;html&gt;\n          &lt;head&gt;\n            &lt;title&gt;Test&lt;/title&gt;\n          &lt;/head&gt;\n\n3. Update the title to match the name of your website.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Abra o arquivo.</li> <li> <p>Encontre o seguinte bloco de c\u00f3digo na linha 21:</p> <pre><code> &lt;html&gt;\n   &lt;head&gt;\n     &lt;title&gt;Test&lt;/title&gt;\n   &lt;/head&gt;\n</code></pre> </li> <li>Atualize o t\u00edtulo para corresponder ao nome do seu site.</li> </ol>"},{"location":"user_guide/markdown/#images","title":"Imagens","text":"<pre><code>1. Open the file containing the Linux mascot.\n2. Marvel at its beauty.\n\n    ![Tux, the Linux mascot](/assets/images/tux.png)\n\n3. Close the file.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Abra o arquivo que cont\u00e9m o mascote do Linux.</li> <li> <p>Maravilhe-se com sua beleza.</p> <p></p> </li> <li>Feche o arquivo.</li> </ol>"},{"location":"user_guide/markdown/#lists","title":"Listas","text":"<p>Voc\u00ea pode aninhar uma lista n\u00e3o ordenada em uma lista ordenada ou vice-versa.</p> <pre><code>1. First item\n2. Second item\n3. Third item\n    - Indented item\n    - Indented item\n4. Fourth item\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item     <ul> <li>Item recuado</li> <li>Item recuado</li> </ul> </li> <li>Quarto item</li> </ol>"},{"location":"user_guide/markdown/#codigo","title":"C\u00f3digo","text":"<p>Para denotar uma palavra ou frase como c\u00f3digo, coloque-a entre crases (<code>`</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>At the command prompt, type `nano`.</code> <code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;. </code> No prompt de comando, digite <code>nano</code>."},{"location":"user_guide/markdown/#escaping-backticks","title":"Escapando de crases","text":"<p>Se a palavra ou frase que voc\u00ea deseja denotar como c\u00f3digo incluir um ou mais crases, voc\u00ea poder\u00e1 escapar dela colocando a palavra ou frase entre crases duplos (<code>``</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>``Use `code` in your Markdown file.``</code> <code>&lt;code&gt;Use `code` in your Markdown file.&lt;/code&gt;</code> <code>Use `code` in your Markdown file.</code>"},{"location":"user_guide/markdown/#code-blocks","title":"Blocos de c\u00f3digo","text":"<p>Para criar blocos de c\u00f3digo, recue cada linha do bloco com pelo menos quatro espa\u00e7os ou uma tabula\u00e7\u00e3o.</p> <pre><code>    &lt;html&gt;\n      &lt;head&gt;\n      &lt;/head&gt;\n    &lt;/html&gt;\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <pre><code>&lt;html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n&lt;/html&gt;\n</code></pre> Observa\u00e7\u00e3o: para criar blocos de c\u00f3digo sem recuo de linhas, use blocos de c\u00f3digo protegidos."},{"location":"user_guide/markdown/#regras-horizontais","title":"Regras horizontais","text":"<p>Para criar uma regra horizontal, use tr\u00eas ou mais asteriscos (<code>***</code>), travess\u00f5es (<code>---</code>) ou sublinhados (<code>___</code>) em uma linha sozinhos.</p> <pre><code>***\n\n---\n\n_________________\n</code></pre> <p>A sa\u00edda renderizada de todos os tr\u00eas parece id\u00eantica:</p>"},{"location":"user_guide/markdown/#horizontal-rule-best-practices","title":"Pr\u00e1ticas recomendadas para regras horizontais","text":"<p>Para compatibilidade, coloque linhas em branco antes e depois das r\u00e9guas horizontais.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         Try to put a blank line before...          ---          ...and after a horizontal rule.         </code> <code>         Without blank lines, this would be a heading.         ---         Don't do this!         </code>"},{"location":"user_guide/markdown/#ligacoes","title":"Liga\u00e7\u00f5es","text":"<p>Para criar um link, coloque o texto do link entre colchetes (por exemplo, <code>[Duck Duck Go]</code>) e siga-o imediatamente com o URL entre par\u00eanteses (por exemplo, <code>(https://duckduckgo.com)</code>).</p> <pre><code>My favorite search engine is [Duck Duck Go](https://duckduckgo.com).\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Meu mecanismo de pesquisa favorito \u00e9 Duck Duck Go.</p> Observa\u00e7\u00e3o: para vincular a um elemento na mesma p\u00e1gina, consulte vincular a IDs de cabe\u00e7alho. Para criar um link que abre em uma nova guia ou janela, consulte a se\u00e7\u00e3o sobre destinos de link."},{"location":"user_guide/markdown/#adding-titles","title":"Adicionando t\u00edtulos","text":"<p>Opcionalmente, voc\u00ea pode adicionar um t\u00edtulo para um link. Isso aparecer\u00e1 como uma dica quando o usu\u00e1rio passar o mouse sobre o link. Para adicionar um t\u00edtulo, coloque-o entre aspas ap\u00f3s o URL.</p> <pre><code>My favorite search engine is [Duck Duck Go](https://duckduckgo.com \"The best search engine for privacy\").\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Meu mecanismo de pesquisa favorito \u00e9 Duck Duck Go.</p>"},{"location":"user_guide/markdown/#urls-and-email-addresses","title":"URLs e endere\u00e7os de e-mail","text":"<p>Para transformar rapidamente um URL ou endere\u00e7o de e-mail em um link, coloque-o entre colchetes angulares.</p> <pre><code>&lt;https://www.markdownguide.org&gt;\n&lt;fake@example.com&gt;\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>https://www.markdownguide.org fake@example.com</p>"},{"location":"user_guide/markdown/#formatting-links","title":"Formatando links","text":"<p>Para enfatizar links, adicione asteriscos antes e depois dos colchetes e par\u00eanteses. Para denotar links como c\u00f3digo, adicione crases entre colchetes.</p> <pre><code>I love supporting the **[EFF](https://eff.org)**.\nThis is the *[Markdown Guide](https://www.markdownguide.org)*.\nSee the section on [`code`](#code).\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Adoro apoiar a EFF. Este \u00e9 o Guia de descontos. Consulte a se\u00e7\u00e3o sobre <code>code</code>.</p>"},{"location":"user_guide/markdown/#reference-style-links","title":"Links de estilo de refer\u00eancia","text":"<p>Links de estilo de refer\u00eancia s\u00e3o um tipo especial de link que torna os URLs mais f\u00e1ceis de exibir e ler no Markdown. Os links de estilo de refer\u00eancia s\u00e3o constru\u00eddos em duas partes: a parte que voc\u00ea mant\u00e9m alinhada ao seu texto e a parte que voc\u00ea armazena em outro lugar do arquivo para manter o texto f\u00e1cil de ler.</p>"},{"location":"user_guide/markdown/#formatting-the-first-part-of-the-link","title":"Formatando a primeira parte do link","text":"<p>A primeira parte de um link de estilo de refer\u00eancia \u00e9 formatada com dois conjuntos de colchetes. O primeiro conjunto de colchetes circunda o texto que deve aparecer vinculado. O segundo conjunto de colchetes exibe um r\u00f3tulo usado para apontar para o link que voc\u00ea est\u00e1 armazenando em outro lugar do documento.</p> <p>Embora n\u00e3o seja obrigat\u00f3rio, voc\u00ea pode incluir um espa\u00e7o entre o primeiro e o segundo conjunto de colchetes. O r\u00f3tulo no segundo conjunto de colchetes n\u00e3o diferencia mai\u00fasculas de min\u00fasculas e pode incluir letras, n\u00fameros, espa\u00e7os ou pontua\u00e7\u00e3o.</p> <p>Isso significa que os seguintes formatos de exemplo s\u00e3o aproximadamente equivalentes para a primeira parte do link:</p> <ul> <li><code>[hobbit-hole][1]</code></li> <li><code>[hobbit-hole] [1]</code></li> </ul>"},{"location":"user_guide/markdown/#formatting-the-second-part-of-the-link","title":"Formatando a segunda parte do link","text":"<p>A segunda parte de um link de estilo de refer\u00eancia \u00e9 formatada com os seguintes atributos:</p> <ol> <li>O r\u00f3tulo, entre colchetes, seguido imediatamente por dois pontos e pelo menos um espa\u00e7o (por exemplo, <code>[label]: </code>).</li> <li>O URL do link, que voc\u00ea pode colocar opcionalmente entre colchetes angulares.</li> <li>O t\u00edtulo opcional do link, que voc\u00ea pode colocar entre aspas duplas, aspas simples ou par\u00eanteses.</li> </ol> <p>Isso significa que os formatos de exemplo a seguir s\u00e3o aproximadamente equivalentes para a segunda parte do link:</p> <ul> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles'</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; \"Hobbit lifestyles\"</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; 'Hobbit lifestyles'</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li> </ul> <p>Voc\u00ea pode colocar esta segunda parte do link em qualquer lugar do seu documento Markdown. Algumas pessoas os colocam imediatamente ap\u00f3s o par\u00e1grafo em que aparecem, enquanto outras os colocam no final do documento (como notas finais ou de rodap\u00e9).</p>"},{"location":"user_guide/markdown/#an-example-putting-the-parts-together","title":"Um exemplo juntando as pe\u00e7as","text":"<p>Digamos que voc\u00ea adicione um URL como um link de URL padr\u00e3o a um par\u00e1grafo e ele ficar\u00e1 assim no Markdown:</p> <pre><code>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\neat: it was a [hobbit-hole](https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"), and that means comfort.\n</code></pre> <p>Embora possa apontar para informa\u00e7\u00f5es adicionais interessantes, o URL exibido realmente n\u00e3o acrescenta muito ao texto bruto existente, a n\u00e3o ser torn\u00e1-lo mais dif\u00edcil de ler. Para corrigir isso, voc\u00ea pode formatar o URL assim:</p> <pre><code>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\neat: it was a [hobbit-hole][1], and that means comfort.\n\n[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; \"Hobbit lifestyles\"\n</code></pre> <p>Em ambos os casos acima, a sa\u00edda renderizada seria id\u00eantica:</p> <p>Em um buraco no ch\u00e3o vivia um hobbit. N\u00e3o um buraco nojento, sujo e \u00famido, cheio de pontas de minhocas e com cheiro de lodo, nem ainda um buraco seco, vazio e arenoso, sem nada onde sentar ou comer: era um toca do hobbit, e isso significa conforto.</p> <p>e o HTML do link seria:</p> <pre><code>&lt;a href=\"https://en.wikipedia.org/wiki/Hobbit#Lifestyle\" title=\"Hobbit lifestyles\"&gt;hobbit-hole&lt;/a&gt;\n</code></pre>"},{"location":"user_guide/markdown/#link-best-practices","title":"Vincular pr\u00e1ticas recomendadas","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com espa\u00e7os no meio de um URL. Para compatibilidade, tente codificar em URL quaisquer espa\u00e7os com <code>%20</code>. Como alternativa, se seu aplicativo Markdown suportar HTML, voc\u00ea poder\u00e1 usar a tag HTML <code>a</code>.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         [link](https://www.example.com/my%20great%20page)          &lt;a href=\"https://www.example.com/my great page\"&gt;link&lt;/a&gt; </code> <code>         [link](https://www.example.com/my great page) </code> <p>Par\u00eanteses no meio de uma URL tamb\u00e9m podem ser problem\u00e1ticos. Para compatibilidade, tente codificar em URL o par\u00eantese de abertura (<code>(</code>) com <code>%28</code> e o par\u00eantese de fechamento (<code>)</code>) com ., voc\u00ea poder\u00e1 usar a tag HTML suportar HTML<code>%29</code>. Como alternativa, se seu aplicativo Markdown <code>a</code></p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         [a novel](https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_%28novel%29)          &lt;a href=\"https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel)\"&gt;a novel&lt;/a&gt; </code> <code>         [a novel](https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel))         </code>"},{"location":"user_guide/markdown/#imagens","title":"Imagens","text":"<p>Para adicionar uma imagem, adicione um ponto de exclama\u00e7\u00e3o (<code>!</code>), seguido de texto alternativo entre colchetes e o caminho ou URL do recurso de imagem entre par\u00eanteses. Opcionalmente, voc\u00ea pode adicionar um t\u00edtulo entre aspas ap\u00f3s o caminho ou URL.</p> <pre><code>![The San Juan Mountains are beautiful!](/assets/images/san-juan-mountains.jpg \"San Juan Mountains\")\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p></p> Observa\u00e7\u00e3o: para redimensionar uma imagem, consulte a se\u00e7\u00e3o sobre tamanho da imagem. Para adicionar uma legenda, consulte a se\u00e7\u00e3o legendas de imagens."},{"location":"user_guide/markdown/#linking-images","title":"Vinculando imagens","text":"<p>Para adicionar um link a uma imagem, coloque o Markdown da imagem entre colchetes e adicione o link entre par\u00eanteses.</p> <pre><code>[![An old rock in the desert](/assets/images/shiprock.jpg \"Shiprock, New Mexico by Beau Rogers\")](https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv)\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p>"},{"location":"user_guide/markdown/#personagens-escapando","title":"Personagens escapando","text":"<p>Para exibir um caractere literal que de outra forma seria usado para formatar texto em um documento Markdown, adicione uma barra invertida (<code>\\</code>) na frente do caractere.</p> <pre><code>\\* Without the backslash, this would be a bullet in an unordered list.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>* Sem a barra invertida, isso seria um marcador em uma lista n\u00e3o ordenada.</p>"},{"location":"user_guide/markdown/#characters-you-can-escape","title":"Personagens dos quais voc\u00ea pode escapar","text":"<p>Voc\u00ea pode usar uma barra invertida para escapar dos seguintes caracteres.</p> Personagem Nome \\ barra invertida ` crases (veja tamb\u00e9m escapando de crases no c\u00f3digo) * asterisco _ sublinhado { } aparelho encaracolado [ ] colchetes &lt; &gt; colchetes angulares ( ) par\u00eanteses # sinal de libra + sinal de mais - sinal de menos (h\u00edfen) . ponto ! ponto de exclama\u00e7\u00e3o | pipe (veja tamb\u00e9m escapamento de pipe em tabelas)"},{"location":"user_guide/markdown/#html","title":"HTML","text":"<p>Muitos aplicativos Markdown permitem usar tags HTML em texto formatado em Markdown. Isso \u00e9 \u00fatil se voc\u00ea preferir certas tags HTML \u00e0 sintaxe Markdown. Por exemplo, algumas pessoas acham mais f\u00e1cil usar tags HTML para imagens. Usar HTML tamb\u00e9m \u00e9 \u00fatil quando voc\u00ea precisa alterar os atributos de um elemento, como especificar a cor do texto ou alterar a largura de uma imagem.</p> <p>Para usar HTML, coloque as tags no texto do seu arquivo formatado em Markdown.</p> <pre><code>This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Esta palavra est\u00e1 em negrito. Esta palavra est\u00e1 em it\u00e1lico.</p>"},{"location":"user_guide/markdown/#html-best-practices","title":"Pr\u00e1ticas recomendadas de HTML","text":"<p>Por motivos de seguran\u00e7a, nem todos os aplicativos Markdown suportam HTML em documentos Markdown. Em caso de d\u00favida, verifique a documenta\u00e7\u00e3o do seu aplicativo Markdown. Alguns aplicativos suportam apenas um subconjunto de tags HTML.</p> <p>Use linhas em branco para separar elementos HTML em n\u00edvel de bloco, como <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code> e <code>&lt;p&gt;</code> do conte\u00fado circundante. Tente n\u00e3o recuar as tags com tabula\u00e7\u00f5es ou espa\u00e7os, pois isso pode interferir na formata\u00e7\u00e3o.</p> <p>Voc\u00ea n\u00e3o pode usar a sintaxe Markdown dentro de tags HTML em n\u00edvel de bloco. Por exemplo, <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> n\u00e3o funcionar\u00e1.</p> <pre><code>      &lt;div class=\"card bg-light mb-3\" style=\"max-width: 100%; margin-top: 50px;\"&gt;\n</code></pre> Quer saber mais sobre Markdown? <p>       N\u00e3o pare agora! \ud83d\ude80 Marque o reposit\u00f3rio GitHub e digite seu endere\u00e7o de e-mail abaixo para receber novos tutoriais do Markdown por e-mail. Sem spam!</p> Ficar atualizado <pre><code>    &lt;/div&gt;\n</code></pre>"},{"location":"user_guide/markdown/#take-your-markdown-skills-to-the-next-level","title":"Leve suas habilidades de Markdown para o pr\u00f3ximo n\u00edvel.","text":"<p>Aprenda Markdown em 60 p\u00e1ginas. Projetado tanto para iniciantes quanto para especialistas, o livro The Markdown Guide \u00e9 uma refer\u00eancia abrangente que tem tudo que voc\u00ea precisa para come\u00e7ar e dominar a sintaxe do Markdown.</p> Obtenha o livro"},{"location":"user_guide/markdown/#emojis","title":"Emojis","text":"<p>Emoji para MarkDown</p>"},{"location":"user_guide/markdown/#people","title":"People","text":":bowtie: <code>:bowtie:</code> <code>:smile:</code> <code>:laughing:</code> <code>:blush:</code> <code>:smiley:</code> <code>:relaxed:</code> <code>:smirk:</code> <code>:heart_eyes:</code> <code>:kissing_heart:</code> <code>:kissing_closed_eyes:</code> <code>:flushed:</code> <code>:relieved:</code> <code>:satisfied:</code> <code>:grin:</code> <code>:wink:</code> <code>:stuck_out_tongue_winking_eye:</code> <code>:stuck_out_tongue_closed_eyes:</code> <code>:grinning:</code> <code>:kissing:</code> <code>:kissing_smiling_eyes:</code> <code>:stuck_out_tongue:</code> <code>:sleeping:</code> <code>:worried:</code> <code>:frowning:</code> <code>:anguished:</code> <code>:open_mouth:</code> <code>:grimacing:</code> <code>:confused:</code> <code>:hushed:</code> <code>:expressionless:</code> <code>:unamused:</code> <code>:sweat_smile:</code> <code>:sweat:</code> <code>:disappointed_relieved:</code> <code>:weary:</code> <code>:pensive:</code> <code>:disappointed:</code> <code>:confounded:</code> <code>:fearful:</code> <code>:cold_sweat:</code> <code>:persevere:</code> <code>:cry:</code> <code>:sob:</code> <code>:joy:</code> <code>:astonished:</code> <code>:scream:</code> :neckbeard: <code>:neckbeard:</code> <code>:tired_face:</code> <code>:angry:</code> <code>:rage:</code> <code>:triumph:</code> <code>:sleepy:</code> <code>:yum:</code> <code>:mask:</code> <code>:sunglasses:</code> <code>:dizzy_face:</code> <code>:imp:</code> <code>:smiling_imp:</code> <code>:neutral_face:</code> <code>:no_mouth:</code> <code>:innocent:</code> <code>:alien:</code> <code>:yellow_heart:</code> <code>:blue_heart:</code> <code>:purple_heart:</code> <code>:heart:</code> <code>:green_heart:</code> <code>:broken_heart:</code> <code>:heartbeat:</code> <code>:heartpulse:</code> <code>:two_hearts:</code> <code>:revolving_hearts:</code> <code>:cupid:</code> <code>:sparkling_heart:</code> <code>:sparkles:</code> <code>:star:</code> <code>:star2:</code> <code>:dizzy:</code> <code>:boom:</code> <code>:collision:</code> <code>:anger:</code> <code>:exclamation:</code> <code>:question:</code> <code>:grey_exclamation:</code> <code>:grey_question:</code> <code>:zzz:</code> <code>:dash:</code> <code>:sweat_drops:</code> <code>:notes:</code> <code>:musical_note:</code> <code>:fire:</code> <code>:hankey:</code> <code>:poop:</code> <code>:shit:</code> <code>:+1:</code> <code>:thumbsup:</code> <code>:-1:</code> <code>:thumbsdown:</code> <code>:ok_hand:</code> <code>:punch:</code> :facepunch: <code>:facepunch:</code> <code>:fist:</code> <code>:v:</code> <code>:wave:</code> :hand: <code>:hand:</code> <code>:raised_hand:</code> <code>:open_hands:</code> <code>:point_up:</code> <code>:point_down:</code> <code>:point_left:</code> <code>:point_right:</code> <code>:raised_hands:</code> <code>:pray:</code> <code>:point_up_2:</code> <code>:clap:</code> <code>:muscle:</code> <code>:metal:</code> :fu: <code>:fu:</code> <code>:walking:</code> <code>:runner:</code> :running: <code>:running:</code> <code>:couple:</code> <code>:family:</code> <code>:two_men_holding_hands:</code> <code>:two_women_holding_hands:</code> <code>:dancer:</code> <code>:dancers:</code> <code>:ok_woman:</code> <code>:no_good:</code> <code>:information_desk_person:</code> <code>:raising_hand:</code> :bride_with_veil: <code>:bride_with_veil:</code> <code>:person_with_pouting_face:</code> <code>:person_frowning:</code> <code>:bow:</code> <code>:couplekiss:</code> <code>:couple_with_heart:</code> <code>:massage:</code> <code>:haircut:</code> <code>:nail_care:</code> <code>:boy:</code> <code>:girl:</code> <code>:woman:</code> <code>:man:</code> <code>:baby:</code> <code>:older_woman:</code> <code>:older_man:</code> <code>:person_with_blond_hair:</code> <code>:man_with_gua_pi_mao:</code> <code>:man_with_turban:</code> <code>:construction_worker:</code> <code>:cop:</code> <code>:angel:</code> <code>:princess:</code> <code>:smiley_cat:</code> <code>:smile_cat:</code> <code>:heart_eyes_cat:</code> <code>:kissing_cat:</code> <code>:smirk_cat:</code> <code>:scream_cat:</code> <code>:crying_cat_face:</code> <code>:joy_cat:</code> <code>:pouting_cat:</code> <code>:japanese_ogre:</code> <code>:japanese_goblin:</code> <code>:see_no_evil:</code> <code>:hear_no_evil:</code> <code>:speak_no_evil:</code> <code>:guardsman:</code> <code>:skull:</code> <code>:feet:</code> <code>:lips:</code> <code>:kiss:</code> <code>:droplet:</code> <code>:ear:</code> <code>:eyes:</code> <code>:nose:</code> <code>:tongue:</code> <code>:love_letter:</code> <code>:bust_in_silhouette:</code> <code>:busts_in_silhouette:</code> <code>:speech_balloon:</code> <code>:thought_balloon:</code> :feelsgood: <code>:feelsgood:</code> :finnadie: <code>:finnadie:</code> :goberserk: <code>:goberserk:</code> :godmode: <code>:godmode:</code> :hurtrealbad: <code>:hurtrealbad:</code> :rage1: <code>:rage1:</code> :rage2: <code>:rage2:</code> :rage3: <code>:rage3:</code> :rage4: <code>:rage4:</code> :suspect: <code>:suspect:</code> :trollface: <code>:trollface:</code>"},{"location":"user_guide/markdown/#nature","title":"Nature","text":"<code>:sunny:</code> <code>:umbrella:</code> <code>:cloud:</code> <code>:snowflake:</code> <code>:snowman:</code> <code>:zap:</code> <code>:cyclone:</code> <code>:foggy:</code> <code>:ocean:</code> <code>:cat:</code> <code>:dog:</code> <code>:mouse:</code> <code>:hamster:</code> <code>:rabbit:</code> <code>:wolf:</code> <code>:frog:</code> <code>:tiger:</code> <code>:koala:</code> <code>:bear:</code> <code>:pig:</code> <code>:pig_nose:</code> <code>:cow:</code> <code>:boar:</code> <code>:monkey_face:</code> <code>:monkey:</code> <code>:horse:</code> <code>:racehorse:</code> <code>:camel:</code> <code>:sheep:</code> <code>:elephant:</code> <code>:panda_face:</code> <code>:snake:</code> <code>:bird:</code> <code>:baby_chick:</code> <code>:hatched_chick:</code> <code>:hatching_chick:</code> <code>:chicken:</code> <code>:penguin:</code> <code>:turtle:</code> <code>:bug:</code> <code>:honeybee:</code> <code>:ant:</code> <code>:beetle:</code> <code>:snail:</code> <code>:octopus:</code> <code>:tropical_fish:</code> <code>:fish:</code> <code>:whale:</code> <code>:whale2:</code> <code>:dolphin:</code> <code>:cow2:</code> <code>:ram:</code> <code>:rat:</code> <code>:water_buffalo:</code> <code>:tiger2:</code> <code>:rabbit2:</code> <code>:dragon:</code> <code>:goat:</code> <code>:rooster:</code> <code>:dog2:</code> <code>:pig2:</code> <code>:mouse2:</code> <code>:ox:</code> <code>:dragon_face:</code> <code>:blowfish:</code> <code>:crocodile:</code> <code>:dromedary_camel:</code> <code>:leopard:</code> <code>:cat2:</code> <code>:poodle:</code> <code>:paw_prints:</code> <code>:bouquet:</code> <code>:cherry_blossom:</code> <code>:tulip:</code> <code>:four_leaf_clover:</code> <code>:rose:</code> <code>:sunflower:</code> <code>:hibiscus:</code> <code>:maple_leaf:</code> <code>:leaves:</code> <code>:fallen_leaf:</code> <code>:herb:</code> <code>:mushroom:</code> <code>:cactus:</code> <code>:palm_tree:</code> <code>:evergreen_tree:</code> <code>:deciduous_tree:</code> <code>:chestnut:</code> <code>:seedling:</code> <code>:blossom:</code> <code>:ear_of_rice:</code> <code>:shell:</code> <code>:globe_with_meridians:</code> <code>:sun_with_face:</code> <code>:full_moon_with_face:</code> <code>:new_moon_with_face:</code> <code>:new_moon:</code> <code>:waxing_crescent_moon:</code> <code>:first_quarter_moon:</code> <code>:waxing_gibbous_moon:</code> <code>:full_moon:</code> <code>:waning_gibbous_moon:</code> <code>:last_quarter_moon:</code> <code>:waning_crescent_moon:</code> <code>:last_quarter_moon_with_face:</code> <code>:first_quarter_moon_with_face:</code> :moon: <code>:moon:</code> <code>:earth_africa:</code> <code>:earth_americas:</code> <code>:earth_asia:</code> <code>:volcano:</code> <code>:milky_way:</code> <code>:partly_sunny:</code> :octocat: <code>:octocat:</code> :squirrel: <code>:squirrel:</code>"},{"location":"user_guide/markdown/#objects","title":"Objects","text":"<code>:bamboo:</code> <code>:gift_heart:</code> <code>:dolls:</code> <code>:school_satchel:</code> <code>:mortar_board:</code> <code>:flags:</code> <code>:fireworks:</code> <code>:sparkler:</code> <code>:wind_chime:</code> <code>:rice_scene:</code> <code>:jack_o_lantern:</code> <code>:ghost:</code> <code>:santa:</code> <code>:christmas_tree:</code> <code>:gift:</code> <code>:bell:</code> <code>:no_bell:</code> <code>:tanabata_tree:</code> <code>:tada:</code> <code>:confetti_ball:</code> <code>:balloon:</code> <code>:crystal_ball:</code> <code>:cd:</code> <code>:dvd:</code> <code>:floppy_disk:</code> <code>:camera:</code> <code>:video_camera:</code> <code>:movie_camera:</code> <code>:computer:</code> <code>:tv:</code> :iphone: <code>:iphone:</code> :phone: <code>:phone:</code> <code>:telephone:</code> <code>:telephone_receiver:</code> <code>:pager:</code> <code>:fax:</code> <code>:minidisc:</code> <code>:vhs:</code> <code>:sound:</code> <code>:speaker:</code> <code>:mute:</code> <code>:loudspeaker:</code> <code>:mega:</code> <code>:hourglass:</code> <code>:hourglass_flowing_sand:</code> <code>:alarm_clock:</code> <code>:watch:</code> <code>:radio:</code> <code>:satellite:</code> <code>:loop:</code> <code>:mag:</code> <code>:mag_right:</code> <code>:unlock:</code> <code>:lock:</code> <code>:lock_with_ink_pen:</code> <code>:closed_lock_with_key:</code> <code>:key:</code> <code>:bulb:</code> <code>:flashlight:</code> <code>:high_brightness:</code> <code>:low_brightness:</code> <code>:electric_plug:</code> <code>:battery:</code> <code>:calling:</code> <code>:email:</code> <code>:mailbox:</code> <code>:postbox:</code> <code>:bath:</code> <code>:bathtub:</code> <code>:shower:</code> <code>:toilet:</code> <code>:wrench:</code> <code>:nut_and_bolt:</code> <code>:hammer:</code> <code>:seat:</code> <code>:moneybag:</code> <code>:yen:</code> <code>:dollar:</code> <code>:pound:</code> <code>:euro:</code> <code>:credit_card:</code> <code>:money_with_wings:</code> <code>:e-mail:</code> <code>:inbox_tray:</code> <code>:outbox_tray:</code> <code>:envelope:</code> <code>:incoming_envelope:</code> <code>:postal_horn:</code> <code>:mailbox_closed:</code> <code>:mailbox_with_mail:</code> <code>:mailbox_with_no_mail:</code> <code>:door:</code> <code>:smoking:</code> <code>:bomb:</code> <code>:gun:</code> :hocho: <code>:hocho:</code> <code>:pill:</code> <code>:syringe:</code> <code>:page_facing_up:</code> <code>:page_with_curl:</code> <code>:bookmark_tabs:</code> <code>:bar_chart:</code> <code>:chart_with_upwards_trend:</code> <code>:chart_with_downwards_trend:</code> <code>:scroll:</code> <code>:clipboard:</code> <code>:calendar:</code> <code>:date:</code> <code>:card_index:</code> <code>:file_folder:</code> <code>:open_file_folder:</code> <code>:scissors:</code> <code>:pushpin:</code> <code>:paperclip:</code> <code>:black_nib:</code> <code>:pencil2:</code> <code>:straight_ruler:</code> <code>:triangular_ruler:</code> <code>:closed_book:</code> <code>:green_book:</code> <code>:blue_book:</code> <code>:orange_book:</code> <code>:notebook:</code> <code>:notebook_with_decorative_cover:</code> <code>:ledger:</code> <code>:books:</code> <code>:bookmark:</code> <code>:name_badge:</code> <code>:microscope:</code> <code>:telescope:</code> <code>:newspaper:</code> <code>:football:</code> <code>:basketball:</code> <code>:soccer:</code> <code>:baseball:</code> <code>:tennis:</code> <code>:8ball:</code> <code>:rugby_football:</code> <code>:bowling:</code> <code>:golf:</code> <code>:mountain_bicyclist:</code> <code>:bicyclist:</code> <code>:horse_racing:</code> <code>:snowboarder:</code> <code>:swimmer:</code> <code>:surfer:</code> <code>:ski:</code> <code>:spades:</code> <code>:hearts:</code> <code>:clubs:</code> <code>:diamonds:</code> <code>:gem:</code> <code>:ring:</code> <code>:trophy:</code> <code>:musical_score:</code> <code>:musical_keyboard:</code> <code>:violin:</code> <code>:space_invader:</code> <code>:video_game:</code> <code>:black_joker:</code> <code>:flower_playing_cards:</code> <code>:game_die:</code> <code>:dart:</code> <code>:mahjong:</code> <code>:clapper:</code> <code>:memo:</code> <code>:pencil:</code> <code>:book:</code> <code>:art:</code> <code>:microphone:</code> <code>:headphones:</code> <code>:trumpet:</code> <code>:saxophone:</code> <code>:guitar:</code> :shoe: <code>:shoe:</code> <code>:sandal:</code> <code>:high_heel:</code> <code>:lipstick:</code> <code>:boot:</code> <code>:shirt:</code> :tshirt: <code>:tshirt:</code> <code>:necktie:</code> <code>:womans_clothes:</code> <code>:dress:</code> <code>:running_shirt_with_sash:</code> <code>:jeans:</code> <code>:kimono:</code> <code>:bikini:</code> <code>:ribbon:</code> <code>:tophat:</code> <code>:crown:</code> <code>:womans_hat:</code> <code>:mans_shoe:</code> <code>:closed_umbrella:</code> <code>:briefcase:</code> <code>:handbag:</code> <code>:pouch:</code> <code>:purse:</code> <code>:eyeglasses:</code> <code>:fishing_pole_and_fish:</code> <code>:coffee:</code> <code>:tea:</code> <code>:sake:</code> <code>:baby_bottle:</code> <code>:beer:</code> <code>:beers:</code> <code>:cocktail:</code> <code>:tropical_drink:</code> <code>:wine_glass:</code> <code>:fork_and_knife:</code> <code>:pizza:</code> <code>:hamburger:</code> <code>:fries:</code> <code>:poultry_leg:</code> <code>:meat_on_bone:</code> <code>:spaghetti:</code> <code>:curry:</code> <code>:fried_shrimp:</code> <code>:bento:</code> <code>:sushi:</code> <code>:fish_cake:</code> <code>:rice_ball:</code> <code>:rice_cracker:</code> <code>:rice:</code> <code>:ramen:</code> <code>:stew:</code> <code>:oden:</code> <code>:dango:</code> <code>:egg:</code> <code>:bread:</code> <code>:doughnut:</code> <code>:custard:</code> <code>:icecream:</code> <code>:ice_cream:</code> <code>:shaved_ice:</code> <code>:birthday:</code> <code>:cake:</code> <code>:cookie:</code> <code>:chocolate_bar:</code> <code>:candy:</code> <code>:lollipop:</code> <code>:honey_pot:</code> <code>:apple:</code> <code>:green_apple:</code> <code>:tangerine:</code> <code>:lemon:</code> <code>:cherries:</code> <code>:grapes:</code> <code>:watermelon:</code> <code>:strawberry:</code> <code>:peach:</code> <code>:melon:</code> <code>:banana:</code> <code>:pear:</code> <code>:pineapple:</code> <code>:sweet_potato:</code> <code>:eggplant:</code> <code>:tomato:</code> <code>:corn:</code>"},{"location":"user_guide/markdown/#places","title":"Places","text":"<code>:house:</code> <code>:house_with_garden:</code> <code>:school:</code> <code>:office:</code> <code>:post_office:</code> <code>:hospital:</code> <code>:bank:</code> <code>:convenience_store:</code> <code>:love_hotel:</code> <code>:hotel:</code> <code>:wedding:</code> <code>:church:</code> <code>:department_store:</code> <code>:european_post_office:</code> <code>:city_sunrise:</code> <code>:city_sunset:</code> <code>:japanese_castle:</code> <code>:european_castle:</code> <code>:tent:</code> <code>:factory:</code> <code>:tokyo_tower:</code> <code>:japan:</code> <code>:mount_fuji:</code> <code>:sunrise_over_mountains:</code> <code>:sunrise:</code> <code>:stars:</code> <code>:statue_of_liberty:</code> <code>:bridge_at_night:</code> <code>:carousel_horse:</code> <code>:rainbow:</code> <code>:ferris_wheel:</code> <code>:fountain:</code> <code>:roller_coaster:</code> <code>:ship:</code> <code>:speedboat:</code> :boat: <code>:boat:</code> <code>:sailboat:</code> <code>:rowboat:</code> <code>:anchor:</code> <code>:rocket:</code> <code>:airplane:</code> <code>:helicopter:</code> <code>:steam_locomotive:</code> <code>:tram:</code> <code>:mountain_railway:</code> <code>:bike:</code> <code>:aerial_tramway:</code> <code>:suspension_railway:</code> <code>:mountain_cableway:</code> <code>:tractor:</code> <code>:blue_car:</code> <code>:oncoming_automobile:</code> :car: <code>:car:</code> <code>:red_car:</code> <code>:taxi:</code> <code>:oncoming_taxi:</code> <code>:articulated_lorry:</code> <code>:bus:</code> <code>:oncoming_bus:</code> <code>:rotating_light:</code> <code>:police_car:</code> <code>:oncoming_police_car:</code> <code>:fire_engine:</code> <code>:ambulance:</code> <code>:minibus:</code> <code>:truck:</code> <code>:train:</code> <code>:station:</code> <code>:train2:</code> <code>:bullettrain_front:</code> <code>:bullettrain_side:</code> <code>:light_rail:</code> <code>:monorail:</code> <code>:railway_car:</code> <code>:trolleybus:</code> <code>:ticket:</code> <code>:fuelpump:</code> <code>:vertical_traffic_light:</code> <code>:traffic_light:</code> <code>:warning:</code> <code>:construction:</code> <code>:beginner:</code> <code>:atm:</code> <code>:slot_machine:</code> <code>:busstop:</code> <code>:barber:</code> <code>:hotsprings:</code> <code>:checkered_flag:</code> <code>:crossed_flags:</code> <code>:izakaya_lantern:</code> <code>:moyai:</code> <code>:circus_tent:</code> <code>:performing_arts:</code> <code>:round_pushpin:</code> <code>:triangular_flag_on_post:</code> <code>:jp:</code> <code>:kr:</code> <code>:cn:</code> <code>:us:</code> <code>:fr:</code> <code>:es:</code> <code>:it:</code> <code>:ru:</code> <code>:gb:</code> :uk: <code>:uk:</code> <code>:de:</code>"},{"location":"user_guide/markdown/#symbols","title":"Symbols","text":"<code>:one:</code> <code>:two:</code> <code>:three:</code> <code>:four:</code> <code>:five:</code> <code>:six:</code> <code>:seven:</code> <code>:eight:</code> <code>:nine:</code> <code>:keycap_ten:</code> <code>:1234:</code> <code>:zero:</code> <code>:hash:</code> <code>:symbols:</code> <code>:arrow_backward:</code> <code>:arrow_down:</code> <code>:arrow_forward:</code> <code>:arrow_left:</code> <code>:capital_abcd:</code> <code>:abcd:</code> <code>:abc:</code> <code>:arrow_lower_left:</code> <code>:arrow_lower_right:</code> <code>:arrow_right:</code> <code>:arrow_up:</code> <code>:arrow_upper_left:</code> <code>:arrow_upper_right:</code> <code>:arrow_double_down:</code> <code>:arrow_double_up:</code> <code>:arrow_down_small:</code> <code>:arrow_heading_down:</code> <code>:arrow_heading_up:</code> <code>:leftwards_arrow_with_hook:</code> <code>:arrow_right_hook:</code> <code>:left_right_arrow:</code> <code>:arrow_up_down:</code> <code>:arrow_up_small:</code> <code>:arrows_clockwise:</code> <code>:arrows_counterclockwise:</code> <code>:rewind:</code> <code>:fast_forward:</code> <code>:information_source:</code> <code>:ok:</code> <code>:twisted_rightwards_arrows:</code> <code>:repeat:</code> <code>:repeat_one:</code> <code>:new:</code> <code>:top:</code> <code>:up:</code> <code>:cool:</code> <code>:free:</code> <code>:ng:</code> <code>:cinema:</code> <code>:koko:</code> <code>:signal_strength:</code> <code>:u5272:</code> <code>:u5408:</code> <code>:u55b6:</code> <code>:u6307:</code> <code>:u6708:</code> <code>:u6709:</code> <code>:u6e80:</code> <code>:u7121:</code> <code>:u7533:</code> <code>:u7a7a:</code> <code>:u7981:</code> <code>:sa:</code> <code>:restroom:</code> <code>:mens:</code> <code>:womens:</code> <code>:baby_symbol:</code> <code>:no_smoking:</code> <code>:parking:</code> <code>:wheelchair:</code> <code>:metro:</code> <code>:baggage_claim:</code> <code>:accept:</code> <code>:wc:</code> <code>:potable_water:</code> <code>:put_litter_in_its_place:</code> <code>:secret:</code> <code>:congratulations:</code> <code>:m:</code> <code>:passport_control:</code> <code>:left_luggage:</code> <code>:customs:</code> <code>:ideograph_advantage:</code> <code>:cl:</code> <code>:sos:</code> <code>:id:</code> <code>:no_entry_sign:</code> <code>:underage:</code> <code>:no_mobile_phones:</code> <code>:do_not_litter:</code> <code>:non-potable_water:</code> <code>:no_bicycles:</code> <code>:no_pedestrians:</code> <code>:children_crossing:</code> <code>:no_entry:</code> <code>:eight_spoked_asterisk:</code> <code>:eight_pointed_black_star:</code> <code>:heart_decoration:</code> <code>:vs:</code> <code>:vibration_mode:</code> <code>:mobile_phone_off:</code> <code>:chart:</code> <code>:currency_exchange:</code> <code>:aries:</code> <code>:taurus:</code> <code>:gemini:</code> <code>:cancer:</code> <code>:leo:</code> <code>:virgo:</code> <code>:libra:</code> <code>:scorpius:</code> <code>:sagittarius:</code> <code>:capricorn:</code> <code>:aquarius:</code> <code>:pisces:</code> <code>:ophiuchus:</code> <code>:six_pointed_star:</code> <code>:negative_squared_cross_mark:</code> <code>:a:</code> <code>:b:</code> <code>:ab:</code> <code>:o2:</code> <code>:diamond_shape_with_a_dot_inside:</code> <code>:recycle:</code> <code>:end:</code> <code>:on:</code> <code>:soon:</code> <code>:clock1:</code> <code>:clock130:</code> <code>:clock10:</code> <code>:clock1030:</code> <code>:clock11:</code> <code>:clock1130:</code> <code>:clock12:</code> <code>:clock1230:</code> <code>:clock2:</code> <code>:clock230:</code> <code>:clock3:</code> <code>:clock330:</code> <code>:clock4:</code> <code>:clock430:</code> <code>:clock5:</code> <code>:clock530:</code> <code>:clock6:</code> <code>:clock630:</code> <code>:clock7:</code> <code>:clock730:</code> <code>:clock8:</code> <code>:clock830:</code> <code>:clock9:</code> <code>:clock930:</code> <code>:heavy_dollar_sign:</code> <code>:copyright:</code> <code>:registered:</code> <code>:tm:</code> <code>:x:</code> :heavy_exclamation_mark: <code>:heavy_exclamation_mark:</code> <code>:bangbang:</code> <code>:interrobang:</code> <code>:o:</code> <code>:heavy_multiplication_x:</code> <code>:heavy_plus_sign:</code> <code>:heavy_minus_sign:</code> <code>:heavy_division_sign:</code> <code>:white_flower:</code> <code>:100:</code> <code>:heavy_check_mark:</code> <code>:ballot_box_with_check:</code> <code>:radio_button:</code> <code>:link:</code> <code>:curly_loop:</code> <code>:wavy_dash:</code> <code>:part_alternation_mark:</code> <code>:trident:</code> :black_square: <code>:black_square:</code> :white_square: <code>:white_square:</code> <code>:white_check_mark:</code> <code>:black_square_button:</code> <code>:white_square_button:</code> <code>:black_circle:</code> <code>:white_circle:</code> <code>:red_circle:</code> :large_blue_circle: <code>:large_blue_circle:</code> <code>:large_blue_diamond:</code> <code>:large_orange_diamond:</code> <code>:small_blue_diamond:</code> <code>:small_orange_diamond:</code> <code>:small_red_triangle:</code> <code>:small_red_triangle_down:</code> :shipit: <code>:shipit:</code>"},{"location":"user_guide/semver/","title":"Versionamento Sem\u00e2ntico (SemVer)","text":"<p>Este especif\u00edca\u00e7\u00e3o pode ser acompanhada na integra em seu endere\u00e7o oficcial em https://semver.org/lang/pt-BR/.</p>"},{"location":"user_guide/semver/#especificacao","title":"Especifica\u00e7\u00e3o","text":"<p>As palavras-chaves \u201cDEVE\u201d, \u201cN\u00c3O DEVE\u201d, \u201cOBRIGAT\u00d3RIO\u201d, \u201cDEVER\u00c1\u201d, \u201cN\u00c3O DEVER\u00c1\u201d, \u201cPODEM\u201d, \u201cN\u00c3O PODEM\u201d, \u201cRECOMENDADO\u201d, \u201cPODE\u201d e \u201cOPCIONAL\u201d no presente documento devem ser interpretados como descrito na RFC 2119.</p> <ol> <li>Software usando Versionamento Sem\u00e2ntico DEVE declarar uma API p\u00fablica. Esta API poder\u00e1 ser declarada no pr\u00f3prio c\u00f3digo ou existir estritamente na documenta\u00e7\u00e3o, desde que seja precisa e compreensiva.</li> <li>Um n\u00famero de vers\u00e3o normal DEVE ter o formato de X.Y.Z, onde X, Y, e Z s\u00e3o inteiros n\u00e3o negativos, e N\u00c3O DEVE conter zeros \u00e0 esquerda. X \u00e9 a vers\u00e3o Maior, Y \u00e9 a vers\u00e3o Menor, e Z \u00e9 a vers\u00e3o de Corre\u00e7\u00e3o. Cada elemento DEVE aumentar numericamente. Por exemplo: 1.9.0 -&gt; 1.10.0 -&gt; 1.11.0.</li> <li>Uma vez que um pacote versionado foi lan\u00e7ado(released), o conte\u00fado desta vers\u00e3o N\u00c3O DEVE ser modificado. Qualquer modifica\u00e7\u00e3o DEVE ser lan\u00e7ado como uma nova vers\u00e3o.</li> <li>No in\u00edcio do desenvolvimento, a vers\u00e3o Maior DEVE ser zero (0.y.z). Qualquer coisa PODE mudar a qualquer momento. A API p\u00fablica N\u00c3O DEVE ser considerada est\u00e1vel.</li> <li>Vers\u00e3o 1.0.0 define a API como p\u00fablica. A maneira como o n\u00famero de vers\u00e3o \u00e9 incrementado ap\u00f3s este lan\u00e7amento \u00e9 dependente da API p\u00fablica e como ela muda.</li> <li>Vers\u00e3o de Corre\u00e7\u00e3o Z (x.y.Z | x &gt; 0) DEVE ser incrementado apenas se mantiver compatibilidade e introduzir corre\u00e7\u00e3o de bugs. Uma corre\u00e7\u00e3o de bug \u00e9 definida como uma mudan\u00e7a interna que corrige um comportamento incorreto.</li> <li>Vers\u00e3o Menor Y (x.Y.z | x &gt; 0) DEVE ser incrementada se uma funcionalidade nova e compat\u00edvel for introduzida na API p\u00fablica. DEVE ser incrementada se qualquer funcionalidade da API p\u00fablica for definida como descontinuada. PODE ser incrementada se uma nova funcionalidade ou melhoria substancial for introduzida dentro do c\u00f3digo privado. PODE incluir mudan\u00e7as a n\u00edvel de corre\u00e7\u00e3o. A vers\u00e3o de Corre\u00e7\u00e3o DEVE ser redefinida para 0(zero) quando a vers\u00e3o Menor for incrementada.</li> <li>Vers\u00e3o Maior X (X.y.z | X &gt; 0) DEVE ser incrementada se forem introduzidas mudan\u00e7as incompat\u00edveis na API p\u00fablica. PODE incluir altera\u00e7\u00f5es a n\u00edvel de vers\u00e3o Menor e de vers\u00e3o de Corre\u00e7\u00e3o. Vers\u00e3o de Corre\u00e7\u00e3o e Vers\u00e3o Menor DEVEM ser redefinidas para 0(zero) quando a vers\u00e3o Maior for incrementada.</li> <li>Uma vers\u00e3o de Pr\u00e9-Lan\u00e7amento (pre-release) PODE ser identificada adicionando um h\u00edfen (dash) e uma s\u00e9rie de identificadores separados por ponto (dot) imediatamente ap\u00f3s a vers\u00e3o de Corre\u00e7\u00e3o. Identificador DEVE incluir apenas caracteres alfanum\u00e9ricos e h\u00edfen [0-9A-Za-z-]. Identificador N\u00c3O DEVE ser vazio. Indicador num\u00e9rico N\u00c3O DEVE incluir zeros \u00e0 esquerda. Vers\u00e3o de Pr\u00e9-Lan\u00e7amento tem preced\u00eancia inferior \u00e0 vers\u00e3o normal a que est\u00e1 associada. Uma vers\u00e3o de Pr\u00e9-Lan\u00e7amento (pre-release) indica que a vers\u00e3o \u00e9 inst\u00e1vel e pode n\u00e3o satisfazer os requisitos de compatibilidade pretendidos, como indicado por sua vers\u00e3o normal associada. Exemplos: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92.</li> <li>Metadados de constru\u00e7\u00e3o(Build) PODE ser identificada por adicionar um sinal de adi\u00e7\u00e3o (+) e uma s\u00e9rie de identificadores separados por ponto imediatamente ap\u00f3s a Corre\u00e7\u00e3o ou Pr\u00e9-Lan\u00e7amento. Identificador DEVE ser composto apenas por caracteres alfanum\u00e9ricos e h\u00edfen [0-9A-Za-z-]. Identificador N\u00c3O DEVE ser vazio. Metadados de constru\u00e7\u00e3o PODEM ser ignorados quando se determina a vers\u00e3o de preced\u00eancia. Assim, duas vers\u00f5es que diferem apenas nos metadados de constru\u00e7\u00e3o, t\u00eam a mesma preced\u00eancia. Exemplos: 1.0.0-alpha+001, 1.0.0+20130313144700, 1.0.0-beta+exp.sha.5114f85.</li> <li>A preced\u00eancia refere como as vers\u00f5es s\u00e3o comparadas uma com a outra quando solicitado.</li> <li>A preced\u00eancia DEVE ser calculada separando identificadores de vers\u00e3o em Maior, Menor, Corre\u00e7\u00e3o e Pr\u00e9-lan\u00e7amento, nesta ordem. (Metadados de constru\u00e7\u00e3o n\u00e3o faz parte da preced\u00eancia).</li> </ol> <p>I. A preced\u00eancia \u00e9 determinada pela primeira diferen\u00e7a quando se compara cada identificador da esquerda para direita, como se segue: Vers\u00f5es Maior, Menor e Corre\u00e7\u00e3o s\u00e3o sempre comparadas numericamente.</p> <pre><code>Exemplo: 1.0.0 &lt; 2.0.0 &lt; 2.1.0 &lt; 2.1.1.\n</code></pre> <p>II. Quando Maior, Menor e Corre\u00e7\u00e3o s\u00e3o iguais, a vers\u00e3o de Pr\u00e9-Lan\u00e7amento tem preced\u00eancia menor que a vers\u00e3o normal.</p> <pre><code>Exemplo: 1.0.0-alpha &lt; 1.0.0.\n</code></pre> <p>III. A preced\u00eancia entre duas vers\u00f5es de Pr\u00e9-lan\u00e7amento com mesma vers\u00e3o Maior, Menor e Corre\u00e7\u00e3o DEVE ser determinada comparando cada identificador separado por ponto da esquerda para direita at\u00e9 que seja encontrada diferen\u00e7a da seguinte forma:</p> <ul> <li>Identificadores consistindo apenas d\u00edgitos s\u00e3o comparados numericamente.</li> <li>Identificadores com letras ou h\u00edfen s\u00e3o comparados lexicalmente na ordem de classifica\u00e7\u00e3o ASCII.</li> <li>Identificadores num\u00e9ricos sempre t\u00eam menor preced\u00eancia do que os n\u00e3o num\u00e9ricos.</li> <li>Um conjunto maior de campos de pr\u00e9-lan\u00e7amento tem uma preced\u00eancia maior do que um conjunto menor, se todos os identificadores anteriores s\u00e3o iguais.</li> </ul> <pre><code>Exemplo: 1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt; 1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0-rc.1 &lt; 1.0.0.`\n</code></pre>"},{"location":"user_guide/zenpy/","title":"ZEN do Python","text":"<p>PEP 20</p> <ul> <li>Bonito \u00e9 melhor do que feio.</li> <li>O expl\u00edcito \u00e9 melhor do que o impl\u00edcito.</li> <li>Simples \u00e9 melhor do que complexo.</li> <li>Complexo \u00e9 melhor do que complicado.</li> <li>Plano \u00e9 melhor do que aninhado.</li> <li>Esparso \u00e9 melhor do que denso.</li> <li>A legibilidade \u00e9 importante.</li> <li>Casos especiais n\u00e3o s\u00e3o especiais o suficiente para quebrar as regras. Embora a praticidade seja melhor que a pureza.</li> <li>Os erros nunca devem passar silenciosamente. A menos que sejam explicitamente silenciados.</li> <li>Em caso de ambiguidade, recuse a tenta\u00e7\u00e3o de adivinhar.</li> <li>Deve haver uma - e, de prefer\u00eancia, apenas uma - maneira \u00f3bvia de fazer isso. Embora essa maneira possa n\u00e3o ser \u00f3bvia a princ\u00edpio, a menos que voc\u00ea seja holand\u00eas.</li> <li>Agora \u00e9 melhor do que nunca. Embora, muitas vezes, nunca seja melhor do que agora.</li> <li>Se a implementa\u00e7\u00e3o for dif\u00edcil de explicar, \u00e9 uma m\u00e1 ideia.</li> <li>Se a implementa\u00e7\u00e3o for f\u00e1cil de explicar, pode ser uma boa ideia.</li> <li>Os namespaces s\u00e3o uma \u00f3tima ideia - vamos fazer mais deles!</li> </ul>"},{"location":"en/about/CONTRIBUTORS/","title":"Maintainers / Contributors","text":"Name Maintainer Develoment Tester Documenter Contact Brito @britodfbr Igor Gabriel @igorgabrielg Frederico Louren\u00e7o Cavalcante de Souza @Fredvet00 Alfredo Gustavo \ud83d\udd34 \ud83d\udd34 \ud83d\udd34 @alfredogust Gustavo Ribeiro @Gustavo0121 Jo\u00e3o Ribeiro @EVANGELISTA-RIBEIRO"},{"location":"en/user_guide/COVENTIONAL_COMMITS/","title":"Git commits messages","text":"<p>This project follow Conventional Commits, A specification for adding human and machine readable meaning to commit messages.</p> <pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p>The commit contains the following structural elements, to communicate intent to the consumers of your library:</p> <ul> <li>type: the type of commit (feat|feature, fix|bugfix, chore, refactor, docs, style, test, perf, ci, build, revert)<ul> <li>feat: A commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning).</li> <li>fix or bugfix: A commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning).</li> <li>chore: Changes that do not relate to a fix or feature and don\u00b4t modify src or test files (for example updating dependencies);</li> <li>refactor: refactored code that neither fixes a bug nor adds a feature;</li> <li>docs: updates to documentation such as a the README or other markdown or rst files;</li> <li>style: Changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, black style applied, and so on;</li> <li>test: Including new or correcting previous tests;</li> <li>perf: preformance impovements;</li> <li>ci: Continuos integration related;</li> <li>build: changes that affect the build system or external dependencies;</li> <li>revert: reverts a previous commit;</li> </ul> </li> <li>scope: This is optional, but indicate a specific scope ;</li> <li>description: show what was done in the commit;</li> <li>body: Full description, if descript not enough;</li> <li>footer: This is optional, but agregate additional information about commit, lake revisor, references, millistone and others (for example \"close #issue-id\").</li> </ul>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#examples","title":"Examples","text":""},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-description-and-breaking-change-footer","title":"Commit message with description and breaking change footer","text":"<pre><code>feat: allow provided config object to extend other configs\nBREAKING CHANGE: `extends` key in config file is now used for extending other config files\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-to-draw-attention-to-breaking-change","title":"Commit message with ! to draw attention to breaking change","text":"<pre><code>feat!: send an email to the customer when a product is shipped\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-scope-and-to-draw-attention-to-breaking-change","title":"Commit message with scope and ! to draw attention to breaking change","text":"<pre><code>feat(api)!: send an email to the customer when a product is shipped\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-both-and-breaking-change-footer","title":"Commit message with both ! and BREAKING CHANGE footer","text":"<pre><code>chore!: drop support for Python 2.6\n\nBREAKING CHANGE: Some features not available in Python 2.7-.\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-no-body","title":"Commit message with no body","text":"<pre><code>docs: correct spelling of CHANGELOG\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-scope","title":"Commit message with scope","text":"<pre><code>feat(lang): add polish language\n</code></pre>"},{"location":"en/user_guide/COVENTIONAL_COMMITS/#commit-message-with-multi-paragraph-body-and-multiple-footers","title":"Commit message with multi-paragraph body and multiple footers","text":"<pre><code>fix: prevent racing of requests\n\nIntroduce a request id and a reference to latest request. Dismiss\nincoming responses other than from latest request.\n\nRemove timeouts which were used to mitigate the racing issue but are\nobsolete now.\n\nReviewed-by: @britodfbr\nRefs: #123\n</code></pre> <p>The full specification maybe access on english lang or others languages about Brazilian Portuguese.</p>"},{"location":"en/user_guide/INSTALLATION/","title":"Guia de Uso","text":""},{"location":"en/user_guide/INSTALLATION/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>To install it using poetry:</p> <p>More detail can be see in Python Poetry: Gerenciando depend\u00eancias de projeto</p> <p>Last package version from pypi.org: <pre><code>  poetry add incolume.py.model-2023-07-05\n</code></pre> Download package wheel: <pre><code>  poetry add incolume.py.model-2023-07-05-1.0.0-py3-none-any.whl\n</code></pre> Download package tar.gz: <pre><code>  poetry add incolume.py.model-2023-07-05-1.0.0.tar.gz\n</code></pre> Last package version from git repo: <pre><code>  poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@master\n</code></pre> Specific version from git repo: <pre><code>  poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"1.0.0\"\n</code></pre> Specific branch from git repo: <pre><code>  poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"enhacement/epoch#16800000\"\n</code></pre></p> <p>To install incolumepy.lex, using pip:</p> <pre><code>  pip install incolume.py.model-2023-07-05\n</code></pre>"},{"location":"en/user_guide/INSTALLATION/#detalhes-da-api","title":"Detalhes da API","text":"<p>Dispon\u00edvel em docs/api</p>"},{"location":"en/user_guide/INSTALLATION/#detalhes-para-desenvolvimento","title":"Detalhes para desenvolvimento","text":"<p>Dispon\u00edvel em docs/user_guide/development.md</p>"},{"location":"en/user_guide/code_of_conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"en/user_guide/code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"en/user_guide/code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"en/user_guide/code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"en/user_guide/code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"en/user_guide/code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at contato@incolume.com.br. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"en/user_guide/code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"en/user_guide/code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"en/user_guide/code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"en/user_guide/code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"en/user_guide/code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"en/user_guide/code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"en/user_guide/usage/","title":"Usage","text":""},{"location":"en/user_guide/usage/#coding-dojo","title":"Coding Dojo","text":"<p>Details for scope and tool.</p>"},{"location":"en/user_guide/usage/#start-use-the-model","title":"Start Use the model","text":"<ol> <li>Access https://github.com/incolume-treinamentos/incolume.py.model-2023-07-05.</li> <li>Click on green button Use this template;</li> <li>Bellow click on Create a new repository;</li> <li>Fill the fields as you wish; finish the create a github project on github.com;</li> <li> <p>Clone the project, on local host;</p> </li> <li> <p>Create the control's branches:    <pre><code>$ git br main\n$ git br tags\n</code></pre></p> </li> <li> <p>Configure environment:     <code>shell    $ poetry env use 3.10    $ poetry install    $ poetry run task setup</code></p> </li> <li> <p>Change configuration:</p> </li> <li> <p>Set a new project name and version:       <pre><code>$ vim pyproject.toml\n\n[tool.poetry]\nname = \"incolume-py-model-2023-07-05\"\nversion = 1.111.0\n</code></pre> <pre><code>$ cat pyproject.toml\n\n[tool.poetry]\nname = \"incolume.py.abc\"\nversion = 0.1.0\n</code></pre></p> </li> <li> <p>rename path project:       <pre><code>git mv incolume/py/model_2023_07_05/ incolume/py/abc\n</code></pre></p> </li> <li> <p>Commit changes</p> <p>```shell    # the way wished    $ git co -b enhancement/epoch#$(date +%s);    $ git ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.'    $ git co dev    $ git merge --no-ff enhancement/epoch#0000000000000    $ poetry run task preminor    $ poetry run task patch    <pre><code>```shell\n# easy way\ngit ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.'\npoetry run task preminor\npoetry run task patch\n</code></pre></p> </li> <li> <p>Commit changes</p> </li> </ol>"},{"location":"en/user_guide/usage/#tests-linters-and-checkers","title":"Tests, Linters and Checkers","text":"<ol> <li> <p>For run tests:     <pre><code>$ poetry run pytest  # run all\n</code></pre> <pre><code>$ poetry run pytest -vv tests/test_skell.py::TestSkellCase::test_kwargs  # run one\n$ poetry run pytest -vv tests/test_skell.py::TestSkellCase  # run class\n$ poetry run pytest -vv tests/test_skell.py  # run file\n</code></pre></p> </li> <li> <p>For run linters:     <pre><code>$ poetry run task linter\n</code></pre></p> </li> </ol> <p>===</p> <ol> <li>Configure pylint tool</li> <li>Edit pyproject.toml, add on end file.    <pre><code>...\n[tool.pylint.format]\n# Maximum number of characters on a single line.\nmax-line-length = 160\n\n[tool.pylint.basic]\n# Allow shorter and longer variable names than the default.\nargument-rgx = \"[a-z_][a-z0-9_]*$\"\nattr-rgx = \"[a-z_][a-z0-9_]*$\"\nvariable-rgx = \"[a-z_][a-z0-9_]*$\"\n\n# Ensure that orjson is analysed as a C extension by pylint.\nextension-pkg-whitelist = \"orjson\"\n\n[tool.pylint.messages_control]\ndisable = [\n    # Disable too many and too few checks.\n    \"too-many-ancestors\",\n    \"too-many-arguments\",\n    \"too-many-boolean-expressions\",\n    \"too-many-branches\",\n    \"too-many-function-args\",\n    \"too-many-instance-attributes\",\n    \"too-many-lines\",\n    \"too-many-locals\",\n    \"too-many-nested-blocks\",\n    \"too-many-public-methods\",\n    \"too-many-return-statements\",\n    \"too-many-statements\",\n    \"too-few-public-methods\",\n\n    # Similar lines in files (often the case in tests).\n    \"duplicate-code\",\n\n    # Many functions (e.g. callbacks) will naturally have unused arguments.\n    \"unused-argument\",\n\n    # Disable checking that method could be a function in classes (often used for organisation).\n    \"no-self-use\",\n\n    # Disable failure for TODO items in the codebase (code will always have TODOs).\n    \"fixme\",\n\n    # Disable docstrings checks as we don't require excessive documentation.\n    \"missing-docstring\",\n\n    \"no-member\",\n    \"unspecified-encoding\",\n]\n</code></pre></li> <li>Commit       <pre><code>$ git ci -m \"Configure pylint tool\" pyproject.toml\n</code></pre></li> <li>Configure mypy tool<ol> <li>Edit pyproject.toml, add on end file. <pre><code>...\n   [tool.mypy]\n   mypy_path = \"incolumepy\"\n   check_untyped_defs = true\n   disallow_any_generics = true\n   ignore_missing_imports = true\n   no_implicit_optional = true\n   show_error_codes = true\n   strict_equality = true\n   warn_redundant_casts = true\n   warn_return_any = true\n   warn_unreachable = true\n   warn_unused_configs = true\n   no_implicit_reexport = true\n</code></pre></li> </ol> </li> <li>Commit    <pre><code>$ git ci -m \"Configure mypy tool\" pyproject.toml\n</code></pre></li> <li>Configure isort tool<ol> <li>Edit pyproject.toml, add on end file. <pre><code>...\n[tool.isort]\nmulti_line_output = 3\nline_length = 160\ninclude_trailing_comma = true\n</code></pre></li> <li>Commit   <pre><code>$ git ci -m \"Configure isort tool\" pyproject.toml\n</code></pre></li> </ol> </li> <li>Configure flake8 tool<ol> <li>Edit pyproject.toml, add on end file. <pre><code>...\n[flake8]\nmax-line-length = 160\n</code></pre></li> <li>Commit   <pre><code>$ git ci -m \"Configure flake8 tool\" pyproject.toml\n</code></pre></li> </ol> </li> <li>Configure black tool:<ol> <li>Edit pyproject.toml, add on end file. <pre><code>...\n[tool.black]\nline_length = 160\n</code></pre></li> <li>Commit   <pre><code>$ git ci -m \"Configure black tool\" pyproject.toml\n</code></pre></li> </ol> </li> <li>Configure tox tool:<ol> <li>Edit pyproject.toml, add on end file. <pre><code>[tool.tox]\nlegacy_tox_ini = \"\"\"\n[tox]\nminversion = 3.3.0\nisolated_build = True\nenvlist =\nblack\nflake8\nisort\nmypy\npydocstyle\npylint\npy{36,37,38,39,310}\n\n;[tox:.package]\n;basepython = python3\n\n[testenv]\nwhitelist_externals = poetry\nskip_install = true\ncommands =\npoetry env use {envpython}\npoetry install -vv --no-root\npoetry run pytest {posargs} tests/\n\n[testenv:flake8]\ndeps = flake8\ncommands = flake8 --config pyproject.toml incolumepy/ tests/\n\n[testenv:mypy]\ndeps =\nmypy\ntypes-toml\ncommands = mypy incolumepy/\n\n[testenv:pydocstyle]\ncommands = poetry run pydocstyle incolumepy/ tests/\n\n[testenv:isort]\ncommands = poetry run isort --check --atomic --py all incolumepy/ tests/\n\n[testenv:pylint]\ncommands = poetry run pylint incolumepy/ tests/\n\n[testenv:black]\ncommands = poetry run black --check incolumepy/ tests/\n\"\"\"\n</code></pre></li> <li>Commit   <pre><code>$ git ci -m \"Configure tox tool\" pyproject.toml\n</code></pre></li> </ol> </li> </ol>"},{"location":"en/user_guide/usage/#testting-lint-configurate","title":"Testting lint configurate","text":"<ol> <li>Test pydocstyle:    <pre><code>$ pydocstyle incolumepy/ tests/\n</code></pre></li> <li>Test pylint    <pre><code>$ pylint incolumepy/ tests/\n</code></pre></li> <li>Test mypy    <pre><code>$ mypy incolumepy/ tests/\n</code></pre></li> <li>Test isort    <pre><code>$ isort --check incolumepy/ tests/\n</code></pre></li> <li>Test flake8    <pre><code>$ flake8 --config pyproject.toml incolumepy/ tests/\n</code></pre></li> <li>Test black    <pre><code>$ black --check incolumepy/ tests/\n</code></pre></li> </ol>"},{"location":"en/user_guide/usage/#testting-tox-configurate","title":"Testting tox configurate","text":"<ol> <li>Text tox    <pre><code>$ tox\n</code></pre></li> </ol>"},{"location":"en/user_guide/usage/#control-version-with-poetry","title":"Control version with poetry","text":"<p>Unlike bumpversion, poetry changes the version of the main file only. To work around this situation and update the version of pyproject.toml, init.py and version.txt, we will do the following procedure.</p> <pre><code>$ cat &gt; incolumepy/gwa/__init__.py &lt;&lt; eof\nimport toml\nfrom pathlib import Path\n__root__ = Path(__file__).parents[0]\nversion_file = __root__.joinpath('version.txt')\nversion_file.write_text(f\"{toml.load(Path(__file__).parents[2].joinpath('pyproject.toml'))['tool']['poetry']['version']}\\n\")\n__version__ = version_file.read_text().strip()\neof\n\n$ v=`poetry version prerelease`; pytest tests/ &amp;&amp; git ci -m \"$v\" pyproject.toml $(find -name \"version.txt\")  #sem tag\n$ s=`poetry version patch`; pytest tests/ &amp;&amp; git ci -m \"`echo $s`\" pyproject.toml `find -name \"version.txt\"`; git tag -f `poetry version -s` -m \"$(echo $s)\"  #com tag\n</code></pre>"},{"location":"en/user_guide/usage/#facility-with-make","title":"Facility with make","text":"<p>Use make to easy various commands. <pre><code>$ curl https://pastebin.com/raw/eTHpL70G -o Makefile    # or\n$ curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/Makefile -o Makefile    # last version\n</code></pre></p>"},{"location":"en/user_guide/usage/#makefile-help","title":"Makefile help","text":"<pre><code>$ make help\n</code></pre>"},{"location":"en/user_guide/usage/#new-prerelease-with-makefile","title":"New prerelease with Makefile","text":"<pre><code>$ git co dev\n$ git merge --no-ff [branch] --autostash\n$ make prerelease\n</code></pre>"},{"location":"en/user_guide/usage/#new-release-with-makefile","title":"New release with Makefile","text":"<pre><code>$ git co dev\n$ make release\n</code></pre>"},{"location":"en/user_guide/usage/#checking-lint","title":"Checking lint","text":"<pre><code>$ make lint\n</code></pre>"},{"location":"en/user_guide/usage/#run-tox-over-make","title":"Run tox over make","text":"<pre><code>$ make tox\n</code></pre>"},{"location":"en/user_guide/usage/#github-workflows-actions-gwa","title":"Github Workflows Actions (GWA)","text":"<p>First create the directory for GWA: <pre><code>mkdir -pv .github/workflows\n</code></pre></p>"},{"location":"en/user_guide/usage/#this-models","title":"This Models:","text":"<ul> <li> <p>GitHub WorkFlow with tags Running tox; Build pack; Create release; publish TestPyPI and PyPI <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/gwa-flow.yml -o .github/workflows/gwa-flow.yml\n</code></pre></p> </li> <li> <p>Run tox and  generate coverage report: <pre><code>curl https://raw.githubuserconcurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/tests_ci_cd.yaml -o .github/workflows/tests_ci_cd.yml\n</code></pre></p> </li> <li> <p>Publish manualy releases/prereleases into test.pypi.org with poetry: <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-testpypi-manual-publish.yml -o .github/workflows/poetry-testpypi-manual-publish.yml\n</code></pre></p> </li> <li> <p>Publish automatically releases into pypi.org and test.pypi.org with poetry, after pass on tests from tests_ci_cd: <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-publish-automatically.yml -o .github/workflows/poetry-mine-publish-automatically.yml\n</code></pre></p> </li> <li> <p>Publish automatically releases into pypi.org only, after pass on tests from tests_ci_cd: <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-pypi-autopublish.yml -o  .github/workflows/poetry-mine-pypi-autopublish.yml\n</code></pre></p> </li> <li> <p>Publish automatically releases into pypi.org and test.pypi.org without poetry, after pass on tests from tests_ci_cd: <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/publish-automatically.yml -o .github/workflows/publish-automatically.yml\n</code></pre></p> </li> <li> <p>Publish automatically releases into pypi.org and test.pypi.org with multiprocess poetry, after pass on tests from tests_ci_cd: <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-multiprocess.yml -o .github/workflows/poetry-multiprocess.yml\n</code></pre></p> </li> </ul>"},{"location":"en/user_guide/usage/#git-hooks","title":"Git Hooks","text":"<ul> <li>create .git-hooks folder into your project root directory, at the same level you already have .git folder; <pre><code>mkdir .git-hooks\n</code></pre></li> <li>create hook files into this folder: pre-commit, prepare-commit-msg and all hooks (these files don't have an extension);</li> <li>put the correct code into each file (I will add them below these steps); <pre><code>curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-commit -o .git-hooks/pre-commit\ncurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/prepare-commit-msg -o .git-hooks/prepare-commit-msg\ncurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/commit-msg -o .git-hooks/commit-msg\ncurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-push -o .git-hooks/pre-push\n</code></pre></li> <li>change to execute mode; <pre><code>chmod +x .git-hooks/*\n</code></pre></li> <li> <p>run this command in your command line, into your main folder of your project (one level up from .git-hooks): <pre><code>git config core.hooksPath .git-hooks;\n</code></pre></p> </li> <li> <p>READY;</p> </li> </ul>"},{"location":"en/user_guide/writing-your-docs/","title":"Mkdocs","text":""},{"location":"en/user_guide/writing-your-docs/#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"en/user_guide/writing-your-docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"en/user_guide/writing-your-docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"en/user_guide/writing-your-docs/#web-documentation-over-github-pages","title":"Web documentation over github pages","text":"<pre><code>mkdocs gh-deploy --config-file mkdocs.yml --remote-branch webdoc\n</code></pre>"},{"location":"en/user_guide/zenpy/","title":"The Zen of Python","text":"<p>PEP 20</p> <ul> <li>Beautiful is better than ugly.</li> <li>Explicit is better than implicit.</li> <li>Simple is better than complex.</li> <li>Complex is better than complicated.</li> <li>Flat is better than nested.</li> <li>Sparse is better than dense.</li> <li>Readability counts.</li> <li>Special cases aren't special enough to break the rules.  Although practicality beats purity.</li> <li>Errors should never pass silently.  Unless explicitly silenced.</li> <li>In the face of ambiguity, refuse the temptation to guess.</li> <li>There should be one - and preferably only one - obvious way to do it.  Although that way may not be obvious at first unless you're Dutch.</li> <li>Now is better than never.  Although never is often better than right now.</li> <li>If the implementation is hard to explain, it's a bad idea.</li> <li>If the implementation is easy to explain, it may be a good idea.</li> <li>Namespaces are one honking great idea - let's do more of those!</li> </ul>"},{"location":"","title":"Incolume Python Changelog","text":""},{"location":"#objetivos","title":"Objetivos","text":"<p>Esta API automatiza a cria\u00e7\u00e3o de um arquivo changelog utilizando os resgistros do git, para gerenciar melhor seus projetos, seguindo a metodologia do Keep a Changelog.</p>"},{"location":"#descricao","title":"Descri\u00e7\u00e3o","text":"<p>O funcionamento \u00e9 atrav\u00e9s da captura dos registros do comando <code>git tag -n</code>, obtendo assim data, etiquetas e modifica\u00e7\u00f5es, gerando ent\u00e3o um arquivo de gerenciamento de mudan\u00e7as relevantes para cada vers\u00e3o.</p> <p>No pacote h\u00e1 ferramentas para Quality Assurance (QA) como ruff, mypy, pylint, isort, pydocstyle; al\u00e9m de ferramentas de seguran\u00e7a como bandit, pipaudit e safety.</p>"},{"location":"#exemplos-e-uso","title":"Exemplos e Uso","text":"<p>Dispon\u00edvel em docs/api.</p>"},{"location":"#registro-de-mudancas","title":"Registro de Mudan\u00e7as","text":"<p>Dispon\u00edvel em docs/about/CHANGELOG.md.</p>"},{"location":"#contribuidores","title":"Contribuidores","text":"<p>Dispon\u00edvel em docs/about/CONTRIBUTORS.md.</p>"},{"location":"#tecnologias-aplicadas","title":"Tecnologias aplicadas","text":"<p>Deseja aprender mais sobre alguns dos requisitos n\u00e3o funcionais utilizados no projeto? Consulte a sess\u00e3o Padr\u00f5es Aplicados em Guia de Contribu\u00ed\u00e7\u00e3o.</p>"},{"location":"about/CHANGELOG/","title":"CHANGELOG","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, this project adheres to Semantic Versioning and Conventional Commit.</p> <p>This file was automatically generated for incolume.py.changelog</p>"},{"location":"about/CHANGELOG/#080-2024-01-06","title":"0.8.0   \u2014    2024-01-06:","text":""},{"location":"about/CHANGELOG/#added","title":"Added","text":"<ul> <li>Acrescentado campo de busca na documenta\u00e7\u00e3o da API;</li> <li>Acrescentado modo noturno na p\u00e1gina oficial de documenta\u00e7\u00e3o da API;</li> <li>Acrescentado suporte a multiplos idiomas para documenta\u00e7\u00e3o;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em italiano;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em franc\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em espanhol;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em alem\u00e3o;</li> <li>Acrescentado tradu\u00e7\u00e3o do c\u00f3digo de contuda em ingl\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do contributors.md em ingl\u00eas;</li> <li>Acrescentado tradu\u00e7\u00e3o do zenpy.md em ingl\u00eas;</li> </ul>"},{"location":"about/CHANGELOG/#deprecated","title":"Deprecated","text":"<ul> <li>Ser\u00e1 substitu\u00eddo em breve o pacote <code>isort</code>;</li> </ul>"},{"location":"about/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Redefinido renderiza\u00e7\u00e3o de rodap\u00e9 do arquivo CHANGELOG.md;</li> </ul>"},{"location":"about/CHANGELOG/#070-2024-01-05","title":"0.7.0   \u2014    2024-01-05:","text":""},{"location":"about/CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Formatador de c\u00f3digo redefindo com <code>ruff</code>;</li> <li>Adicionado badges de <code>wheel</code> e <code>stable</code>;</li> </ul>"},{"location":"about/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Renomeado workflow CI/CD <code>python-package.yml -&gt; unit-tests.yml</code>;</li> <li>Atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o com exemplos de utiliza\u00e7\u00e3o da API;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>taskipy</code>;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>makefile</code>;</li> <li>Reativa\u00e7\u00e3o dos scripts de automa\u00e7\u00e3o <code>tox</code>;</li> <li>Informa\u00e7\u00f5es referente ao projeto atualizadas na p\u00e1gina de documenta\u00e7\u00e3o;</li> </ul>"},{"location":"about/CHANGELOG/#removed","title":"Removed","text":"<ul> <li>Removido pacote <code>blue</code>;</li> <li>Desativado formatador <code>blue</code> em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#062-2024-01-04","title":"0.6.2   \u2014    2024-01-04:","text":""},{"location":"about/CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Ativa\u00e7\u00e3o da configura\u00e7\u00e3o <code>Codecov.io</code>.;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> <li>Corre\u00e7\u00e3o de gera\u00e7\u00e3o de relat\u00f3rio de cobertura no container CI/CD.;</li> </ul>"},{"location":"about/CHANGELOG/#061-2024-01-02","title":"0.6.1   \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Habilitado diretiva <code>workflow_dispatch</code> para executar workflow manualmente;</li> </ul>"},{"location":"about/CHANGELOG/#060-2024-01-02","title":"0.6.0   \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#060rc0-2024-01-02","title":"0.6.0rc0    \u2014    2024-01-02:","text":""},{"location":"about/CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o na excu\u00e7\u00e3o de testes unit\u00e1rios em CI/CD;</li> </ul>"},{"location":"about/CHANGELOG/#050-2024-01-01","title":"0.5.0   \u2014    2024-01-01:","text":""},{"location":"about/CHANGELOG/#fixed_5","title":"Fixed","text":"<ul> <li>Corre\u00e7\u00e3o em a\u00e7\u00f5es de fluxo CI/CD;</li> <li>Sanado conflito entre ferramentas de valida\u00e7\u00e3o de tipo;</li> <li>Sanado conflito entre ferramentas de ordena\u00e7\u00e3o de pacotes;</li> <li>Sanado conflito entre ferramentas lint;</li> </ul>"},{"location":"about/CHANGELOG/#050rc0-2023-12-31","title":"0.5.0rc0    \u2014    2023-12-31:","text":""},{"location":"about/CHANGELOG/#fixed_6","title":"Fixed","text":"<ul> <li>Sanado conflito entre ferramentas de valida\u00e7\u00e3o de tipo;</li> <li>Sanado conflito entre ferramentas de ordena\u00e7\u00e3o de pacotes;</li> <li>Sanado conflito entre ferramentas lint;</li> </ul>"},{"location":"about/CHANGELOG/#040-2023-12-31","title":"0.4.0   \u2014    2023-12-31:","text":""},{"location":"about/CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>Atualizado verifica\u00e7\u00e3o de tipo est\u00e1tico <code>mypy</code> para compatibilidade de vers\u00e3o a partir do Python 3.8;</li> <li>Atualizado logo do projeto;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_7","title":"Fixed","text":"<ul> <li>Ajuste de conflitos entre ruff e mypy;</li> <li>Recuperado cobertura de 100% no m\u00f3dulo changelog.cli;</li> </ul>"},{"location":"about/CHANGELOG/#030-2023-12-24","title":"0.3.0   \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_3","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online (https://development-incolume.github.io/incolume.py.changelog/);</li> </ul>"},{"location":"about/CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc4-2023-12-24","title":"0.3.0rc4    \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_4","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online;</li> </ul>"},{"location":"about/CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc3-2023-12-24","title":"0.3.0rc3    \u2014    2023-12-24:","text":""},{"location":"about/CHANGELOG/#added_5","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> <li>Acrescentado fluxo CI/CD para gera\u00e7\u00e3o de documenta\u00e7\u00e3o;</li> <li>Acrescentado documenta\u00e7\u00e3o web online;</li> </ul>"},{"location":"about/CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc2-2023-12-23","title":"0.3.0rc2    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em Pypi;</li> </ul>"},{"location":"about/CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc1-2023-12-23","title":"0.3.0rc1    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> <li>Acrescentado fluxo para publica\u00e7\u00e3o em TestPyPi;</li> </ul>"},{"location":"about/CHANGELOG/#changed_6","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#030rc0-2023-12-23","title":"0.3.0rc0    \u2014    2023-12-23:","text":""},{"location":"about/CHANGELOG/#added_8","title":"Added","text":"<ul> <li>Acrescentado valida\u00e7\u00e3o CI/CD multiplataforma ao projeto;</li> <li>Definido checagem lint via ruff para CI/CD;</li> <li>Inclu\u00eddo guia para markdown no menu da documenta\u00e7\u00e3o;</li> <li>Inclu\u00eddo valida\u00e7\u00e3o CI/CD para QA (Quality Assurance);</li> <li>Acrescentado suporte a Python 3.12;</li> </ul>"},{"location":"about/CHANGELOG/#changed_7","title":"Changed","text":"<ul> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.cli;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog.changelog;</li> <li>Atingido cobertura de 100% no m\u00f3dulo changelog;</li> <li>Acrescentado exemplos dos m\u00e9todos da API;</li> <li>Uniformizado testes multiplataforma para (Linux e Windows);</li> <li>Cobertura parcial para estilo mypy;</li> </ul>"},{"location":"about/CHANGELOG/#020-2023-12-21","title":"0.2.0   \u2014    2023-12-21:","text":""},{"location":"about/CHANGELOG/#added_9","title":"Added","text":"<ul> <li>Pacotes de documenta\u00e7\u00e3o;</li> <li>Pacotes de seguran\u00e7a de software;</li> <li>Pacotes de desenvolvimento;</li> <li>Pacote types-toml;</li> <li>Ferramentas de QA;</li> <li>Documenta\u00e7\u00e3o padr\u00e3o(Google Style);</li> <li>Documenta\u00e7\u00e3o de API;</li> <li>Badges para documenta\u00e7\u00e3o;</li> <li>Estilo PEP8;</li> <li>100% de cobertura no m\u00f3dulo cli;</li> <li>Compatibilidade com Python 3.8;</li> <li>Valida\u00e7\u00e3o com ruff para todas as vers\u00f5es de Python configuradas;</li> <li>CI/CD funcional para multiplataforma;</li> </ul>"},{"location":"about/CHANGELOG/#changed_8","title":"Changed","text":"<ul> <li>README atualizado;</li> <li>Menu atualizado;</li> <li>Caracteres para Slugfy no nome do brach;</li> <li>Realoca\u00e7\u00e3o de Changelog para diret\u00f3rio docs;</li> <li>URLs do projeto atualizada;</li> <li>Comandos de terminal via script atualizados;</li> <li>Retorno do fixture;</li> </ul>"},{"location":"about/CHANGELOG/#fixed_8","title":"Fixed","text":"<ul> <li>Linters corrigidos;</li> <li>Comando de captura de datas;</li> <li>Namespace duplicado;</li> </ul>"},{"location":"about/CHANGELOG/#010-2023-12-12","title":"0.1.0     \u2014    2023-12-12:","text":""},{"location":"about/CHANGELOG/#added_10","title":"Added","text":"<ul> <li>Projeto emancipado de https://gitlab.com/development-incolume/incolumepy.utils;</li> </ul>"},{"location":"about/CONTRIBUTORS/","title":"Mantenedores / Contribudores","text":"Nome Mantenedor Desenvolvedor Testador Documentador Contato Brito @britodfbr Igor Gabriel @igorgabrielg Frederico Louren\u00e7o Cavalcante de Souza @Fredvet00 Alfredo Gustavo \ud83d\udd34 \ud83d\udd34 \ud83d\udd34 @alfredogust Gustavo Ribeiro @Gustavo0121 Jo\u00e3o Ribeiro @EVANGELISTA-RIBEIRO"},{"location":"about/LICENSE/","title":"LICENSE","text":""},{"location":"about/LICENSE/#this-is-free-and-unencumbered-software-released-into-the-public-domain","title":"This is free and unencumbered software released into the public domain.","text":"<p>Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.</p> <p>In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p>For more information, please refer to https://unlicense.org</p>"},{"location":"api/","title":"Documenta\u00e7\u00e3o da API","text":"<p>Changelog Module.</p> <p>CLI - Command Line Interface module.</p>"},{"location":"api/#incolume.py.changelog.changelog.Changelog","title":"<code>Changelog</code>","text":"<p>Changelog class.</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>class Changelog:\n    \"\"\"Changelog class.\"\"\"\n\n    def __init__(\n        self: Changelog,\n        file_output: Path | str = '',\n        url_compare: str = '',\n        *,\n        reverse: bool = True,\n        **kwargs: str,\n    ):\n        \"\"\"Initialize from Changelog class.\n\n        Args:\n            file_output: The output file of changelog.\n            reverse: reverse to the last update be the first.\n            url_compare: Url to compare.\n            url_convetional_commit(str): Url of convetional commit.\n            url_keepachangelog(str): Url of keep a changelog.\n            url_principal(str): Url principal do projeto.\n            url_semver(str): Url of semantic version.\n            **kwargs: Anyone of the positional items.\n\n        Return:\n            None\n        \"\"\"\n        self.file_output = file_output or Path('CHANGELOG.md')\n        self.url_compare = url_compare\n        self.reverse = reverse\n        self.url_principal = kwargs.get(\n            'url_pricipal',\n            'https://gitlab.com/development-incolume/incolume.py.changelog',\n        )\n        self.url_keepachangelog = kwargs.get(\n            'url_keepachangelog',\n            'https://keepachangelog.com/en/1.0.0/',\n        )\n        self.url_semver = kwargs.get(\n            'url_semver',\n            'https://semver.org/spec/v2.0.0.html',\n        )\n        self.url_convetional_commit = kwargs.get(\n            'url_convetional_commit',\n            'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n        )\n\n    @staticmethod\n    def iter_logs(\n        content: list[tuple[str, dict[str, Any]]],\n        *,\n        linked: bool = True,\n    ) -&gt; list[str]:\n        r\"\"\"Iterador de registros git.\n\n        Args:\n            content: Content register in git.\n            linked: If has link.\n\n        Return:\n            A list with the version, date and a message.\n\n        Raises:\n            None\n\n        Examples:\n            &gt;&gt;&gt; iter_logs(\n            [('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n            'messages': {'Added': ['New function', 'One more new function.'],\n            'Fixed': ['A bug of connection.'],},},),], False)\n            ['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n            '\\n### Added',\n            '\\n  - New function;',\n            '\\n  - One more new function;',\n            '\\n### Fixed',\n            '\\n  - A bug of connection.\",;',],\n        \"\"\"\n        result = []\n        for _, entrada in content:\n            logging.debug(entrada)\n            if linked:\n                result.append(\n                    f\"\\n\\n## [{entrada['key']}]\\t &amp;#8212; \"\n                    f\"\\t{entrada['date']}:\",\n                )\n            else:\n                result.append(\n                    f\"\\n\\n## {entrada['key']}\\t &amp;#8212; \\t{entrada['date']}:\",\n                )\n\n            for label, msgs in entrada['messages'].items():\n                result.append(f'\\n### {label.capitalize()}')\n                for msg in msgs:\n                    frase = msg.strip()\n                    frase = frase[0].upper() + frase[1:]\n                    result.append(f'\\n  - {frase};')\n        return result\n\n    def header(self: Changelog) -&gt; list[str]:\n        r\"\"\"Header of changelog file.\n\n        Return:\n            Return a list with a header of changelog file.\n\n        Raises:\n            None\n\n        Examples:\n            &gt;&gt;&gt; changelog_header()\n            ['# CHANGELOG\\n\\n\\n',\n            'All notable changes to this project',\n            ' will be documented in this file.\\n\\n',\n            'The format is based on ',\n            '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n            'this project adheres to'\n            '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n            'and [Conventional Commit]'\n            '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n            'This file was automatically generated for',\n            ' [incolume.py.changelog](https://github.com/development-incolume/'\n            'incolume.py.changelog/-/tree/0.2.0a2)',\n            '\\n\\n---\\n']\n\n            &gt;&gt;&gt; changelog_header(\n            url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n            url_semver=https://semver.org/spec/v1.0.0.html)\n            [\"# CHANGELOG\\n\\n\\n\",\n            \"All notable changes to this project\",\n            \" will be documented in this file.\\n\\n\",\n            \"The format is based on \",\n            \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n            \"this project adheres to \"\n            \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n            \"and [Conventional Commit]\"\n            \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n            \"This file was automatically generated for\",\n            \"[incolume.py.changelog](https://github.com/development-incolume/'\n            'incolume.py.changelog/-/tree/0.2.0a0)\",\n            \"\\n\\n---\\n\"]\n        \"\"\"\n        return [\n            '# CHANGELOG\\n\\n\\n',\n            'All notable changes to this project',\n            ' will be documented in this file.\\n\\n',\n            'The format is based on ',\n            f'[Keep a Changelog]({self.url_keepachangelog}), ',\n            'this project adheres to '\n            f'[Semantic Versioning]({self.url_semver}) '\n            f'and [Conventional Commit]({self.url_convetional_commit}).\\n\\n',\n            'This file was automatically generated for',\n            f' [{__title__}]({self.url_principal}/-/tree/{__version__})',\n            '\\n\\n---\\n',\n        ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.__init__","title":"<code>__init__(file_output='', url_compare='', *, reverse=True, **kwargs)</code>","text":"<p>Initialize from Changelog class.</p> <p>Parameters:</p> Name Type Description Default <code>file_output</code> <code>Path | str</code> <p>The output file of changelog.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>reverse to the last update be the first.</p> <code>True</code> <code>url_compare</code> <code>str</code> <p>Url to compare.</p> <code>''</code> <code>url_convetional_commit(str)</code> <p>Url of convetional commit.</p> required <code>url_keepachangelog(str)</code> <p>Url of keep a changelog.</p> required <code>url_principal(str)</code> <p>Url principal do projeto.</p> required <code>url_semver(str)</code> <p>Url of semantic version.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>None</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def __init__(\n    self: Changelog,\n    file_output: Path | str = '',\n    url_compare: str = '',\n    *,\n    reverse: bool = True,\n    **kwargs: str,\n):\n    \"\"\"Initialize from Changelog class.\n\n    Args:\n        file_output: The output file of changelog.\n        reverse: reverse to the last update be the first.\n        url_compare: Url to compare.\n        url_convetional_commit(str): Url of convetional commit.\n        url_keepachangelog(str): Url of keep a changelog.\n        url_principal(str): Url principal do projeto.\n        url_semver(str): Url of semantic version.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        None\n    \"\"\"\n    self.file_output = file_output or Path('CHANGELOG.md')\n    self.url_compare = url_compare\n    self.reverse = reverse\n    self.url_principal = kwargs.get(\n        'url_pricipal',\n        'https://gitlab.com/development-incolume/incolume.py.changelog',\n    )\n    self.url_keepachangelog = kwargs.get(\n        'url_keepachangelog',\n        'https://keepachangelog.com/en/1.0.0/',\n    )\n    self.url_semver = kwargs.get(\n        'url_semver',\n        'https://semver.org/spec/v2.0.0.html',\n    )\n    self.url_convetional_commit = kwargs.get(\n        'url_convetional_commit',\n        'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.header","title":"<code>header()</code>","text":"<p>Header of changelog file.</p> Return <p>Return a list with a header of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_header()\n['# CHANGELOG\\n\\n\\n',\n'All notable changes to this project',\n' will be documented in this file.\\n\\n',\n'The format is based on ',\n'[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n'this project adheres to'\n'[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n'and [Conventional Commit]'\n'(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n'This file was automatically generated for',\n' [incolume.py.changelog](https://github.com/development-incolume/'\n'incolume.py.changelog/-/tree/0.2.0a2)',\n'\\n\\n---\\n']\n</code></pre> <pre><code>&gt;&gt;&gt; changelog_header(\nurl_keepachangelog='https://keepachangelog.com/en/2.0.0/',\nurl_semver=https://semver.org/spec/v1.0.0.html)\n[\"# CHANGELOG\\n\\n\\n\",\n\"All notable changes to this project\",\n\" will be documented in this file.\\n\\n\",\n\"The format is based on \",\n\"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n\"this project adheres to \"\n\"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n\"and [Conventional Commit]\"\n\"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n\"This file was automatically generated for\",\n\"[incolume.py.changelog](https://github.com/development-incolume/'\n'incolume.py.changelog/-/tree/0.2.0a0)\",\n\"\\n\\n---\\n\"]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def header(self: Changelog) -&gt; list[str]:\n    r\"\"\"Header of changelog file.\n\n    Return:\n        Return a list with a header of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_header()\n        ['# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n        'this project adheres to'\n        '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n        'and [Conventional Commit]'\n        '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n        'This file was automatically generated for',\n        ' [incolume.py.changelog](https://github.com/development-incolume/'\n        'incolume.py.changelog/-/tree/0.2.0a2)',\n        '\\n\\n---\\n']\n\n        &gt;&gt;&gt; changelog_header(\n        url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n        url_semver=https://semver.org/spec/v1.0.0.html)\n        [\"# CHANGELOG\\n\\n\\n\",\n        \"All notable changes to this project\",\n        \" will be documented in this file.\\n\\n\",\n        \"The format is based on \",\n        \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n        \"this project adheres to \"\n        \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n        \"and [Conventional Commit]\"\n        \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n        \"This file was automatically generated for\",\n        \"[incolume.py.changelog](https://github.com/development-incolume/'\n        'incolume.py.changelog/-/tree/0.2.0a0)\",\n        \"\\n\\n---\\n\"]\n    \"\"\"\n    return [\n        '# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        f'[Keep a Changelog]({self.url_keepachangelog}), ',\n        'this project adheres to '\n        f'[Semantic Versioning]({self.url_semver}) '\n        f'and [Conventional Commit]({self.url_convetional_commit}).\\n\\n',\n        'This file was automatically generated for',\n        f' [{__title__}]({self.url_principal}/-/tree/{__version__})',\n        '\\n\\n---\\n',\n    ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.Changelog.iter_logs","title":"<code>iter_logs(content, *, linked=True)</code>  <code>staticmethod</code>","text":"<p>Iterador de registros git.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content register in git.</p> required <code>linked</code> <code>bool</code> <p>If has link.</p> <code>True</code> Return <p>A list with the version, date and a message.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; iter_logs(\n[('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n'messages': {'Added': ['New function', 'One more new function.'],\n'Fixed': ['A bug of connection.'],},},),], False)\n['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n'\\n### Added',\n'\\n  - New function;',\n'\\n  - One more new function;',\n'\\n### Fixed',\n'\\n  - A bug of connection.\",;',],\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>@staticmethod\ndef iter_logs(\n    content: list[tuple[str, dict[str, Any]]],\n    *,\n    linked: bool = True,\n) -&gt; list[str]:\n    r\"\"\"Iterador de registros git.\n\n    Args:\n        content: Content register in git.\n        linked: If has link.\n\n    Return:\n        A list with the version, date and a message.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; iter_logs(\n        [('1.0.0a5', {'date': '2023-12-21', 'key': '1.0.0a5',\n        'messages': {'Added': ['New function', 'One more new function.'],\n        'Fixed': ['A bug of connection.'],},},),], False)\n        ['\\n\\n## 1.0.0a5\\t &amp;#8212; \\t2023-12-21:',\n        '\\n### Added',\n        '\\n  - New function;',\n        '\\n  - One more new function;',\n        '\\n### Fixed',\n        '\\n  - A bug of connection.\",;',],\n    \"\"\"\n    result = []\n    for _, entrada in content:\n        logging.debug(entrada)\n        if linked:\n            result.append(\n                f\"\\n\\n## [{entrada['key']}]\\t &amp;#8212; \"\n                f\"\\t{entrada['date']}:\",\n            )\n        else:\n            result.append(\n                f\"\\n\\n## {entrada['key']}\\t &amp;#8212; \\t{entrada['date']}:\",\n            )\n\n        for label, msgs in entrada['messages'].items():\n            result.append(f'\\n### {label.capitalize()}')\n            for msg in msgs:\n                frase = msg.strip()\n                frase = frase[0].upper() + frase[1:]\n                result.append(f'\\n  - {frase};')\n    return result\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_body","title":"<code>changelog_body(content, content_formated, **kwargs)</code>","text":"<p>Body of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content of changelog.</p> required <code>content_formated</code> <code>list[str]</code> <p>Content formated of changelog.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>Return a list with a content of changelog's body.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_body([('1.0.1', {Added: 'New function'})],\n['1.0.1', 'Added', 'New Function'])\n['[1.0.1]', 'Added', 'New Function']\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_body(\n    content: list[tuple[str, dict[str, Any]]],\n    content_formated: list[str],\n    **kwargs: str,\n) -&gt; list[str]:\n    \"\"\"Body of changelog file.\n\n    Args:\n        content: Content of changelog.\n        content_formated: Content formated of changelog.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        Return a list with a content of changelog's body.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_body([('1.0.1', {Added: 'New function'})],\n        ['1.0.1', 'Added', 'New Function'])\n        ['[1.0.1]', 'Added', 'New Function']\n    \"\"\"\n    logging.debug(kwargs)\n    content_formated.extend(Changelog.iter_logs(content[:-1]))\n    content_formated.extend(Changelog.iter_logs(content[-1:], linked=False))\n    return content_formated\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_footer","title":"<code>changelog_footer(content, content_formated, **kwargs)</code>","text":"<p>Footer of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content of changelog's footer</p> required <code>content_formated</code> <code>list[str]</code> <p>Content formated of changelog's footer</p> required <code>urlcompare</code> <p>Url to compare.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>Return a list with a footer of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_footer([('1.0.1',{Added: 'New function'})],\n['1.0.1', 'Added', 'New Function'])\n['1.0.1', 'Added', 'New Function',\n'\\n---\\n\\n',\n'[1.0.1]: https://github.com/development-incolume/'\n'incolume.py.changelog/-/compare/1.0.0...1.0.1']\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_footer(\n    content: list[tuple[str, dict[str, Any]]],\n    content_formated: list[str],\n    **kwargs: str,\n) -&gt; list[str]:\n    r\"\"\"Footer of changelog file.\n\n    Args:\n        content: Content of changelog's footer\n        content_formated: Content formated of changelog's footer\n        urlcompare: Url to compare.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        Return a list with a footer of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_footer([('1.0.1',{Added: 'New function'})],\n        ['1.0.1', 'Added', 'New Function'])\n        ['1.0.1', 'Added', 'New Function',\n        '\\n---\\n\\n',\n        '[1.0.1]: https://github.com/development-incolume/'\n        'incolume.py.changelog/-/compare/1.0.0...1.0.1']\n    \"\"\"\n    urlcompare = (\n        kwargs.get('urlcompare')\n        or 'https://github.com/development-incolume/'\n        'incolume.py.changelog/-/compare'\n    )\n    logging.debug('urlcompare=%s', urlcompare)\n    content_formated.append('\\n\\n---\\n\\n')\n    y: dict[str, Any] = {}\n    for _, x in content[::-1]:\n        if y:\n            content_formated.append(\n                f'[{x[\"key\"]}]: {urlcompare}/{y[\"key\"]}...{x[\"key\"]}\\n',\n            )\n        y = x\n    return content_formated\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_header","title":"<code>changelog_header(**kwargs)</code>","text":"<p>Header of changelog file.</p> <p>Parameters:</p> Name Type Description Default <code>url_keepachangelog</code> <code>str</code> <p>url for keep changelog.</p> required <code>url_semver</code> <code>str</code> <p>url for semantic version.</p> required <code>url_convetional_commit</code> <code>str</code> <p>url for convetional commit.</p> required <code>url_project</code> <code>str</code> <p>url principal for project.</p> required <code>kwargs</code> <code>str</code> <p>Anyone of the others items.</p> <code>{}</code> Return <p>Return a list with a header of changelog file.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_header()\n['# CHANGELOG\\n\\n\\n',\n'All notable changes to this project',\n' will be documented in this file.\\n\\n',\n'The format is based on ',\n'[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n'this project adheres to'\n'[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n'and [Conventional Commit]'\n'(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n'This file was automatically generated for',\n' [incolume.py.changelog](https://gitlab.com/development-incolume/'\n'incolumepy.utils/-/tree/0.2.0a2)',\n'\\n\\n---\\n']\n</code></pre> <pre><code>&gt;&gt;&gt; changelog_header(\n    url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n    url_semver=https://semver.org/spec/v1.0.0.html)\n[\"# CHANGELOG\\n\\n\\n\",\n\"All notable changes to this project\",\n\" will be documented in this file.\\n\\n\",\n\"The format is based on \",\n\"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n\"this project adheres to \"\n\"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n\"and [Conventional Commit]\"\n\"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n\"This file was automatically generated for\",\n\"[incolume.py.changelog](https://github.com/development-\"\n\"incolume/incolume.py.changelog/-/tree/0.2.0a0)\",\n\"\\n\\n---\\n\"]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_header(\n    **kwargs: str,\n) -&gt; list[str]:\n    r\"\"\"Header of changelog file.\n\n    Args:\n        url_keepachangelog (str): url for keep changelog.\n        url_semver (str): url for semantic version.\n        url_convetional_commit (str): url for convetional commit.\n        url_project (str): url principal for project.\n        kwargs: Anyone of the others items.\n\n    Return:\n        Return a list with a header of changelog file.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_header()\n        ['# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        '[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), ',\n        'this project adheres to'\n        '[Semantic Versioning](https://semver.org/spec/v2.0.0.html) '\n        'and [Conventional Commit]'\n        '(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n',\n        'This file was automatically generated for',\n        ' [incolume.py.changelog](https://gitlab.com/development-incolume/'\n        'incolumepy.utils/-/tree/0.2.0a2)',\n        '\\n\\n---\\n']\n\n        &gt;&gt;&gt; changelog_header(\n            url_keepachangelog='https://keepachangelog.com/en/2.0.0/',\n            url_semver=https://semver.org/spec/v1.0.0.html)\n        [\"# CHANGELOG\\n\\n\\n\",\n        \"All notable changes to this project\",\n        \" will be documented in this file.\\n\\n\",\n        \"The format is based on \",\n        \"[Keep a Changelog](https://keepachangelog.com/en/2.0.0/),\",\n        \"this project adheres to \"\n        \"[Semantic Versioning](https://semver.org/spec/v1.0.0.html)\"\n        \"and [Conventional Commit]\"\n        \"(https://www.conventionalcommits.org/pt-br/v1.0.0/).\\n\\n\",\n        \"This file was automatically generated for\",\n        \"[incolume.py.changelog](https://github.com/development-\"\n        \"incolume/incolume.py.changelog/-/tree/0.2.0a0)\",\n        \"\\n\\n---\\n\"]\n    \"\"\"\n    url_keepachangelog = kwargs.get(\n        'url_keepachangelog',\n        'https://keepachangelog.com/en/1.0.0/',\n    )\n    url_semver = kwargs.get(\n        'url_semver',\n        'https://semver.org/spec/v2.0.0.html',\n    )\n    url_convetional_commit = kwargs.get(\n        'url_convetional_commit',\n        'https://www.conventionalcommits.org/pt-br/v1.0.0/',\n    )\n    url_project = kwargs.get(\n        'url_project',\n        'https://github.com/development-incolume/incolume.py.changelog',\n    )\n    return [\n        '# CHANGELOG\\n\\n\\n',\n        'All notable changes to this project',\n        ' will be documented in this file.\\n\\n',\n        'The format is based on ',\n        f'[Keep a Changelog]({url_keepachangelog}), ',\n        'this project adheres to '\n        f'[Semantic Versioning]({url_semver}) '\n        f'and [Conventional Commit]({url_convetional_commit}).\\n\\n',\n        'This file was automatically generated for',\n        f' [{__title__}]({url_project}/-/tree/{__version__})',\n        '\\n\\n---\\n',\n    ]\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_messages","title":"<code>changelog_messages(*, text, start=None, end=None, **kwargs)</code>","text":"<p>Changelog messages sort and classify.</p> <p>Parameters:</p> Name Type Description Default <code>end</code> <code>str | int | None</code> <p>End of Message</p> <code>None</code> <code>start</code> <code>str | int | None</code> <p>Start of Message</p> <code>None</code> <code>text</code> <code>str</code> <p>Changelog's message</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>return a list of tuples with a changelog menssage per line.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_messages('1.0.0 Security: a;b;c;'\n'Removed: 1;2;3; Changed: a;b;c;d;e;'\n'Fixed: http://example.com; http://httpbin.com;'\n'Deprecated: 1;2;3;a;s;b; Added: a1;a2;a3.',\n'1.1.0 Removed: 1;2'\n'Added: g;u')\n[('1.0.0',{'key': '1.0.0', 'date': '2023-12-21',\n'messages': {\n'Added': ['a1', 'a2', 'a3.'],\n'Changed': ['a', 'b', 'c', 'd', 'e'],\n'Deprecated': ['1', '2', '3', 'a', 's', 'b'],\n'Fixed': ['http://example.com', 'http://httpbin.com',],\n'Removed': ['1', '2', '3'],\n'Security': ['a', 'b', 'c'],},},),\n('1.1.0',{'key': '1.1.0', 'date': '2023-12-21',\n'messages': {\n'Added': ['g', 'u'],\n'Removed: ['1', '2'],},},)]\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_messages(\n    *,\n    text: str,\n    start: str | int | None = None,\n    end: str | int | None = None,\n    **kwargs: str,\n) -&gt; list[tuple[str, dict[str, Any]]]:\n    \"\"\"Changelog messages sort and classify.\n\n    Args:\n        end: End of Message\n        start: Start of Message\n        text: Changelog's message\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        return a list of tuples with a changelog menssage per line.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_messages('1.0.0 Security: a;b;c;'\n        'Removed: 1;2;3; Changed: a;b;c;d;e;'\n        'Fixed: http://example.com; http://httpbin.com;'\n        'Deprecated: 1;2;3;a;s;b; Added: a1;a2;a3.',\n        '1.1.0 Removed: 1;2'\n        'Added: g;u')\n        [('1.0.0',{'key': '1.0.0', 'date': '2023-12-21',\n        'messages': {\n        'Added': ['a1', 'a2', 'a3.'],\n        'Changed': ['a', 'b', 'c', 'd', 'e'],\n        'Deprecated': ['1', '2', '3', 'a', 's', 'b'],\n        'Fixed': ['http://example.com', 'http://httpbin.com',],\n        'Removed': ['1', '2', '3'],\n        'Security': ['a', 'b', 'c'],},},),\n        ('1.1.0',{'key': '1.1.0', 'date': '2023-12-21',\n        'messages': {\n        'Added': ['g', 'u'],\n        'Removed: ['1', '2'],},},)]\n    \"\"\"\n    logging.debug('parameters: (%s %s %s %s)', text, start, end, kwargs)\n    lang: str = kwargs.get('lang', '')\n    if start is not None:\n        start = int(start)\n    if end is not None:\n        end = int(end)\n\n    records = []\n    for msg in text.strip().splitlines()[start:end]:\n        logging.debug('msg=%s', msg)\n        record = msg_classify(msg=msg, lang=lang)\n        logging.debug('record=%s', record)\n        records.append((record['key'], record))\n    logging.debug('type return %s=%s', inspect.stack()[0][3], type(records))\n    logging.debug('return %s=%s', inspect.stack()[0][3], records)\n    return records\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.changelog_write","title":"<code>changelog_write(*, content, **kwargs)</code>","text":"<p>Write CHANGELOG.md file formatted.</p> <p>Parameters:</p> Name Type Description Default <code>changelog_file</code> <p>Path of changelog file.</p> required <code>content</code> <code>list[tuple[str, dict[str, Any]]]</code> <p>Content to write the changelog</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>True if success.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; changelog_write(['Added: funcionalidade nova.'])\nTrue\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def changelog_write(\n    *,\n    content: list[tuple[str, dict[str, Any]]],\n    **kwargs: str,\n) -&gt; bool:\n    \"\"\"Write CHANGELOG.md file formatted.\n\n    Args:\n        changelog_file: Path of changelog file.\n        content: Content to write the changelog\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        True if success.\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; changelog_write(['Added: funcionalidade nova.'])\n        True\n    \"\"\"\n    changelog_file = Path(kwargs.get('changelog_file') or CHANGELOG_FILE)\n    logging.debug('changelog_file=%s', changelog_file)\n\n    content_formated = changelog_header()\n    content_formated = changelog_body(content, content_formated, **kwargs)\n    content_formated = changelog_footer(content, content_formated, **kwargs)\n\n    with changelog_file.open('w') as f:\n        f.writelines(content_formated)\n        return True\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.get_os_command","title":"<code>get_os_command(key)</code>","text":"<p>Generate command to git tag according OS.</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def get_os_command(key: str) -&gt; str:\n    \"\"\"Generate command to git tag according OS.\"\"\"\n    cmd_supply = {\n        'win': r'^^{commit} --',\n    }\n    cmd = rf'git show -s --format=%cs {key}'\n    os_id = sys.platform.casefold()[:3]\n    cmd += cmd_supply.get(os_id, r'^{commit} --')\n\n    logging.debug(cmd)\n    return cmd\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.msg_classify","title":"<code>msg_classify(msg, lang='')</code>","text":"<p>Classify and sort one record for messages git tag -n.</p> <p>Parameters:</p> Name Type Description Default <code>lang</code> <code>str</code> <p>Language of command.</p> <code>''</code> <code>msg</code> <code>str</code> <p>Message of command.</p> required <code>**kwargs</code> <p>Anyone of the positional items.</p> required Return <p>A dictionary with the version, date and a message.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If lang selected don't have support.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; msg_classify('1.0.0 Adicionado: Nova funcionalidade.', 'pt-BR')\n{'key': '0.1.0', 'date': '2023-12-18',\n'messages': {'Added': ['Nova funcionalidade.']}\n</code></pre> <pre><code>&gt;&gt;&gt; msg_classify('Corregido: correcci\u00f3n de error.', 'es-AR')\nValueError: es-AR not suported! Use en-US, pt-BR\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def msg_classify(msg: str, lang: str = '') -&gt; dict[str, Any]:\n    \"\"\"Classify and sort one record for messages git tag -n.\n\n    Args:\n        lang: Language of command.\n        msg: Message of command.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        A dictionary with the version, date and a message.\n\n    Raises:\n        ValueError: If lang selected don't have support.\n\n    Examples:\n        &gt;&gt;&gt; msg_classify('1.0.0 Adicionado: Nova funcionalidade.', 'pt-BR')\n        {'key': '0.1.0', 'date': '2023-12-18',\n        'messages': {'Added': ['Nova funcionalidade.']}\n\n        &gt;&gt;&gt; msg_classify('Corregido: correcci\u00f3n de error.', 'es-AR')\n        ValueError: es-AR not suported! Use en-US, pt-BR\n    \"\"\"\n    logging.debug(lang)\n    suport_lang: dict[str, Any] = {\n        'en-US': {\n            'Added': 'Added',\n            'Changed': 'Changed',\n            'Deprecated': 'Deprecated',\n            'Removed': 'Removed',\n            'Fixed': 'Fixed',\n            'Security': 'Security',\n        },\n        'pt-BR': {\n            'Adicionado': 'Added',\n            'Modificado': 'Changed',\n            'Obsoleto': 'Deprecated',\n            'Removido': 'Removed',\n            'Corrigido': 'Fixed',\n            'Seguran\u00e7a': 'Security',\n        },\n    }\n    suport_lang.update(\n        {'all': {k: v for d in suport_lang.values() for k, v in d.items()}},\n    )\n    if lang not in suport_lang:\n        logging.error(\n            ValueError(f'{lang} not suported! Use {suport_lang.keys()}'),\n        )\n\n    key, msg = msg.split(maxsplit=1)\n    cmd = get_os_command(key)\n    date = subprocess.getoutput(cmd).strip()\n    logging.debug(date)\n\n    logging.debug('key=%s; date=%s; msg=%s', key, date, msg)\n    selected_lang = suport_lang.get(lang, suport_lang['all'])\n    regex: str = rf\"({'|'.join(selected_lang.keys())})\\s?:\"\n\n    txt = re.sub(\n        regex,\n        r'\u00a7\u00a7\\1\u00a7:',\n        msg,\n        flags=re.I,\n    )\n    logging.debug('txt=%s', txt)\n    dct: dict[str, Any] = {}\n    for i, j in sorted(\n        x.strip().rstrip(';').split('\u00a7:') for x in txt.strip().split('\u00a7\u00a7') if x\n    ):\n        dct.setdefault(selected_lang[i.capitalize()], []).extend(\n            j.strip().split(';'),\n        )\n\n    return {'key': key, 'date': date, 'messages': dct}\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.run","title":"<code>run()</code>","text":"<p>Examples ran.</p> Return <p>None</p> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def run() -&gt; None:\n    \"\"\"Examples ran.\n\n    Return:\n        None\n    \"\"\"\n    msg = subprocess.getoutput('git tag -n').splitlines()[-14]\n    logging.debug(msg)\n    logging.debug('msg_classify=%s', msg_classify(msg=msg))\n\n    msg = subprocess.getoutput('git tag -n')\n    result = changelog_messages(text=msg)\n\n    logging.debug('result=%s', result)\n    logging.debug('type(result)=%s', type(result))\n    result = sorted(result, reverse=True, key=key_versions_2_sort)\n    logging.debug('result = %s; result type = %s', result, type(result))\n\n    changelog_write(content=result)\n    update_changelog()\n    logging.info(\n        msg_classify(\n            '0.1.0           added: Projeto emancipado de '\n            'https://gitlab.com/development-incolume/incolumepy.utils',\n        ),\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.changelog.update_changelog","title":"<code>update_changelog(changelog_file='', *, reverse=True, **kwargs)</code>","text":"<p>Update Changelog.md file.</p> <p>Parameters:</p> Name Type Description Default <code>changelog_file</code> <code>str</code> <p>changelog full filename.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>reverse to the last update be the first.</p> <code>True</code> <code>urlcompare(str)</code> <p>Url to compare.</p> required <code>**kwargs</code> <code>str</code> <p>Anyone of the positional items.</p> <code>{}</code> Return <p>True if success</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; update_changelog()\nTrue\n&gt;&gt;&gt; update_changelog(changelog_file='/tmp/CHANGELOG.md')\nTrue\n&gt;&gt;&gt; update_changelog(changelog_file=Path('CHANGELOG.md'),\nurlcompare=\"https://github.com/development-incolume/\"\n\"incolume.py.changelog/-/compare\")\nTrue\n</code></pre> Source code in <code>incolume/py/changelog/changelog.py</code> <pre><code>def update_changelog(\n    changelog_file: str = '',\n    *,\n    reverse: bool = True,\n    **kwargs: str,\n) -&gt; bool:\n    \"\"\"Update Changelog.md file.\n\n    Args:\n        changelog_file: changelog full filename.\n        reverse: reverse to the last update be the first.\n        urlcompare(str): Url to compare.\n        **kwargs: Anyone of the positional items.\n\n    Return:\n        True if success\n\n    Raises:\n        None\n\n    Examples:\n        &gt;&gt;&gt; update_changelog()\n        True\n        &gt;&gt;&gt; update_changelog(changelog_file='/tmp/CHANGELOG.md')\n        True\n        &gt;&gt;&gt; update_changelog(changelog_file=Path('CHANGELOG.md'),\n        urlcompare=\"https://github.com/development-incolume/\"\n        \"incolume.py.changelog/-/compare\")\n        True\n    \"\"\"\n    logging.debug('argumentos=%s,%s,%s', changelog_file, reverse, kwargs)\n    urlcompare: str = (\n        kwargs.get('urlcompare')\n        or 'https://github.com/development-incolume'\n        '/incolume.py.changelog/-/compare'\n    )\n    content: str = kwargs.get('content', subprocess.getoutput('git tag -n'))\n    logging.info('registros encontrados ..')\n    logging.debug('content=%s', content)\n\n    return changelog_write(\n        content=sorted(\n            changelog_messages(\n                text=content,\n                start=kwargs.get('start', None),\n                end=kwargs.get('end', None),\n            ),\n            reverse=reverse,\n            key=key_versions_2_sort,\n        ),\n        urlcompare=urlcompare,\n        changelog_file=changelog_file,\n    )\n</code></pre>"},{"location":"api/#incolume.py.changelog.cli.changelog","title":"<code>changelog(file_changelog, url='', *, reverse=True)</code>","text":"<p>Operacionaliza uma interface CLI para m\u00f3dulo incolume.py.changelog.</p> <p>Parameters:</p> Name Type Description Default <code>file_changelog</code> <code>str</code> <p>changelog full filename.</p> required <code>url</code> <code>str</code> <p>url compare from repository of project.</p> <code>''</code> <code>reverse</code> <code>bool</code> <p>Reverse order of records.</p> <code>True</code> Return <p>True if success</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When there is not git tag records.</p> Source code in <code>incolume/py/changelog/cli.py</code> <pre><code>@click.command()\n@click.argument(\n    'file_changelog',\n    type=click.STRING,\n    default='CHANGELOG.md',\n)\n@click.option(\n    '--url',\n    '-u',\n    default='https://github.com/development-incolume/'\n    'incolume.py.changelog/-/compare',\n    help='Url compare from repository of project.',\n)\n@click.option(\n    '--reverse',\n    '-r',\n    default=True,\n    help='Reverse order of records.',\n)\ndef changelog(\n    file_changelog: str,\n    url: str = '',\n    *,\n    reverse: bool = True,\n) -&gt; None:\n    \"\"\"Operacionaliza uma interface CLI para m\u00f3dulo incolume.py.changelog.\n\n    Args:\n        file_changelog:  changelog full filename.\n        url: url compare from repository of project.\n        reverse: Reverse order of records.\n\n    Return:\n        True if success\n\n    Raises:\n        ValueError: When there is not git tag records.\n\n    \"\"\"\n    result = update_changelog(\n        changelog_file=file_changelog,\n        urlcompare=url,\n        reverse=reverse,\n    )\n    click.echo(f'{result}')\n</code></pre>"},{"location":"api/#incolume.py.changelog.cli.greeting","title":"<code>greeting(nome)</code>","text":"<p>Retorna a sauda\u00e7\u00e3o para o nome passado.</p> <p>Parameters:</p> Name Type Description Default <code>nome</code> <code>str</code> <p>Nome de usu\u00e1rio</p> required Return <p>N\u00e3o h\u00e1 retorno. Uma sauda\u00e7\u00e3o \u00e9 exibida na tela.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; greeting Yoda\nOi Yoda!\n</code></pre> <pre><code>&gt;&gt;&gt; greeting\nOi &lt;usu\u00e1rio logado&gt;\n</code></pre> Source code in <code>incolume/py/changelog/cli.py</code> <pre><code>@click.command()\n@click.argument('nome', envvar='USERNAME', type=click.STRING)\ndef greeting(nome: str) -&gt; None:\n    \"\"\"Retorna a sauda\u00e7\u00e3o para o nome passado.\n\n    Args:\n      nome: Nome de usu\u00e1rio\n\n    Return:\n      N\u00e3o h\u00e1 retorno. Uma sauda\u00e7\u00e3o \u00e9 exibida na tela.\n\n    Raises:\n      None\n\n    Examples:\n        &gt;&gt;&gt; greeting Yoda\n        Oi Yoda!\n\n        &gt;&gt;&gt; greeting\n        Oi &lt;usu\u00e1rio logado&gt;\n\n    \"\"\"\n    click.echo(f'Oi {nome.title()}!')\n</code></pre>"},{"location":"user_guide/code_of_conduct/","title":"C\u00f3digo de Conduta do Contribuinte","text":""},{"location":"user_guide/code_of_conduct/#nosso-compromisso","title":"Nosso Compromisso","text":"<p>N\u00f3s, como membros, colaboradores e l\u00edderes, nos comprometemos a fazer a participa\u00e7\u00e3o em nosso comunidade uma experi\u00eancia livre de ass\u00e9dio para todos, independentemente da idade, corpo tamanho, defici\u00eancia vis\u00edvel ou invis\u00edvel, etnia, caracter\u00edsticas sexuais, g\u00eanero identidade e express\u00e3o, n\u00edvel de experi\u00eancia, educa\u00e7\u00e3o, status socioecon\u00f4mico, nacionalidade, apar\u00eancia pessoal, ra\u00e7a, casta, cor, religi\u00e3o ou identidade e orienta\u00e7\u00e3o.</p> <p>Comprometemo-nos a agir e interagir de forma a contribuir para um ambiente aberto, acolhedor, comunidade diversificada, inclusiva e saud\u00e1vel.</p>"},{"location":"user_guide/code_of_conduct/#nossos-padroes","title":"Nossos padr\u00f5es","text":"<p>Exemplos de comportamentos que contribuem para um ambiente positivo para os nossos comunidade incluem:</p> <ul> <li>Demonstrar empatia e bondade para com outras pessoas</li> <li>Ser respeitoso com as diferentes opini\u00f5es, pontos de vista e experi\u00eancias</li> <li>Dar e aceitar graciosamente feedback construtivo</li> <li>Aceitar a responsabilidade e pedir desculpas aos afetados por nossos erros,   e aprendendo com a experi\u00eancia</li> <li>Concentrar-se no que \u00e9 melhor n\u00e3o apenas para n\u00f3s como indiv\u00edduos, mas para o geral   comunidade</li> </ul> <p>Exemplos de comportamento inaceit\u00e1vel incluem:</p> <ul> <li>O uso de linguagem ou imagens sexualizadas e aten\u00e7\u00e3o sexual ou avan\u00e7os de   qualquer tipo</li> <li>Trolling, coment\u00e1rios insultuosos ou depreciativos e ataques pessoais ou pol\u00edticos</li> <li>Ass\u00e9dio p\u00fablico ou privado</li> <li>Publicar informa\u00e7\u00f5es privadas de outras pessoas, como endere\u00e7o f\u00edsico ou de e-mail,   sem sua permiss\u00e3o expl\u00edcita</li> <li>Outras condutas que possam ser razoavelmente consideradas inadequadas em um   ambiente profissional</li> </ul>"},{"location":"user_guide/code_of_conduct/#responsabilidades-de-execucao","title":"Responsabilidades de Execu\u00e7\u00e3o","text":"<p>Os l\u00edderes comunit\u00e1rios s\u00e3o respons\u00e1veis por esclarecer e fazer cumprir nossos padr\u00f5es de comportamento aceit\u00e1vel e tomar\u00e1 as medidas corretivas apropriadas e justas resposta a qualquer comportamento que considerem inadequado, amea\u00e7ador, ofensivo, ou prejudicial.</p> <p>Os l\u00edderes da comunidade t\u00eam o direito e a responsabilidade de remover, editar ou rejeitar coment\u00e1rios, commits, c\u00f3digo, edi\u00e7\u00f5es wiki, quest\u00f5es e outras contribui\u00e7\u00f5es que s\u00e3o n\u00e3o alinhado a este C\u00f3digo de Conduta, e comunicar\u00e1 os motivos da modera\u00e7\u00e3o decis\u00f5es quando apropriado.</p>"},{"location":"user_guide/code_of_conduct/#alcance","title":"Alcance","text":"<p>Este C\u00f3digo de Conduta aplica-se a todos os espa\u00e7os comunit\u00e1rios e tamb\u00e9m quando um indiv\u00edduo est\u00e1 representando oficialmente a comunidade em espa\u00e7os p\u00fablicos. Exemplos de representa\u00e7\u00e3o de nossa comunidade incluem o uso de um endere\u00e7o de e-mail oficial, postar por meio de uma conta oficial de m\u00eddia social ou agindo como um representante em um evento online ou offline.</p>"},{"location":"user_guide/code_of_conduct/#aplicacao","title":"Aplica\u00e7\u00e3o","text":"<p>Casos de comportamento abusivo, de ass\u00e9dio ou de outra forma inaceit\u00e1vel podem ser reportado aos l\u00edderes comunit\u00e1rios respons\u00e1veis pela fiscaliza\u00e7\u00e3o contato@incolume.com.br. Todas as reclama\u00e7\u00f5es ser\u00e3o analisadas e investigadas prontamente e de forma justa.</p> <p>Todos os l\u00edderes comunit\u00e1rios s\u00e3o obrigados a respeitar a privacidade e a seguran\u00e7a do relator de qualquer incidente.</p>"},{"location":"user_guide/code_of_conduct/#diretrizes-de-aplicacao","title":"Diretrizes de aplica\u00e7\u00e3o","text":"<p>Os l\u00edderes comunit\u00e1rios seguir\u00e3o estas Diretrizes de Impacto na Comunidade para determinar as consequ\u00eancias de qualquer a\u00e7\u00e3o que considerem violar este C\u00f3digo de Conduta:</p>"},{"location":"user_guide/code_of_conduct/#1-correcao","title":"1. Corre\u00e7\u00e3o","text":"<p>Impacto na comunidade: uso de linguagem impr\u00f3pria ou outro comportamento considerado pouco profissional ou indesej\u00e1vel na comunidade.</p> <p>Consequ\u00eancia: Uma advert\u00eancia privada por escrito dos l\u00edderes comunit\u00e1rios, fornecendo clareza sobre a natureza da viola\u00e7\u00e3o e uma explica\u00e7\u00e3o de por que o comportamento era inadequado. Um pedido de desculpas p\u00fablico pode ser solicitado.</p>"},{"location":"user_guide/code_of_conduct/#2-aviso","title":"2. Aviso","text":"<p>Impacto na comunidade: uma viola\u00e7\u00e3o por meio de um \u00fanico incidente ou s\u00e9rie de a\u00e7\u00f5es.</p> <p>Consequ\u00eancia: um aviso com consequ\u00eancias para o comportamento continuado. N\u00e3o intera\u00e7\u00e3o com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, por um per\u00edodo de tempo especificado. Isto inclui evitar intera\u00e7\u00f5es em espa\u00e7os comunit\u00e1rios, bem como canais externos como as redes sociais. A viola\u00e7\u00e3o destes termos pode levar a uma suspens\u00e3o tempor\u00e1ria ou permanente banimento.</p>"},{"location":"user_guide/code_of_conduct/#3-banimento-temporario","title":"3. Banimento Tempor\u00e1rio","text":"<p>Impacto na comunidade: uma viola\u00e7\u00e3o grave dos padr\u00f5es da comunidade, incluindo comportamento inadequado sustentado.</p> <p>Consequ\u00eancia: banimento tempor\u00e1rio de qualquer tipo de intera\u00e7\u00e3o ou p\u00fablico comunica\u00e7\u00e3o com a comunidade por um determinado per\u00edodo de tempo. Nenhum p\u00fablico ou intera\u00e7\u00e3o privada com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, \u00e9 permitido durante este per\u00edodo. A viola\u00e7\u00e3o destes termos pode levar a um banimento permanente.</p>"},{"location":"user_guide/code_of_conduct/#4-banimento-permanente","title":"4. Banimento Permanente","text":"<p>Impacto na comunidade: Demonstrando um padr\u00e3o de viola\u00e7\u00e3o da comunidade padr\u00f5es, incluindo comportamento inadequado sustentado, ass\u00e9dio de um indiv\u00edduo, ou agress\u00e3o ou deprecia\u00e7\u00e3o de classes de indiv\u00edduos.</p> <p>Consequ\u00eancia: banimento permanente de qualquer tipo de intera\u00e7\u00e3o p\u00fablica dentro do comunidade.</p>"},{"location":"user_guide/code_of_conduct/#atribuicao","title":"Atribui\u00e7\u00e3o","text":"<p>Este C\u00f3digo de Conduta \u00e9 adaptado do Contributor Covenant, vers\u00e3o 2.1, dispon\u00edvel em https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>As Diretrizes de Impacto na Comunidade foram inspiradas por Escada de aplica\u00e7\u00e3o do c\u00f3digo de conduta da Mozilla.</p> <p>Para obter respostas a perguntas comuns sobre este c\u00f3digo de conduta, consulte as Perguntas frequentes em https://www.contributor-covenant.org/faq. As tradu\u00e7\u00f5es est\u00e3o dispon\u00edveis em https://www.contributor-covenant.org/translations.</p>"},{"location":"user_guide/development/","title":"Guia de contribu\u00ed\u00e7\u00e3o (Desenvolvimento)","text":"<p>O desenvolvimento deste projeto segue algumas regras e conven\u00e7\u00f5es b\u00e1sicas. Como estilo de formata\u00e7\u00e3o de c\u00f3digo,</p>"},{"location":"user_guide/development/#codigo-de-conduta","title":"C\u00f3digo de conduta","text":"<p>Detalhes em docs/user_guide/code_of_conduct.md.</p>"},{"location":"user_guide/development/#padroes-aplicados","title":"Padr\u00f5es aplicados","text":"<p>Este projeto segue as recomenda\u00e7\u00f5es descritas em Tecnologias e Conven\u00e7\u00f5es Adotadas.</p>"},{"location":"user_guide/development/#prerequisitos","title":"Prerequisitos","text":"<ul> <li>Sistema Operacional Linux Like (preferencialmente) ou WSL</li> <li>git client</li> <li>python 3.10+</li> <li>pyenv</li> <li>poetry 1.2.0+ (preferencialmente) ou pip</li> </ul>"},{"location":"user_guide/development/#iniciando-ambiente-de-desenvolvimento","title":"Iniciando ambiente de desenvolvimento","text":"<p>Para definir a vers\u00e3o do Python para o ambiente, considerando o uso do poetry, e instalar as depend\u00eancias execute os comandos abaixo:</p> <pre><code>$ poetry env use 3.10\n$ poetry install\n</code></pre> <p>Estes comandos criar\u00e3o um ambiente virtual em Python, na vers\u00e3o especificada, apresentada no exemplo como 3.10, e instalar\u00e1 todas as depend\u00eancias fixadas em <code>pyproject.toml</code> com suas restri\u00e7\u00f5es especificadas em <code>poetry.lock</code>.</p> <p>Ap\u00f3s o ambiente criado com suas depend\u00eancias instaladas, execute o comando:</p> <pre><code>$ poetry run task setup\n</code></pre> <p>Este comando garantir\u00e1 que os hooks do projeto sejam ativados, e executados nos eventos apropriados.</p>"},{"location":"user_guide/development/#qualidade-de-codigo","title":"Qualidade de C\u00f3digo","text":"<p>\u00c9 utilizado de ferramentas validadoras de qualidade de c\u00f3digo est\u00e1tico, tamb\u00e9m denominadas linters.</p> <p>H\u00e1 uso das seguintes:</p> <ul> <li>black / blue</li> <li>isort</li> <li>mypy</li> <li>pydocstyle</li> <li>pylint</li> </ul>"},{"location":"user_guide/development/#seguranca","title":"Seguran\u00e7a","text":"<p>Tamb\u00e9m h\u00e1 preocupa\u00e7\u00e3o com a seguran\u00e7a do c\u00f3digo implementado, os pacotes <code>bandit</code>, <code>pip-audit</code> e <code>safety</code> s\u00e3o utilizados para monitoramento de seguran\u00e7a das depend\u00eancias.</p>"},{"location":"user_guide/development/#bandit","title":"bandit","text":"<p>Bandit \u00e9 uma ferramenta projetada para encontrar problemas de seguran\u00e7a comuns no c\u00f3digo Python. Para fazer isso, o Bandit processa cada arquivo, cria um AST a partir dele e executa os plug-ins apropriados nos nodos do AST. Depois que o Bandit terminar de escanear todos os arquivos, ele gerar\u00e1 um relat\u00f3rio. <pre><code>bandit -c pyproject.toml -r incolume/ test/\n</code></pre></p>"},{"location":"user_guide/development/#black","title":"black","text":"<p>O <code>black</code> \u00e9 classificado como Autoformator, s\u00e3o programas que refatoram seu c\u00f3digo para se adequar ao PEP 8 automaticamente. <pre><code>black --check incolume/ tests/\n</code></pre></p>"},{"location":"user_guide/development/#blue","title":"blue","text":"<p>o blue \u00e9 um autoformatador de c\u00f3digo um pouco menos intransigente do que o black, e segue a ideia de formatar automaticamente o c\u00f3digo Python, totalmente inspirada pelo black.</p> <pre><code>blue --check incolume/ tests/\n</code></pre>"},{"location":"user_guide/development/#flake8","title":"flake8","text":"<p>Flake8 \u00e9 um envolucro em torno das ferramentas: PyFlakes, pycodestyle e Roteiro McCabe de Ned Batchelder</p> <pre><code>flake8 --config pyproject.toml incolume/ tests/\n</code></pre>"},{"location":"user_guide/development/#pylama","title":"pylama","text":"<p>O <code>pylama</code> \u00e9 um envolucro que cont\u00e9m: PyFlakes, pycodestyle, McCabe. <pre><code>pylama incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#isort","title":"isort","text":"<p>O <code>isort</code> \u00e9 um utilit\u00e1rio para classificar as importa\u00e7\u00f5es em ordem alfab\u00e9tica e separadas automaticamente em se\u00e7\u00f5es e por tipo. <pre><code>isort incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#mypy","title":"mypy","text":"<p>O <code>Mypy</code> \u00e9 essencialmente um analizador de c\u00f3digo est\u00e1tico melhorado e com verificador de tipos, que pode detectar muitos erros de programa\u00e7\u00e3o analisando o c\u00f3digo, sem precisar execut\u00e1-lo. Ele possui um poderoso sistema de tipos com recursos como infer\u00eancia de tipos, digita\u00e7\u00e3o gradual, gen\u00e9ricos e tipos de uni\u00e3o. <pre><code>mypy incolumepy\n</code></pre></p>"},{"location":"user_guide/development/#pip-audit","title":"pip-audit","text":"<p>O <code>pip-audit</code> \u00e9 uma ferramenta para escanear pacotes em ambientes Python que possuem vulnerabilidades conhecidas. Este pacote faz uso do Python Packaging Advisory Database (https://github.com/pypa/advisory-database) atrav\u00e9s da API PyPI JSON como relat\u00f3rio de vulnerabilidade de c\u00f3digo</p> <pre><code>pip-audit\n</code></pre>"},{"location":"user_guide/development/#pydocstyle","title":"pydocstyle","text":"<p>O <code>pydocstyle</code> \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica para verificar a conformidade com as conven\u00e7\u00f5es docstring do Python. Ele suporta a maior parte do PEP 257, entretanto n\u00e3o deve ser considerado uma implementa\u00e7\u00e3o de refer\u00eancia. <pre><code>pydocstyle incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#pylint","title":"pylint","text":"<p>O <code>Pylint</code> \u00e9 uma ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico do Python que procura erros de programa\u00e7\u00e3o, ajuda a impor um padr\u00e3o de codifica\u00e7\u00e3o, detecta cheiros de c\u00f3digo e oferece sugest\u00f5es simples de refatora\u00e7\u00e3o. \u00c9 altamente configur\u00e1vel, possuindo pragmas especiais para controlar seus erros e avisos de dentro do seu c\u00f3digo, bem como de um extenso arquivo de configura\u00e7\u00e3o. Tamb\u00e9m \u00e9 poss\u00edvel escrever seus pr\u00f3prios plugins para adicionar suas pr\u00f3prias verifica\u00e7\u00f5es ou para estender o <code>pylint</code> de uma forma ou de outra. <pre><code>pylint incolumepy tests\n</code></pre></p>"},{"location":"user_guide/development/#ruff","title":"ruff","text":"<p>O <code>ruff</code> \u00e9 um linter Python extremamente r\u00e1pido, codificado em Python. <pre><code>poetry run ruff check --preview incolume/ tests/\n</code></pre></p>"},{"location":"user_guide/development/#safety","title":"safety","text":"<p>O <code>safety</code> verifica as depend\u00eancias instaladas quanto a vulnerabilidades de seguran\u00e7a conhecidas. Por padr\u00e3o, ele usa o banco de dados de vulnerabilidades Python aberto Safety DB. <pre><code>safety check\n</code></pre></p>"},{"location":"user_guide/development/#ferramentas-de-automacao","title":"Ferramentas de Automa\u00e7\u00e3o","text":"<p>Para facilitar o trabalho, v\u00e1rias das tarefas est\u00e3o automatizadas pelo githooks, e/ou Makefile, e/ou tox e/ou taskipy.</p>"},{"location":"user_guide/development/#tox","title":"Tox","text":""},{"location":"user_guide/development/#verificacao-basica","title":"Verifica\u00e7\u00e3o b\u00e1sica","text":"<p>Na Verifica\u00e7\u00e3o b\u00e1sica engloba: - black - blue - isort - pydocstyle - mypy - pylint - py310 - py311</p> <pre><code>tox\n</code></pre>"},{"location":"user_guide/development/#verificacao-dos-testes-com-as-versoes-python-disponiveis","title":"Verifica\u00e7\u00e3o dos testes com as vers\u00f5es python dispon\u00edveis","text":"<pre><code>tox -e py310,py311\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-tres-linters-apenas-no-em-um-modulo","title":"Verifica\u00e7\u00e3o de tr\u00eas linters apenas no em um m\u00f3dulo","text":"<pre><code>tox -e pydocstyle,black,isort -- -k incolume/py/pack/module.py\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-todos-os-linters-configurados","title":"Verifica\u00e7\u00e3o de todos os linters configurados","text":"<pre><code>tox -e linters\n</code></pre>"},{"location":"user_guide/development/#verificacao-e-relatorio-de-cobertura","title":"Verifica\u00e7\u00e3o e relat\u00f3rio de cobertura","text":"<pre><code>tox -e stats\n</code></pre>"},{"location":"user_guide/development/#verificacao-resumida-de-seguranca","title":"Verifica\u00e7\u00e3o resumida de seguran\u00e7a","text":"<pre><code>tox -e safety\n</code></pre>"},{"location":"user_guide/development/#execucao-completa","title":"Execu\u00e7\u00e3o completa","text":"<p>Executa todas as verifica\u00e7\u00f5es dipon\u00edveis contidas no <code>tox</code>. <pre><code>tox -e ALL\n</code></pre></p>"},{"location":"user_guide/development/#makefile","title":"Makefile","text":"<p>O <code>Makefile</code> foi personalizado para rodar com as op\u00e7\u00f5es necess\u00e1rias. Com o help voc\u00ea ver\u00e1 todas as op\u00e7\u00f5es. Este comando \u00e9 exclusivo para linux like. <pre><code>make help\n</code></pre></p>"},{"location":"user_guide/development/#iniciar-ambiente-dev","title":"Iniciar ambiente dev","text":"<p>Atrav\u00e9s do <code>Makefile</code>, pode-se criar um ambiente virtual para o projeto, conforme a vers\u00e3o python predefinida, instalando todas as depend\u00eancias necess\u00e1rias, al\u00e9m de ativar as configura\u00e7\u00f5es em passos simples.</p> <pre><code>make setup\n</code></pre>"},{"location":"user_guide/development/#limpeza-basica-do-ambiente","title":"Limpeza b\u00e1sica do ambiente","text":"<p>Limpeza de arquivos tempor\u00e1rios, logs, compilados e afins. <pre><code>make clean\n</code></pre></p>"},{"location":"user_guide/development/#limpeza-profunda-do-ambiente","title":"Limpeza profunda do ambiente","text":"<p>Al\u00e9m da limpeza b\u00e1sica, s\u00e3o removidos dist, build, htmlcov, .tox, *_cache, e outros conte\u00fados gerados pelas ferramentas de desenvolvimento. <pre><code>make clean-all\n</code></pre></p>"},{"location":"user_guide/development/#gerar-a-documentacao-atualizada","title":"Gerar a documenta\u00e7\u00e3o atualizada","text":"<pre><code>make docsgen\n</code></pre>"},{"location":"user_guide/development/#verificacao-de-seguranca-e-exposicao-de-motivos","title":"Verifica\u00e7\u00e3o de seguran\u00e7a e exposi\u00e7\u00e3o de motivos","text":"<pre><code>make safety\n</code></pre>"},{"location":"user_guide/development/#taskipy","title":"Taskipy","text":"<p>Com <code>taskipy</code> as tarefas s\u00e3o definidas puramente com Python em um arquivo e pode-se executar rotinas complexas com comandos simples.</p> <pre><code>$ poetry run task -l\n\nbandit          poetry run bandit -c pyproject.toml -r incolume/ test/\ncheck-all       Checking all\nclean           Shallow clean into environment (.pyc, .cache, .egg, .log, et all)\nclean-all       Deep cleanning into environment (dist, build, htmlcov, .tox, *_cache, et all)\ndocs-build      Generate documentation\ndocs-serve      Run server documentation\nlint            Checking all linters configurated\nlint_black      Checking with black\nlint_blue       Checking with blue\nlint_flake8     Checking with flake8\nlint_isort      Checking with isort\nlint_mypy       Checking with mypy\nlint_pydocstyle Checking with pydocstyle\nlint_pylint     Checking with pylint\npatch           Generate a patch Sematic Version\npremajor        poetry version premajor\npreminor        poetry version preminor\nprerelease      poetry version prerelease\nsafety          Check safety of packages into project.\nsec             Checking environment's safety\nchangelog       Update changelog file\nsetup           Configure environment develop\n</code></pre>"},{"location":"user_guide/keep-a-changelog/","title":"keep a changelog","text":""},{"location":"user_guide/keep-a-changelog/#o-que-e-um-changelog","title":"O que \u00e9 um changelog?","text":"<p>Um changelog \u00e9 um arquivo que cont\u00e9m uma lista selecionada, ordenada cronologicamente, de mudan\u00e7as significativas para cada vers\u00e3o de um projeto.</p>"},{"location":"user_guide/keep-a-changelog/#por-que-manter-um-changelog","title":"Por que manter um changelog?","text":"<p>Para facilitar que usu\u00e1rios e contribuidores vejam precisamente quais mudan\u00e7as significativas foram realizadas entre cada vers\u00e3o publicada de um projeto.</p>"},{"location":"user_guide/keep-a-changelog/#quem-precisa-de-um-changelog","title":"Quem precisa de um changelog?","text":"<p>Pessoas precisam. Seja consumidores ou desenvolvedores, os usu\u00e1rios finais de softwares s\u00e3o seres humanos que se preocupam com o que est\u00e1 no software. Quando o software muda, as pessoas querem saber por que e como.</p>"},{"location":"user_guide/keep-a-changelog/#como-fazer-um-bom-changelog","title":"Como fazer um bom changelog?","text":""},{"location":"user_guide/keep-a-changelog/#principios-fundamentais","title":"Princ\u00edpios fundamentais","text":"<ul> <li>Changelogs s\u00e3o para humanos, n\u00e3o m\u00e1quinas.</li> <li>Deve haver uma entrada para cada vers\u00e3o.</li> <li>Altera\u00e7\u00f5es do mesmo tipo devem ser agrupadas.</li> <li>Vers\u00f5es e se\u00e7\u00f5es devem ser vincul\u00e1veis (com links).</li> <li>A vers\u00e3o mais recente vem em primeiro lugar.</li> <li>A data de lan\u00e7amento de cada vers\u00e3o \u00e9 exibida.</li> <li>Mencione se voc\u00ea segue o versionamento sem\u00e2ntico.</li> </ul>"},{"location":"user_guide/keep-a-changelog/#tipos-de-mudancas","title":"Tipos de mudan\u00e7as","text":"<ul> <li>Added: (Adicionado) para novos recursos.</li> <li>Changed: (Modificado) para altera\u00e7\u00f5es em recursos existentes.</li> <li>Deprecated: (Obsoleto) para recursos que ser\u00e3o removidos nas pr\u00f3ximas vers\u00f5es.</li> <li>Removed: (Removido) para recursos removidos nesta vers\u00e3o.</li> <li>Fixed: (Corrigido) para qualquer corre\u00e7\u00e3o de bug.</li> <li>Security: (Seguran\u00e7a) em caso de vulnerabilidades.</li> </ul>"},{"location":"user_guide/keep-a-changelog/#como-aplicar-changelog-neste-projeto","title":"Como aplicar changelog neste projeto?","text":"<p>Este projeto utiliza o pacote python incolumepy.utils, que possui a    prerrogativa de criar um <code>CHANGELOG.md</code> automaticamente a partir das entradas do <code>git tag -n</code>.</p> <p>Exemplos: <pre><code>git tag -f Unreleased -m 'added: Adicionado orienta\u00e7\u00f5es sobre Keep a CHANGELOG.md em docs/user_guide/keep-a-chagelog.md'\ngit tag -f `poetry version -s` -m 'added: Adicionado orienta\u00e7\u00f5es sobre Keep a CHANGELOG.md em docs/user_guide/keep-a-chagelog.md'\ngit tag -f 1.0.0 -m 'Added: (Adicionado) para novos recursos;\nChanged: (Modificado) para altera\u00e7\u00f5es em recursos existentes;\nDeprecated: (Obsoleto) para recursos que ser\u00e3o removidos nas pr\u00f3ximas vers\u00f5es;\nRemoved: (Removido) para recursos removidos nesta vers\u00e3o;\nFixed: (Corrigido) para qualquer corre\u00e7\u00e3o de bug;\nSecurity: (Seguran\u00e7a) em caso de vulnerabilidades;'\n</code></pre></p>"},{"location":"user_guide/keep-a-changelog/#atualizar-o-changelogmd","title":"Atualizar o CHANGELOG.md","text":"<pre><code>task gcl\n</code></pre>"},{"location":"user_guide/keep-a-changelog/#referencia","title":"Refer\u00eancia","text":"<ul> <li>https://keepachangelog.com/pt-BR/1.0.0/</li> </ul>"},{"location":"user_guide/markdown/","title":"Markdown - Sint\u00e1xe b\u00e1sica","text":"<p>baseado em https://www.markdownguide.org/basic-syntax/</p>"},{"location":"user_guide/markdown/#visao-geral","title":"Vis\u00e3o geral","text":"<p>Quase todos os aplicativos Markdown suportam a sintaxe b\u00e1sica descrita no documento de design original do Markdown. Existem pequenas varia\u00e7\u00f5es e discrep\u00e2ncias entre os processadores Markdown \u2013 elas s\u00e3o anotadas em linha sempre que poss\u00edvel.</p>"},{"location":"user_guide/markdown/#titulos","title":"T\u00edtulos","text":"<p>Para criar um t\u00edtulo, adicione sinais num\u00e9ricos (<code>#</code>) antes de uma palavra ou frase. O n\u00famero de sinais num\u00e9ricos que voc\u00ea usa deve corresponder ao n\u00edvel do t\u00edtulo. Por exemplo, para criar um t\u00edtulo de n\u00edvel tr\u00eas (<code>&lt;h3&gt;</code>), use tr\u00eas sinais num\u00e9ricos (por exemplo, <code>### My Header</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code># Heading level 1</code> <code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code> Heading level 1 <code># Heading level 2</code> <code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code> Heading level 1 <code># Heading level 3</code> <code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code> Heading level 3 <code># Heading level 4</code> <code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code> Heading level 4 <code># Heading level 5</code> <code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code> Heading level 5 <code># Heading level 6</code> <code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code> Heading level 6"},{"location":"user_guide/markdown/#sintaxe-alternativa","title":"Sintaxe AlternativaHeading level 2","text":"<p>Como alternativa, na linha abaixo do texto, adicione qualquer n\u00famero de <code>==</code> caracteres para o n\u00edvel de t\u00edtulo 1 ou <code>--</code> caracteres para o n\u00edvel de t\u00edtulo 2.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>Heading level 1===============</code> <code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code> Heading level 1 <code>Heading level 2---------------</code> <code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code>"},{"location":"user_guide/markdown/#cabecalho-melhores-praticas","title":"Cabe\u00e7alho Melhores Pr\u00e1ticas","text":"<p>Os aplicativos de markdown n\u00e3o concordam sobre como lidar com a falta de espa\u00e7o entre os sinais num\u00e9ricos (<code>#</code>) e o nome do t\u00edtulo. Para compatibilidade, sempre coloque um espa\u00e7o entre os sinais num\u00e9ricos e o nome do t\u00edtulo.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code># Here's a Heading</code> <code>#Here's a Heading</code> <p>Voc\u00ea tamb\u00e9m deve colocar linhas em branco antes e depois de um t\u00edtulo para compatibilidade.</p> \u2705  Fa\u00e7a assim \u274c N\u00e3o assim <code>Try to put a blank line before...# Heading...and after a heading.</code> <code>Without blank lines, this might not look right.# Heading        Don't do this!</code>"},{"location":"user_guide/markdown/#paragrafos","title":"Par\u00e1grafos","text":"<p>Para criar par\u00e1grafos, use uma linha em branco para separar uma ou mais linhas de texto.</p> MarkDown HTML Sa\u00edda renderizada <code>Paragrafo1.Paragrafo2.</code> <code>&lt;p&gt;Paragrafo1.&lt;/p&gt;&lt;p&gt;Paragrafo2.&lt;/p&gt;</code> <code>Paragrafo1.Paragrafo2.</code>"},{"location":"user_guide/markdown/#melhores-praticas-de-paragrafo","title":"Melhores pr\u00e1ticas de par\u00e1grafo","text":"<p>A menos que o par\u00e1grafo esteja em uma lista, n\u00e3o recue os par\u00e1grafos com espa\u00e7os ou tabula\u00e7\u00f5es.</p> Observa\u00e7\u00e3o: se voc\u00ea precisar recuar par\u00e1grafos na sa\u00edda, consulte a se\u00e7\u00e3o sobre como recuar (tabula\u00e7\u00e3o)&lt; uma eu=3&gt;.  \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           Don't put tabs or spaces in front of your paragraphs.            Keep lines left-aligned like this. </code> <code>         \u00a0\u00a0\u00a0\u00a0This can result in unexpected         formatting problems.          \u00a0\u00a0Don't add tabs or spaces in front of paragraphs.         </code>"},{"location":"user_guide/markdown/#quebras-de-linha","title":"Quebras de linha","text":"<p>Para criar uma quebra de linha ou uma nova linha (<code>&lt;br&gt;</code>), termine uma linha com dois ou mais espa\u00e7os e digite return.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           This is the first line. \u00a0           And this is the second line.         </code> <code>&lt;p&gt;This is the first line.&lt;br&gt;          And this is the second line.&lt;/p&gt;</code> <p>Esta \u00e9 a primeira linha.         E esta \u00e9 a segunda linha.</p>"},{"location":"user_guide/markdown/#line-break-best-practices","title":"Pr\u00e1ticas recomendadas para quebra de linha","text":"<p>Voc\u00ea pode usar dois ou mais espa\u00e7os (comumente chamados de \u201cespa\u00e7o em branco \u00e0 direita\u201d) para quebras de linha em quase todos os aplicativos Markdown, mas isso \u00e9 controverso. \u00c9 dif\u00edcil ver espa\u00e7os em branco no final de um editor, e muitas pessoas acidentalmente ou intencionalmente colocam dois espa\u00e7os ap\u00f3s cada frase. Por esse motivo, voc\u00ea pode querer usar algo diferente de espa\u00e7os em branco \u00e0 direita para quebras de linha. Se seu aplicativo Markdown suportar HTML, voc\u00ea poder\u00e1 usar a tag HTML <code>&lt;br&gt;</code>.</p> <p>Para compatibilidade, use o espa\u00e7o em branco final ou a tag HTML <code>&lt;br&gt;</code> no final da linha.</p> <p>Existem duas outras op\u00e7\u00f5es que n\u00e3o recomendo usar. CommonMark e algumas outras linguagens de marca\u00e7\u00e3o leves permitem digitar uma barra invertida (<code>\\</code>) no final da linha, mas nem todos os aplicativos Markdown suportam isso, portanto n\u00e3o \u00e9 uma \u00f3tima op\u00e7\u00e3o de compatibilidade perspectiva. E pelo menos algumas linguagens de marca\u00e7\u00e3o leves n\u00e3o exigem nada no final da linha \u2014 basta digitar return e elas criar\u00e3o uma quebra de linha.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           First line with two spaces after. \u00a0           And the next line.            First line with the HTML tag after.&lt;br&gt;           And the next line. </code> <code>         First line with a backslash after.\\         And the next line.          First line with nothing after.         And the next line. </code>"},{"location":"user_guide/markdown/#enfase","title":"\u00canfase","text":"<p>Voc\u00ea pode adicionar \u00eanfase colocando o texto em negrito ou it\u00e1lico.</p>"},{"location":"user_guide/markdown/#bold","title":"Audacioso","text":"<p>Para texto em negrito, adicione dois asteriscos ou sublinhados antes e depois de uma palavra ou frase. Para colocar o meio de uma palavra em negrito para dar \u00eanfase, adicione dois asteriscos sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>I just love **bold text**.</code> <code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code> Adoro texto em negrito. <code>I just love __bold text__.</code> <code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code> Adoro texto em negrito. <code>Love**is**bold</code> <code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code> Amor\u00e9ousado"},{"location":"user_guide/markdown/#bold-best-practices","title":"Melhores pr\u00e1ticas ousadas","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos em negrito no meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           Love**is**bold         </code> <code>           Love__is__bold         </code>"},{"location":"user_guide/markdown/#italic","title":"it\u00e1lico","text":"<p>Para colocar o texto em it\u00e1lico, adicione um asterisco ou sublinhado antes e depois de uma palavra ou frase. Para colocar o meio de uma palavra em it\u00e1lico para dar \u00eanfase, adicione um asterisco sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>Italicized text is the *cat's meow*.</code> <code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code> O texto em it\u00e1lico \u00e9 o miau do gato. <code>Italicized text is the _cat's meow_.</code> <code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code> O texto em it\u00e1lico \u00e9 o miau do gato. <code>A*cat*meow</code> <code>A&lt;em&gt;cat&lt;/em&gt;meow</code> Umgatomiau"},{"location":"user_guide/markdown/#italic-best-practices","title":"Melhores pr\u00e1ticas em it\u00e1lico","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos para colocar em it\u00e1lico o meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           A*cat*meow         </code> <code>           A_cat_meow         </code>"},{"location":"user_guide/markdown/#bold-and-italic","title":"Negrito e It\u00e1lico","text":"<p>Para enfatizar o texto com negrito e it\u00e1lico ao mesmo tempo, adicione tr\u00eas asteriscos ou sublinhados antes e depois de uma palavra ou frase. Para colocar negrito e it\u00e1lico no meio de uma palavra para dar \u00eanfase, adicione tr\u00eas asteriscos sem espa\u00e7os ao redor das letras.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>This text is ***really important***.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is ___really important___.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is __*really important*__.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This text is **_really important_**.</code> <code>This text is &lt;em&gt;&lt;strong&gt;really important&lt;/strong&gt;&lt;/em&gt;.</code> Este texto \u00e9 muito importante. <code>This is really***very***important text.</code> <code>This is really&lt;em&gt;&lt;strong&gt;very&lt;/strong&gt;&lt;/em&gt;important text.</code> Este \u00e9 realmenteum texto muitoimportante. Observa\u00e7\u00e3o: a ordem das tags <code>em</code> e <code>strong</code> pode ser invertida dependendo do processador Markdown que voc\u00ea usa. 39;est\u00e1 usando."},{"location":"user_guide/markdown/#bold-and-italic-best-practices","title":"Pr\u00e1ticas recomendadas para negrito e it\u00e1lico","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com sublinhados no meio de uma palavra. Para compatibilidade, use asteriscos para negrito e it\u00e1lico no meio de uma palavra para dar \u00eanfase.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           This is really***very***important text.         </code> <code>           This is really___very___important text.         </code>"},{"location":"user_guide/markdown/#citacoes-em-bloco","title":"Cita\u00e7\u00f5es em bloco","text":"<p>Para criar uma cita\u00e7\u00e3o em bloco, adicione um <code>&gt;</code> antes de um par\u00e1grafo.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p>"},{"location":"user_guide/markdown/#blockquotes-with-multiple-paragraphs","title":"Cita\u00e7\u00f5es em bloco com v\u00e1rios par\u00e1grafos","text":"<p>Aspas em bloco podem conter v\u00e1rios par\u00e1grafos. Adicione um <code>&gt;</code> nas linhas em branco entre os par\u00e1grafos.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n&gt;\n&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p> <p>A Bruxa ordenou-lhe que limpasse as panelas e as chaleiras, varresse o ch\u00e3o e mantivesse o fogo alimentado com lenha.</p>"},{"location":"user_guide/markdown/#nested-blockquotes","title":"Cita\u00e7\u00f5es aninhadas","text":"<p>Aspas em bloco podem ser aninhadas. Adicione um <code>&gt;&gt;</code> antes do par\u00e1grafo que voc\u00ea deseja aninhar.</p> <pre><code>&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n&gt;\n&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Dorothy a seguiu por muitos dos belos quartos de seu castelo.</p> <p>A Bruxa ordenou-lhe que limpasse as panelas e as chaleiras, varresse o ch\u00e3o e mantivesse o fogo alimentado com lenha.</p>"},{"location":"user_guide/markdown/#blockquotes-with-other-elements","title":"Blockquotes com outros elementos","text":"<p>Blockquotes podem conter outros elementos formatados em Markdown. Nem todos os elementos podem ser usados \u200b\u200b\u2013 voc\u00ea precisar\u00e1 experimentar para ver quais funcionam.</p> <pre><code>&gt; #### The quarterly results look great!\n&gt;\n&gt; - Revenue was off the chart.\n&gt; - Profits were higher than ever.\n&gt;\n&gt;  *Everything* is going according to **plan**.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p>"},{"location":"user_guide/markdown/#the-quarterly-results-look-great","title":"Os resultados trimestrais parecem \u00f3timos!","text":"<ul> <li>A receita estava fora do gr\u00e1fico.</li> <li>Os lucros foram maiores do que nunca.</li> </ul> <p>Tudo est\u00e1 indo de acordo com o planejado.</p>"},{"location":"user_guide/markdown/#blockquotes-best-practices","title":"Pr\u00e1ticas recomendadas para cita\u00e7\u00f5es em bloco","text":"<p>Para compatibilidade, coloque linhas em branco antes e depois das aspas.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         Try to put a blank line before...          &gt; This is a blockquote          ...and after a blockquote.         </code> <code>         Without blank lines, this might not look right.         &gt; This is a blockquote         Don't do this!         </code>"},{"location":"user_guide/markdown/#listas","title":"Listas","text":"<p>Voc\u00ea pode organizar itens em listas ordenadas e n\u00e3o ordenadas.</p>"},{"location":"user_guide/markdown/#ordered-lists","title":"Listas ordenadas","text":"<p>Para criar uma lista ordenada, adicione itens de linha com n\u00fameros seguidos de pontos. Os n\u00fameros n\u00e3o precisam estar em ordem num\u00e9rica, mas a lista deve come\u00e7ar com o n\u00famero um.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>         1. First item         2. Second item         3. Third item         4. Fourth item       </code> <code>         &lt;ol&gt;           \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;           \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;         &lt;/ol&gt;       </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           1. Second item           1. Third item           1. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           8. Second item           3. Third item           5. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> <code>           1. First item           2. Second item           3. Third item           \u00a0\u00a0\u00a0\u00a01. Indented item           \u00a0\u00a0\u00a0\u00a02. Indented item           4. Fourth item         </code> <code>           &lt;ol&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item               \u00a0\u00a0\u00a0\u00a0&lt;ol&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;               \u00a0\u00a0\u00a0\u00a0&lt;/ol&gt;             \u00a0\u00a0&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ol&gt;         </code> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item             <ol> <li>Item recuado</li> <li>Item recuado</li> </ol> </li> <li>Quarto item</li> </ol>"},{"location":"user_guide/markdown/#ordered-list-best-practices","title":"Melhores pr\u00e1ticas de lista ordenada","text":"<p>CommonMark e algumas outras linguagens de marca\u00e7\u00e3o leves permitem usar par\u00eanteses (<code>)</code>) como delimitador (por exemplo, <code>1) First item</code>), mas nem todo Markdown os aplicativos suportam isso, portanto n\u00e3o \u00e9 uma \u00f3tima op\u00e7\u00e3o do ponto de vista de compatibilidade. Para fins de compatibilidade, use apenas pontos.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           1. First item           2. Second item         </code> <code>           1) First item           2) Second item         </code>"},{"location":"user_guide/markdown/#unordered-lists","title":"Listas n\u00e3o ordenadas","text":"<p>Para criar uma lista n\u00e3o ordenada, adicione travess\u00f5es (<code>-</code>), asteriscos (<code>*</code>) ou sinais de mais (<code>+</code>) na frente dos itens de linha. Recue um ou mais itens para criar uma lista aninhada.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           - First item           - Second item           - Third item           - Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           * First item           * Second item           * Third item           * Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           + First item           + Second item           + Third item           + Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> <code>           - First item           - Second item           - Third item           \u00a0\u00a0\u00a0\u00a0- Indented item           \u00a0\u00a0\u00a0\u00a0- Indented item           - Fourth item         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;First item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Second item&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Third item               \u00a0\u00a0\u00a0\u00a0&lt;ul&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;                 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;li&gt;Indented item&lt;/li&gt;               \u00a0\u00a0\u00a0\u00a0&lt;/ul&gt;             \u00a0\u00a0&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;Fourth item&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item             <ul> <li>Item recuado</li> <li>Item recuado</li> </ul> </li> <li>Quarto item</li> </ul>"},{"location":"user_guide/markdown/#starting-unordered-list-items-with-numbers","title":"Iniciando itens de lista n\u00e3o ordenados com n\u00fameros","text":"<p>Se precisar iniciar um item de lista n\u00e3o ordenado com um n\u00famero seguido de um ponto final, voc\u00ea pode usar uma barra invertida (<code>\\</code>) para escapar&lt; /span&gt; o ponto final.</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>           - 1968\\. A great year!           - I think 1969 was second best.         </code> <code>           &lt;ul&gt;             \u00a0\u00a0&lt;li&gt;1968. A great year!&lt;/li&gt;             \u00a0\u00a0&lt;li&gt;I think 1969 was second best.&lt;/li&gt;           &lt;/ul&gt;         </code> <ul> <li>1968. Um \u00f3timo ano!</li> <li>Acho que 1969 foi o segundo melhor.</li> </ul>"},{"location":"user_guide/markdown/#unordered-list-best-practices","title":"Pr\u00e1ticas recomendadas para lista n\u00e3o ordenada","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com diferentes delimitadores na mesma lista. Para compatibilidade, n\u00e3o misture e combine delimitadores na mesma lista \u2013 escolha um e mantenha-o.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>           - First item           - Second item           - Third item           - Fourth item         </code> <code>           + First item           * Second item           - Third item           + Fourth item         </code>"},{"location":"user_guide/markdown/#adding-elements-in-lists","title":"Adicionando Elementos em Listas","text":"<p>Para adicionar outro elemento a uma lista preservando a continuidade da lista, recue o elemento com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o, conforme mostrado nos exemplos a seguir.</p> Dica: se as coisas n\u00e3o aparecerem como voc\u00ea espera, verifique se voc\u00ea recuou os elementos da lista com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o."},{"location":"user_guide/markdown/#paragraphs","title":"Par\u00e1grafos","text":"<pre><code>* This is the first list item.\n* Here's the second list item.\n\n    I need to add another paragraph below the second list item.\n\n* And here's the third list item.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ul> <li>Este \u00e9 o primeiro item da lista.</li> <li> <p>Aqui est\u00e1 o segundo item da lista.</p> <p>Preciso adicionar outro par\u00e1grafo abaixo do segundo item da lista.</p> </li> <li>E aqui est\u00e1 o terceiro item da lista.</li> </ul>"},{"location":"user_guide/markdown/#blockquotes","title":"Cita\u00e7\u00f5es em bloco","text":"<pre><code>* This is the first list item.\n* Here's the second list item.\n\n    &gt; A blockquote would look great below the second list item.\n\n* And here's the third list item.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ul> <li>Este \u00e9 o primeiro item da lista.</li> <li> <p>Aqui est\u00e1 o segundo item da lista.</p> <p>Uma cita\u00e7\u00e3o em bloco ficaria \u00f3tima abaixo do segundo item da lista.</p> </li> <li>E aqui est\u00e1 o terceiro item da lista.</li> </ul>"},{"location":"user_guide/markdown/#code-blocks-1","title":"Blocos de c\u00f3digo","text":"<p>Blocos de c\u00f3digo normalmente s\u00e3o recuados com quatro espa\u00e7os ou uma tabula\u00e7\u00e3o. Quando estiverem em uma lista, recue-os com oito espa\u00e7os ou duas tabula\u00e7\u00f5es.</p> <pre><code>1. Open the file.\n2. Find the following code block on line 21:\n\n        &lt;html&gt;\n          &lt;head&gt;\n            &lt;title&gt;Test&lt;/title&gt;\n          &lt;/head&gt;\n\n3. Update the title to match the name of your website.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Abra o arquivo.</li> <li> <p>Encontre o seguinte bloco de c\u00f3digo na linha 21:</p> <pre><code> &lt;html&gt;\n   &lt;head&gt;\n     &lt;title&gt;Test&lt;/title&gt;\n   &lt;/head&gt;\n</code></pre> </li> <li>Atualize o t\u00edtulo para corresponder ao nome do seu site.</li> </ol>"},{"location":"user_guide/markdown/#images","title":"Imagens","text":"<pre><code>1. Open the file containing the Linux mascot.\n2. Marvel at its beauty.\n\n    ![Tux, the Linux mascot](/assets/images/tux.png)\n\n3. Close the file.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Abra o arquivo que cont\u00e9m o mascote do Linux.</li> <li> <p>Maravilhe-se com sua beleza.</p> <p></p> </li> <li>Feche o arquivo.</li> </ol>"},{"location":"user_guide/markdown/#lists","title":"Listas","text":"<p>Voc\u00ea pode aninhar uma lista n\u00e3o ordenada em uma lista ordenada ou vice-versa.</p> <pre><code>1. First item\n2. Second item\n3. Third item\n    - Indented item\n    - Indented item\n4. Fourth item\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item     <ul> <li>Item recuado</li> <li>Item recuado</li> </ul> </li> <li>Quarto item</li> </ol>"},{"location":"user_guide/markdown/#codigo","title":"C\u00f3digo","text":"<p>Para denotar uma palavra ou frase como c\u00f3digo, coloque-a entre crases (<code>`</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>At the command prompt, type `nano`.</code> <code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;. </code> No prompt de comando, digite <code>nano</code>."},{"location":"user_guide/markdown/#escaping-backticks","title":"Escapando de crases","text":"<p>Se a palavra ou frase que voc\u00ea deseja denotar como c\u00f3digo incluir um ou mais crases, voc\u00ea poder\u00e1 escapar dela colocando a palavra ou frase entre crases duplos (<code>``</code>).</p> Remarca\u00e7\u00e3o HTML Sa\u00edda renderizada <code>``Use `code` in your Markdown file.``</code> <code>&lt;code&gt;Use `code` in your Markdown file.&lt;/code&gt;</code> <code>Use `code` in your Markdown file.</code>"},{"location":"user_guide/markdown/#code-blocks","title":"Blocos de c\u00f3digo","text":"<p>Para criar blocos de c\u00f3digo, recue cada linha do bloco com pelo menos quatro espa\u00e7os ou uma tabula\u00e7\u00e3o.</p> <pre><code>    &lt;html&gt;\n      &lt;head&gt;\n      &lt;/head&gt;\n    &lt;/html&gt;\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <pre><code>&lt;html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n&lt;/html&gt;\n</code></pre> Observa\u00e7\u00e3o: para criar blocos de c\u00f3digo sem recuo de linhas, use blocos de c\u00f3digo protegidos."},{"location":"user_guide/markdown/#regras-horizontais","title":"Regras horizontais","text":"<p>Para criar uma regra horizontal, use tr\u00eas ou mais asteriscos (<code>***</code>), travess\u00f5es (<code>---</code>) ou sublinhados (<code>___</code>) em uma linha sozinhos.</p> <pre><code>***\n\n---\n\n_________________\n</code></pre> <p>A sa\u00edda renderizada de todos os tr\u00eas parece id\u00eantica:</p>"},{"location":"user_guide/markdown/#horizontal-rule-best-practices","title":"Pr\u00e1ticas recomendadas para regras horizontais","text":"<p>Para compatibilidade, coloque linhas em branco antes e depois das r\u00e9guas horizontais.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         Try to put a blank line before...          ---          ...and after a horizontal rule.         </code> <code>         Without blank lines, this would be a heading.         ---         Don't do this!         </code>"},{"location":"user_guide/markdown/#ligacoes","title":"Liga\u00e7\u00f5es","text":"<p>Para criar um link, coloque o texto do link entre colchetes (por exemplo, <code>[Duck Duck Go]</code>) e siga-o imediatamente com o URL entre par\u00eanteses (por exemplo, <code>(https://duckduckgo.com)</code>).</p> <pre><code>My favorite search engine is [Duck Duck Go](https://duckduckgo.com).\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Meu mecanismo de pesquisa favorito \u00e9 Duck Duck Go.</p> Observa\u00e7\u00e3o: para vincular a um elemento na mesma p\u00e1gina, consulte vincular a IDs de cabe\u00e7alho. Para criar um link que abre em uma nova guia ou janela, consulte a se\u00e7\u00e3o sobre destinos de link."},{"location":"user_guide/markdown/#adding-titles","title":"Adicionando t\u00edtulos","text":"<p>Opcionalmente, voc\u00ea pode adicionar um t\u00edtulo para um link. Isso aparecer\u00e1 como uma dica quando o usu\u00e1rio passar o mouse sobre o link. Para adicionar um t\u00edtulo, coloque-o entre aspas ap\u00f3s o URL.</p> <pre><code>My favorite search engine is [Duck Duck Go](https://duckduckgo.com \"The best search engine for privacy\").\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Meu mecanismo de pesquisa favorito \u00e9 Duck Duck Go.</p>"},{"location":"user_guide/markdown/#urls-and-email-addresses","title":"URLs e endere\u00e7os de e-mail","text":"<p>Para transformar rapidamente um URL ou endere\u00e7o de e-mail em um link, coloque-o entre colchetes angulares.</p> <pre><code>&lt;https://www.markdownguide.org&gt;\n&lt;fake@example.com&gt;\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>https://www.markdownguide.org fake@example.com</p>"},{"location":"user_guide/markdown/#formatting-links","title":"Formatando links","text":"<p>Para enfatizar links, adicione asteriscos antes e depois dos colchetes e par\u00eanteses. Para denotar links como c\u00f3digo, adicione crases entre colchetes.</p> <pre><code>I love supporting the **[EFF](https://eff.org)**.\nThis is the *[Markdown Guide](https://www.markdownguide.org)*.\nSee the section on [`code`](#code).\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Adoro apoiar a EFF. Este \u00e9 o Guia de descontos. Consulte a se\u00e7\u00e3o sobre <code>code</code>.</p>"},{"location":"user_guide/markdown/#reference-style-links","title":"Links de estilo de refer\u00eancia","text":"<p>Links de estilo de refer\u00eancia s\u00e3o um tipo especial de link que torna os URLs mais f\u00e1ceis de exibir e ler no Markdown. Os links de estilo de refer\u00eancia s\u00e3o constru\u00eddos em duas partes: a parte que voc\u00ea mant\u00e9m alinhada ao seu texto e a parte que voc\u00ea armazena em outro lugar do arquivo para manter o texto f\u00e1cil de ler.</p>"},{"location":"user_guide/markdown/#formatting-the-first-part-of-the-link","title":"Formatando a primeira parte do link","text":"<p>A primeira parte de um link de estilo de refer\u00eancia \u00e9 formatada com dois conjuntos de colchetes. O primeiro conjunto de colchetes circunda o texto que deve aparecer vinculado. O segundo conjunto de colchetes exibe um r\u00f3tulo usado para apontar para o link que voc\u00ea est\u00e1 armazenando em outro lugar do documento.</p> <p>Embora n\u00e3o seja obrigat\u00f3rio, voc\u00ea pode incluir um espa\u00e7o entre o primeiro e o segundo conjunto de colchetes. O r\u00f3tulo no segundo conjunto de colchetes n\u00e3o diferencia mai\u00fasculas de min\u00fasculas e pode incluir letras, n\u00fameros, espa\u00e7os ou pontua\u00e7\u00e3o.</p> <p>Isso significa que os seguintes formatos de exemplo s\u00e3o aproximadamente equivalentes para a primeira parte do link:</p> <ul> <li><code>[hobbit-hole][1]</code></li> <li><code>[hobbit-hole] [1]</code></li> </ul>"},{"location":"user_guide/markdown/#formatting-the-second-part-of-the-link","title":"Formatando a segunda parte do link","text":"<p>A segunda parte de um link de estilo de refer\u00eancia \u00e9 formatada com os seguintes atributos:</p> <ol> <li>O r\u00f3tulo, entre colchetes, seguido imediatamente por dois pontos e pelo menos um espa\u00e7o (por exemplo, <code>[label]: </code>).</li> <li>O URL do link, que voc\u00ea pode colocar opcionalmente entre colchetes angulares.</li> <li>O t\u00edtulo opcional do link, que voc\u00ea pode colocar entre aspas duplas, aspas simples ou par\u00eanteses.</li> </ol> <p>Isso significa que os formatos de exemplo a seguir s\u00e3o aproximadamente equivalentes para a segunda parte do link:</p> <ul> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles'</code></li> <li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; \"Hobbit lifestyles\"</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; 'Hobbit lifestyles'</code></li> <li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li> </ul> <p>Voc\u00ea pode colocar esta segunda parte do link em qualquer lugar do seu documento Markdown. Algumas pessoas os colocam imediatamente ap\u00f3s o par\u00e1grafo em que aparecem, enquanto outras os colocam no final do documento (como notas finais ou de rodap\u00e9).</p>"},{"location":"user_guide/markdown/#an-example-putting-the-parts-together","title":"Um exemplo juntando as pe\u00e7as","text":"<p>Digamos que voc\u00ea adicione um URL como um link de URL padr\u00e3o a um par\u00e1grafo e ele ficar\u00e1 assim no Markdown:</p> <pre><code>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\neat: it was a [hobbit-hole](https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"), and that means comfort.\n</code></pre> <p>Embora possa apontar para informa\u00e7\u00f5es adicionais interessantes, o URL exibido realmente n\u00e3o acrescenta muito ao texto bruto existente, a n\u00e3o ser torn\u00e1-lo mais dif\u00edcil de ler. Para corrigir isso, voc\u00ea pode formatar o URL assim:</p> <pre><code>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\neat: it was a [hobbit-hole][1], and that means comfort.\n\n[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; \"Hobbit lifestyles\"\n</code></pre> <p>Em ambos os casos acima, a sa\u00edda renderizada seria id\u00eantica:</p> <p>Em um buraco no ch\u00e3o vivia um hobbit. N\u00e3o um buraco nojento, sujo e \u00famido, cheio de pontas de minhocas e com cheiro de lodo, nem ainda um buraco seco, vazio e arenoso, sem nada onde sentar ou comer: era um toca do hobbit, e isso significa conforto.</p> <p>e o HTML do link seria:</p> <pre><code>&lt;a href=\"https://en.wikipedia.org/wiki/Hobbit#Lifestyle\" title=\"Hobbit lifestyles\"&gt;hobbit-hole&lt;/a&gt;\n</code></pre>"},{"location":"user_guide/markdown/#link-best-practices","title":"Vincular pr\u00e1ticas recomendadas","text":"<p>Os aplicativos Markdown n\u00e3o concordam sobre como lidar com espa\u00e7os no meio de um URL. Para compatibilidade, tente codificar em URL quaisquer espa\u00e7os com <code>%20</code>. Como alternativa, se seu aplicativo Markdown suportar HTML, voc\u00ea poder\u00e1 usar a tag HTML <code>a</code>.</p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         [link](https://www.example.com/my%20great%20page)          &lt;a href=\"https://www.example.com/my great page\"&gt;link&lt;/a&gt; </code> <code>         [link](https://www.example.com/my great page) </code> <p>Par\u00eanteses no meio de uma URL tamb\u00e9m podem ser problem\u00e1ticos. Para compatibilidade, tente codificar em URL o par\u00eantese de abertura (<code>(</code>) com <code>%28</code> e o par\u00eantese de fechamento (<code>)</code>) com ., voc\u00ea poder\u00e1 usar a tag HTML suportar HTML<code>%29</code>. Como alternativa, se seu aplicativo Markdown <code>a</code></p> \u2705\u00a0 Fa\u00e7a isso \u274c\u00a0 N\u00e3o fa\u00e7a isso <code>         [a novel](https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_%28novel%29)          &lt;a href=\"https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel)\"&gt;a novel&lt;/a&gt; </code> <code>         [a novel](https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel))         </code>"},{"location":"user_guide/markdown/#imagens","title":"Imagens","text":"<p>Para adicionar uma imagem, adicione um ponto de exclama\u00e7\u00e3o (<code>!</code>), seguido de texto alternativo entre colchetes e o caminho ou URL do recurso de imagem entre par\u00eanteses. Opcionalmente, voc\u00ea pode adicionar um t\u00edtulo entre aspas ap\u00f3s o caminho ou URL.</p> <pre><code>![The San Juan Mountains are beautiful!](/assets/images/san-juan-mountains.jpg \"San Juan Mountains\")\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p></p> Observa\u00e7\u00e3o: para redimensionar uma imagem, consulte a se\u00e7\u00e3o sobre tamanho da imagem. Para adicionar uma legenda, consulte a se\u00e7\u00e3o legendas de imagens."},{"location":"user_guide/markdown/#linking-images","title":"Vinculando imagens","text":"<p>Para adicionar um link a uma imagem, coloque o Markdown da imagem entre colchetes e adicione o link entre par\u00eanteses.</p> <pre><code>[![An old rock in the desert](/assets/images/shiprock.jpg \"Shiprock, New Mexico by Beau Rogers\")](https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv)\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p>"},{"location":"user_guide/markdown/#personagens-escapando","title":"Personagens escapando","text":"<p>Para exibir um caractere literal que de outra forma seria usado para formatar texto em um documento Markdown, adicione uma barra invertida (<code>\\</code>) na frente do caractere.</p> <pre><code>\\* Without the backslash, this would be a bullet in an unordered list.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>* Sem a barra invertida, isso seria um marcador em uma lista n\u00e3o ordenada.</p>"},{"location":"user_guide/markdown/#characters-you-can-escape","title":"Personagens dos quais voc\u00ea pode escapar","text":"<p>Voc\u00ea pode usar uma barra invertida para escapar dos seguintes caracteres.</p> Personagem Nome \\ barra invertida ` crases (veja tamb\u00e9m escapando de crases no c\u00f3digo) * asterisco _ sublinhado { } aparelho encaracolado [ ] colchetes &lt; &gt; colchetes angulares ( ) par\u00eanteses # sinal de libra + sinal de mais - sinal de menos (h\u00edfen) . ponto ! ponto de exclama\u00e7\u00e3o | pipe (veja tamb\u00e9m escapamento de pipe em tabelas)"},{"location":"user_guide/markdown/#html","title":"HTML","text":"<p>Muitos aplicativos Markdown permitem usar tags HTML em texto formatado em Markdown. Isso \u00e9 \u00fatil se voc\u00ea preferir certas tags HTML \u00e0 sintaxe Markdown. Por exemplo, algumas pessoas acham mais f\u00e1cil usar tags HTML para imagens. Usar HTML tamb\u00e9m \u00e9 \u00fatil quando voc\u00ea precisa alterar os atributos de um elemento, como especificar a cor do texto ou alterar a largura de uma imagem.</p> <p>Para usar HTML, coloque as tags no texto do seu arquivo formatado em Markdown.</p> <pre><code>This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic.\n</code></pre> <p>A sa\u00edda renderizada fica assim:</p> <p>Esta palavra est\u00e1 em negrito. Esta palavra est\u00e1 em it\u00e1lico.</p>"},{"location":"user_guide/markdown/#html-best-practices","title":"Pr\u00e1ticas recomendadas de HTML","text":"<p>Por motivos de seguran\u00e7a, nem todos os aplicativos Markdown suportam HTML em documentos Markdown. Em caso de d\u00favida, verifique a documenta\u00e7\u00e3o do seu aplicativo Markdown. Alguns aplicativos suportam apenas um subconjunto de tags HTML.</p> <p>Use linhas em branco para separar elementos HTML em n\u00edvel de bloco, como <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code> e <code>&lt;p&gt;</code> do conte\u00fado circundante. Tente n\u00e3o recuar as tags com tabula\u00e7\u00f5es ou espa\u00e7os, pois isso pode interferir na formata\u00e7\u00e3o.</p> <p>Voc\u00ea n\u00e3o pode usar a sintaxe Markdown dentro de tags HTML em n\u00edvel de bloco. Por exemplo, <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> n\u00e3o funcionar\u00e1.</p> <pre><code>      &lt;div class=\"card bg-light mb-3\" style=\"max-width: 100%; margin-top: 50px;\"&gt;\n</code></pre> Quer saber mais sobre Markdown? <p>       N\u00e3o pare agora! \ud83d\ude80 Marque o reposit\u00f3rio GitHub e digite seu endere\u00e7o de e-mail abaixo para receber novos tutoriais do Markdown por e-mail. Sem spam!</p> Ficar atualizado <pre><code>    &lt;/div&gt;\n</code></pre>"},{"location":"user_guide/markdown/#take-your-markdown-skills-to-the-next-level","title":"Leve suas habilidades de Markdown para o pr\u00f3ximo n\u00edvel.","text":"<p>Aprenda Markdown em 60 p\u00e1ginas. Projetado tanto para iniciantes quanto para especialistas, o livro The Markdown Guide \u00e9 uma refer\u00eancia abrangente que tem tudo que voc\u00ea precisa para come\u00e7ar e dominar a sintaxe do Markdown.</p> Obtenha o livro"},{"location":"user_guide/markdown/#emojis","title":"Emojis","text":"<p>Emoji para MarkDown</p>"},{"location":"user_guide/markdown/#people","title":"People","text":":bowtie: <code>:bowtie:</code> <code>:smile:</code> <code>:laughing:</code> <code>:blush:</code> <code>:smiley:</code> <code>:relaxed:</code> <code>:smirk:</code> <code>:heart_eyes:</code> <code>:kissing_heart:</code> <code>:kissing_closed_eyes:</code> <code>:flushed:</code> <code>:relieved:</code> <code>:satisfied:</code> <code>:grin:</code> <code>:wink:</code> <code>:stuck_out_tongue_winking_eye:</code> <code>:stuck_out_tongue_closed_eyes:</code> <code>:grinning:</code> <code>:kissing:</code> <code>:kissing_smiling_eyes:</code> <code>:stuck_out_tongue:</code> <code>:sleeping:</code> <code>:worried:</code> <code>:frowning:</code> <code>:anguished:</code> <code>:open_mouth:</code> <code>:grimacing:</code> <code>:confused:</code> <code>:hushed:</code> <code>:expressionless:</code> <code>:unamused:</code> <code>:sweat_smile:</code> <code>:sweat:</code> <code>:disappointed_relieved:</code> <code>:weary:</code> <code>:pensive:</code> <code>:disappointed:</code> <code>:confounded:</code> <code>:fearful:</code> <code>:cold_sweat:</code> <code>:persevere:</code> <code>:cry:</code> <code>:sob:</code> <code>:joy:</code> <code>:astonished:</code> <code>:scream:</code> :neckbeard: <code>:neckbeard:</code> <code>:tired_face:</code> <code>:angry:</code> <code>:rage:</code> <code>:triumph:</code> <code>:sleepy:</code> <code>:yum:</code> <code>:mask:</code> <code>:sunglasses:</code> <code>:dizzy_face:</code> <code>:imp:</code> <code>:smiling_imp:</code> <code>:neutral_face:</code> <code>:no_mouth:</code> <code>:innocent:</code> <code>:alien:</code> <code>:yellow_heart:</code> <code>:blue_heart:</code> <code>:purple_heart:</code> <code>:heart:</code> <code>:green_heart:</code> <code>:broken_heart:</code> <code>:heartbeat:</code> <code>:heartpulse:</code> <code>:two_hearts:</code> <code>:revolving_hearts:</code> <code>:cupid:</code> <code>:sparkling_heart:</code> <code>:sparkles:</code> <code>:star:</code> <code>:star2:</code> <code>:dizzy:</code> <code>:boom:</code> <code>:collision:</code> <code>:anger:</code> <code>:exclamation:</code> <code>:question:</code> <code>:grey_exclamation:</code> <code>:grey_question:</code> <code>:zzz:</code> <code>:dash:</code> <code>:sweat_drops:</code> <code>:notes:</code> <code>:musical_note:</code> <code>:fire:</code> <code>:hankey:</code> <code>:poop:</code> <code>:shit:</code> <code>:+1:</code> <code>:thumbsup:</code> <code>:-1:</code> <code>:thumbsdown:</code> <code>:ok_hand:</code> <code>:punch:</code> :facepunch: <code>:facepunch:</code> <code>:fist:</code> <code>:v:</code> <code>:wave:</code> :hand: <code>:hand:</code> <code>:raised_hand:</code> <code>:open_hands:</code> <code>:point_up:</code> <code>:point_down:</code> <code>:point_left:</code> <code>:point_right:</code> <code>:raised_hands:</code> <code>:pray:</code> <code>:point_up_2:</code> <code>:clap:</code> <code>:muscle:</code> <code>:metal:</code> :fu: <code>:fu:</code> <code>:walking:</code> <code>:runner:</code> :running: <code>:running:</code> <code>:couple:</code> <code>:family:</code> <code>:two_men_holding_hands:</code> <code>:two_women_holding_hands:</code> <code>:dancer:</code> <code>:dancers:</code> <code>:ok_woman:</code> <code>:no_good:</code> <code>:information_desk_person:</code> <code>:raising_hand:</code> :bride_with_veil: <code>:bride_with_veil:</code> <code>:person_with_pouting_face:</code> <code>:person_frowning:</code> <code>:bow:</code> <code>:couplekiss:</code> <code>:couple_with_heart:</code> <code>:massage:</code> <code>:haircut:</code> <code>:nail_care:</code> <code>:boy:</code> <code>:girl:</code> <code>:woman:</code> <code>:man:</code> <code>:baby:</code> <code>:older_woman:</code> <code>:older_man:</code> <code>:person_with_blond_hair:</code> <code>:man_with_gua_pi_mao:</code> <code>:man_with_turban:</code> <code>:construction_worker:</code> <code>:cop:</code> <code>:angel:</code> <code>:princess:</code> <code>:smiley_cat:</code> <code>:smile_cat:</code> <code>:heart_eyes_cat:</code> <code>:kissing_cat:</code> <code>:smirk_cat:</code> <code>:scream_cat:</code> <code>:crying_cat_face:</code> <code>:joy_cat:</code> <code>:pouting_cat:</code> <code>:japanese_ogre:</code> <code>:japanese_goblin:</code> <code>:see_no_evil:</code> <code>:hear_no_evil:</code> <code>:speak_no_evil:</code> <code>:guardsman:</code> <code>:skull:</code> <code>:feet:</code> <code>:lips:</code> <code>:kiss:</code> <code>:droplet:</code> <code>:ear:</code> <code>:eyes:</code> <code>:nose:</code> <code>:tongue:</code> <code>:love_letter:</code> <code>:bust_in_silhouette:</code> <code>:busts_in_silhouette:</code> <code>:speech_balloon:</code> <code>:thought_balloon:</code> :feelsgood: <code>:feelsgood:</code> :finnadie: <code>:finnadie:</code> :goberserk: <code>:goberserk:</code> :godmode: <code>:godmode:</code> :hurtrealbad: <code>:hurtrealbad:</code> :rage1: <code>:rage1:</code> :rage2: <code>:rage2:</code> :rage3: <code>:rage3:</code> :rage4: <code>:rage4:</code> :suspect: <code>:suspect:</code> :trollface: <code>:trollface:</code>"},{"location":"user_guide/markdown/#nature","title":"Nature","text":"<code>:sunny:</code> <code>:umbrella:</code> <code>:cloud:</code> <code>:snowflake:</code> <code>:snowman:</code> <code>:zap:</code> <code>:cyclone:</code> <code>:foggy:</code> <code>:ocean:</code> <code>:cat:</code> <code>:dog:</code> <code>:mouse:</code> <code>:hamster:</code> <code>:rabbit:</code> <code>:wolf:</code> <code>:frog:</code> <code>:tiger:</code> <code>:koala:</code> <code>:bear:</code> <code>:pig:</code> <code>:pig_nose:</code> <code>:cow:</code> <code>:boar:</code> <code>:monkey_face:</code> <code>:monkey:</code> <code>:horse:</code> <code>:racehorse:</code> <code>:camel:</code> <code>:sheep:</code> <code>:elephant:</code> <code>:panda_face:</code> <code>:snake:</code> <code>:bird:</code> <code>:baby_chick:</code> <code>:hatched_chick:</code> <code>:hatching_chick:</code> <code>:chicken:</code> <code>:penguin:</code> <code>:turtle:</code> <code>:bug:</code> <code>:honeybee:</code> <code>:ant:</code> <code>:beetle:</code> <code>:snail:</code> <code>:octopus:</code> <code>:tropical_fish:</code> <code>:fish:</code> <code>:whale:</code> <code>:whale2:</code> <code>:dolphin:</code> <code>:cow2:</code> <code>:ram:</code> <code>:rat:</code> <code>:water_buffalo:</code> <code>:tiger2:</code> <code>:rabbit2:</code> <code>:dragon:</code> <code>:goat:</code> <code>:rooster:</code> <code>:dog2:</code> <code>:pig2:</code> <code>:mouse2:</code> <code>:ox:</code> <code>:dragon_face:</code> <code>:blowfish:</code> <code>:crocodile:</code> <code>:dromedary_camel:</code> <code>:leopard:</code> <code>:cat2:</code> <code>:poodle:</code> <code>:paw_prints:</code> <code>:bouquet:</code> <code>:cherry_blossom:</code> <code>:tulip:</code> <code>:four_leaf_clover:</code> <code>:rose:</code> <code>:sunflower:</code> <code>:hibiscus:</code> <code>:maple_leaf:</code> <code>:leaves:</code> <code>:fallen_leaf:</code> <code>:herb:</code> <code>:mushroom:</code> <code>:cactus:</code> <code>:palm_tree:</code> <code>:evergreen_tree:</code> <code>:deciduous_tree:</code> <code>:chestnut:</code> <code>:seedling:</code> <code>:blossom:</code> <code>:ear_of_rice:</code> <code>:shell:</code> <code>:globe_with_meridians:</code> <code>:sun_with_face:</code> <code>:full_moon_with_face:</code> <code>:new_moon_with_face:</code> <code>:new_moon:</code> <code>:waxing_crescent_moon:</code> <code>:first_quarter_moon:</code> <code>:waxing_gibbous_moon:</code> <code>:full_moon:</code> <code>:waning_gibbous_moon:</code> <code>:last_quarter_moon:</code> <code>:waning_crescent_moon:</code> <code>:last_quarter_moon_with_face:</code> <code>:first_quarter_moon_with_face:</code> :moon: <code>:moon:</code> <code>:earth_africa:</code> <code>:earth_americas:</code> <code>:earth_asia:</code> <code>:volcano:</code> <code>:milky_way:</code> <code>:partly_sunny:</code> :octocat: <code>:octocat:</code> :squirrel: <code>:squirrel:</code>"},{"location":"user_guide/markdown/#objects","title":"Objects","text":"<code>:bamboo:</code> <code>:gift_heart:</code> <code>:dolls:</code> <code>:school_satchel:</code> <code>:mortar_board:</code> <code>:flags:</code> <code>:fireworks:</code> <code>:sparkler:</code> <code>:wind_chime:</code> <code>:rice_scene:</code> <code>:jack_o_lantern:</code> <code>:ghost:</code> <code>:santa:</code> <code>:christmas_tree:</code> <code>:gift:</code> <code>:bell:</code> <code>:no_bell:</code> <code>:tanabata_tree:</code> <code>:tada:</code> <code>:confetti_ball:</code> <code>:balloon:</code> <code>:crystal_ball:</code> <code>:cd:</code> <code>:dvd:</code> <code>:floppy_disk:</code> <code>:camera:</code> <code>:video_camera:</code> <code>:movie_camera:</code> <code>:computer:</code> <code>:tv:</code> :iphone: <code>:iphone:</code> :phone: <code>:phone:</code> <code>:telephone:</code> <code>:telephone_receiver:</code> <code>:pager:</code> <code>:fax:</code> <code>:minidisc:</code> <code>:vhs:</code> <code>:sound:</code> <code>:speaker:</code> <code>:mute:</code> <code>:loudspeaker:</code> <code>:mega:</code> <code>:hourglass:</code> <code>:hourglass_flowing_sand:</code> <code>:alarm_clock:</code> <code>:watch:</code> <code>:radio:</code> <code>:satellite:</code> <code>:loop:</code> <code>:mag:</code> <code>:mag_right:</code> <code>:unlock:</code> <code>:lock:</code> <code>:lock_with_ink_pen:</code> <code>:closed_lock_with_key:</code> <code>:key:</code> <code>:bulb:</code> <code>:flashlight:</code> <code>:high_brightness:</code> <code>:low_brightness:</code> <code>:electric_plug:</code> <code>:battery:</code> <code>:calling:</code> <code>:email:</code> <code>:mailbox:</code> <code>:postbox:</code> <code>:bath:</code> <code>:bathtub:</code> <code>:shower:</code> <code>:toilet:</code> <code>:wrench:</code> <code>:nut_and_bolt:</code> <code>:hammer:</code> <code>:seat:</code> <code>:moneybag:</code> <code>:yen:</code> <code>:dollar:</code> <code>:pound:</code> <code>:euro:</code> <code>:credit_card:</code> <code>:money_with_wings:</code> <code>:e-mail:</code> <code>:inbox_tray:</code> <code>:outbox_tray:</code> <code>:envelope:</code> <code>:incoming_envelope:</code> <code>:postal_horn:</code> <code>:mailbox_closed:</code> <code>:mailbox_with_mail:</code> <code>:mailbox_with_no_mail:</code> <code>:door:</code> <code>:smoking:</code> <code>:bomb:</code> <code>:gun:</code> :hocho: <code>:hocho:</code> <code>:pill:</code> <code>:syringe:</code> <code>:page_facing_up:</code> <code>:page_with_curl:</code> <code>:bookmark_tabs:</code> <code>:bar_chart:</code> <code>:chart_with_upwards_trend:</code> <code>:chart_with_downwards_trend:</code> <code>:scroll:</code> <code>:clipboard:</code> <code>:calendar:</code> <code>:date:</code> <code>:card_index:</code> <code>:file_folder:</code> <code>:open_file_folder:</code> <code>:scissors:</code> <code>:pushpin:</code> <code>:paperclip:</code> <code>:black_nib:</code> <code>:pencil2:</code> <code>:straight_ruler:</code> <code>:triangular_ruler:</code> <code>:closed_book:</code> <code>:green_book:</code> <code>:blue_book:</code> <code>:orange_book:</code> <code>:notebook:</code> <code>:notebook_with_decorative_cover:</code> <code>:ledger:</code> <code>:books:</code> <code>:bookmark:</code> <code>:name_badge:</code> <code>:microscope:</code> <code>:telescope:</code> <code>:newspaper:</code> <code>:football:</code> <code>:basketball:</code> <code>:soccer:</code> <code>:baseball:</code> <code>:tennis:</code> <code>:8ball:</code> <code>:rugby_football:</code> <code>:bowling:</code> <code>:golf:</code> <code>:mountain_bicyclist:</code> <code>:bicyclist:</code> <code>:horse_racing:</code> <code>:snowboarder:</code> <code>:swimmer:</code> <code>:surfer:</code> <code>:ski:</code> <code>:spades:</code> <code>:hearts:</code> <code>:clubs:</code> <code>:diamonds:</code> <code>:gem:</code> <code>:ring:</code> <code>:trophy:</code> <code>:musical_score:</code> <code>:musical_keyboard:</code> <code>:violin:</code> <code>:space_invader:</code> <code>:video_game:</code> <code>:black_joker:</code> <code>:flower_playing_cards:</code> <code>:game_die:</code> <code>:dart:</code> <code>:mahjong:</code> <code>:clapper:</code> <code>:memo:</code> <code>:pencil:</code> <code>:book:</code> <code>:art:</code> <code>:microphone:</code> <code>:headphones:</code> <code>:trumpet:</code> <code>:saxophone:</code> <code>:guitar:</code> :shoe: <code>:shoe:</code> <code>:sandal:</code> <code>:high_heel:</code> <code>:lipstick:</code> <code>:boot:</code> <code>:shirt:</code> :tshirt: <code>:tshirt:</code> <code>:necktie:</code> <code>:womans_clothes:</code> <code>:dress:</code> <code>:running_shirt_with_sash:</code> <code>:jeans:</code> <code>:kimono:</code> <code>:bikini:</code> <code>:ribbon:</code> <code>:tophat:</code> <code>:crown:</code> <code>:womans_hat:</code> <code>:mans_shoe:</code> <code>:closed_umbrella:</code> <code>:briefcase:</code> <code>:handbag:</code> <code>:pouch:</code> <code>:purse:</code> <code>:eyeglasses:</code> <code>:fishing_pole_and_fish:</code> <code>:coffee:</code> <code>:tea:</code> <code>:sake:</code> <code>:baby_bottle:</code> <code>:beer:</code> <code>:beers:</code> <code>:cocktail:</code> <code>:tropical_drink:</code> <code>:wine_glass:</code> <code>:fork_and_knife:</code> <code>:pizza:</code> <code>:hamburger:</code> <code>:fries:</code> <code>:poultry_leg:</code> <code>:meat_on_bone:</code> <code>:spaghetti:</code> <code>:curry:</code> <code>:fried_shrimp:</code> <code>:bento:</code> <code>:sushi:</code> <code>:fish_cake:</code> <code>:rice_ball:</code> <code>:rice_cracker:</code> <code>:rice:</code> <code>:ramen:</code> <code>:stew:</code> <code>:oden:</code> <code>:dango:</code> <code>:egg:</code> <code>:bread:</code> <code>:doughnut:</code> <code>:custard:</code> <code>:icecream:</code> <code>:ice_cream:</code> <code>:shaved_ice:</code> <code>:birthday:</code> <code>:cake:</code> <code>:cookie:</code> <code>:chocolate_bar:</code> <code>:candy:</code> <code>:lollipop:</code> <code>:honey_pot:</code> <code>:apple:</code> <code>:green_apple:</code> <code>:tangerine:</code> <code>:lemon:</code> <code>:cherries:</code> <code>:grapes:</code> <code>:watermelon:</code> <code>:strawberry:</code> <code>:peach:</code> <code>:melon:</code> <code>:banana:</code> <code>:pear:</code> <code>:pineapple:</code> <code>:sweet_potato:</code> <code>:eggplant:</code> <code>:tomato:</code> <code>:corn:</code>"},{"location":"user_guide/markdown/#places","title":"Places","text":"<code>:house:</code> <code>:house_with_garden:</code> <code>:school:</code> <code>:office:</code> <code>:post_office:</code> <code>:hospital:</code> <code>:bank:</code> <code>:convenience_store:</code> <code>:love_hotel:</code> <code>:hotel:</code> <code>:wedding:</code> <code>:church:</code> <code>:department_store:</code> <code>:european_post_office:</code> <code>:city_sunrise:</code> <code>:city_sunset:</code> <code>:japanese_castle:</code> <code>:european_castle:</code> <code>:tent:</code> <code>:factory:</code> <code>:tokyo_tower:</code> <code>:japan:</code> <code>:mount_fuji:</code> <code>:sunrise_over_mountains:</code> <code>:sunrise:</code> <code>:stars:</code> <code>:statue_of_liberty:</code> <code>:bridge_at_night:</code> <code>:carousel_horse:</code> <code>:rainbow:</code> <code>:ferris_wheel:</code> <code>:fountain:</code> <code>:roller_coaster:</code> <code>:ship:</code> <code>:speedboat:</code> :boat: <code>:boat:</code> <code>:sailboat:</code> <code>:rowboat:</code> <code>:anchor:</code> <code>:rocket:</code> <code>:airplane:</code> <code>:helicopter:</code> <code>:steam_locomotive:</code> <code>:tram:</code> <code>:mountain_railway:</code> <code>:bike:</code> <code>:aerial_tramway:</code> <code>:suspension_railway:</code> <code>:mountain_cableway:</code> <code>:tractor:</code> <code>:blue_car:</code> <code>:oncoming_automobile:</code> :car: <code>:car:</code> <code>:red_car:</code> <code>:taxi:</code> <code>:oncoming_taxi:</code> <code>:articulated_lorry:</code> <code>:bus:</code> <code>:oncoming_bus:</code> <code>:rotating_light:</code> <code>:police_car:</code> <code>:oncoming_police_car:</code> <code>:fire_engine:</code> <code>:ambulance:</code> <code>:minibus:</code> <code>:truck:</code> <code>:train:</code> <code>:station:</code> <code>:train2:</code> <code>:bullettrain_front:</code> <code>:bullettrain_side:</code> <code>:light_rail:</code> <code>:monorail:</code> <code>:railway_car:</code> <code>:trolleybus:</code> <code>:ticket:</code> <code>:fuelpump:</code> <code>:vertical_traffic_light:</code> <code>:traffic_light:</code> <code>:warning:</code> <code>:construction:</code> <code>:beginner:</code> <code>:atm:</code> <code>:slot_machine:</code> <code>:busstop:</code> <code>:barber:</code> <code>:hotsprings:</code> <code>:checkered_flag:</code> <code>:crossed_flags:</code> <code>:izakaya_lantern:</code> <code>:moyai:</code> <code>:circus_tent:</code> <code>:performing_arts:</code> <code>:round_pushpin:</code> <code>:triangular_flag_on_post:</code> <code>:jp:</code> <code>:kr:</code> <code>:cn:</code> <code>:us:</code> <code>:fr:</code> <code>:es:</code> <code>:it:</code> <code>:ru:</code> <code>:gb:</code> :uk: <code>:uk:</code> <code>:de:</code>"},{"location":"user_guide/markdown/#symbols","title":"Symbols","text":"<code>:one:</code> <code>:two:</code> <code>:three:</code> <code>:four:</code> <code>:five:</code> <code>:six:</code> <code>:seven:</code> <code>:eight:</code> <code>:nine:</code> <code>:keycap_ten:</code> <code>:1234:</code> <code>:zero:</code> <code>:hash:</code> <code>:symbols:</code> <code>:arrow_backward:</code> <code>:arrow_down:</code> <code>:arrow_forward:</code> <code>:arrow_left:</code> <code>:capital_abcd:</code> <code>:abcd:</code> <code>:abc:</code> <code>:arrow_lower_left:</code> <code>:arrow_lower_right:</code> <code>:arrow_right:</code> <code>:arrow_up:</code> <code>:arrow_upper_left:</code> <code>:arrow_upper_right:</code> <code>:arrow_double_down:</code> <code>:arrow_double_up:</code> <code>:arrow_down_small:</code> <code>:arrow_heading_down:</code> <code>:arrow_heading_up:</code> <code>:leftwards_arrow_with_hook:</code> <code>:arrow_right_hook:</code> <code>:left_right_arrow:</code> <code>:arrow_up_down:</code> <code>:arrow_up_small:</code> <code>:arrows_clockwise:</code> <code>:arrows_counterclockwise:</code> <code>:rewind:</code> <code>:fast_forward:</code> <code>:information_source:</code> <code>:ok:</code> <code>:twisted_rightwards_arrows:</code> <code>:repeat:</code> <code>:repeat_one:</code> <code>:new:</code> <code>:top:</code> <code>:up:</code> <code>:cool:</code> <code>:free:</code> <code>:ng:</code> <code>:cinema:</code> <code>:koko:</code> <code>:signal_strength:</code> <code>:u5272:</code> <code>:u5408:</code> <code>:u55b6:</code> <code>:u6307:</code> <code>:u6708:</code> <code>:u6709:</code> <code>:u6e80:</code> <code>:u7121:</code> <code>:u7533:</code> <code>:u7a7a:</code> <code>:u7981:</code> <code>:sa:</code> <code>:restroom:</code> <code>:mens:</code> <code>:womens:</code> <code>:baby_symbol:</code> <code>:no_smoking:</code> <code>:parking:</code> <code>:wheelchair:</code> <code>:metro:</code> <code>:baggage_claim:</code> <code>:accept:</code> <code>:wc:</code> <code>:potable_water:</code> <code>:put_litter_in_its_place:</code> <code>:secret:</code> <code>:congratulations:</code> <code>:m:</code> <code>:passport_control:</code> <code>:left_luggage:</code> <code>:customs:</code> <code>:ideograph_advantage:</code> <code>:cl:</code> <code>:sos:</code> <code>:id:</code> <code>:no_entry_sign:</code> <code>:underage:</code> <code>:no_mobile_phones:</code> <code>:do_not_litter:</code> <code>:non-potable_water:</code> <code>:no_bicycles:</code> <code>:no_pedestrians:</code> <code>:children_crossing:</code> <code>:no_entry:</code> <code>:eight_spoked_asterisk:</code> <code>:eight_pointed_black_star:</code> <code>:heart_decoration:</code> <code>:vs:</code> <code>:vibration_mode:</code> <code>:mobile_phone_off:</code> <code>:chart:</code> <code>:currency_exchange:</code> <code>:aries:</code> <code>:taurus:</code> <code>:gemini:</code> <code>:cancer:</code> <code>:leo:</code> <code>:virgo:</code> <code>:libra:</code> <code>:scorpius:</code> <code>:sagittarius:</code> <code>:capricorn:</code> <code>:aquarius:</code> <code>:pisces:</code> <code>:ophiuchus:</code> <code>:six_pointed_star:</code> <code>:negative_squared_cross_mark:</code> <code>:a:</code> <code>:b:</code> <code>:ab:</code> <code>:o2:</code> <code>:diamond_shape_with_a_dot_inside:</code> <code>:recycle:</code> <code>:end:</code> <code>:on:</code> <code>:soon:</code> <code>:clock1:</code> <code>:clock130:</code> <code>:clock10:</code> <code>:clock1030:</code> <code>:clock11:</code> <code>:clock1130:</code> <code>:clock12:</code> <code>:clock1230:</code> <code>:clock2:</code> <code>:clock230:</code> <code>:clock3:</code> <code>:clock330:</code> <code>:clock4:</code> <code>:clock430:</code> <code>:clock5:</code> <code>:clock530:</code> <code>:clock6:</code> <code>:clock630:</code> <code>:clock7:</code> <code>:clock730:</code> <code>:clock8:</code> <code>:clock830:</code> <code>:clock9:</code> <code>:clock930:</code> <code>:heavy_dollar_sign:</code> <code>:copyright:</code> <code>:registered:</code> <code>:tm:</code> <code>:x:</code> :heavy_exclamation_mark: <code>:heavy_exclamation_mark:</code> <code>:bangbang:</code> <code>:interrobang:</code> <code>:o:</code> <code>:heavy_multiplication_x:</code> <code>:heavy_plus_sign:</code> <code>:heavy_minus_sign:</code> <code>:heavy_division_sign:</code> <code>:white_flower:</code> <code>:100:</code> <code>:heavy_check_mark:</code> <code>:ballot_box_with_check:</code> <code>:radio_button:</code> <code>:link:</code> <code>:curly_loop:</code> <code>:wavy_dash:</code> <code>:part_alternation_mark:</code> <code>:trident:</code> :black_square: <code>:black_square:</code> :white_square: <code>:white_square:</code> <code>:white_check_mark:</code> <code>:black_square_button:</code> <code>:white_square_button:</code> <code>:black_circle:</code> <code>:white_circle:</code> <code>:red_circle:</code> :large_blue_circle: <code>:large_blue_circle:</code> <code>:large_blue_diamond:</code> <code>:large_orange_diamond:</code> <code>:small_blue_diamond:</code> <code>:small_orange_diamond:</code> <code>:small_red_triangle:</code> <code>:small_red_triangle_down:</code> :shipit: <code>:shipit:</code>"},{"location":"user_guide/semver/","title":"Versionamento Sem\u00e2ntico (SemVer)","text":"<p>Este especif\u00edca\u00e7\u00e3o pode ser acompanhada na integra em seu endere\u00e7o oficcial em https://semver.org/lang/pt-BR/.</p>"},{"location":"user_guide/semver/#especificacao","title":"Especifica\u00e7\u00e3o","text":"<p>As palavras-chaves \u201cDEVE\u201d, \u201cN\u00c3O DEVE\u201d, \u201cOBRIGAT\u00d3RIO\u201d, \u201cDEVER\u00c1\u201d, \u201cN\u00c3O DEVER\u00c1\u201d, \u201cPODEM\u201d, \u201cN\u00c3O PODEM\u201d, \u201cRECOMENDADO\u201d, \u201cPODE\u201d e \u201cOPCIONAL\u201d no presente documento devem ser interpretados como descrito na RFC 2119.</p> <ol> <li>Software usando Versionamento Sem\u00e2ntico DEVE declarar uma API p\u00fablica. Esta API poder\u00e1 ser declarada no pr\u00f3prio c\u00f3digo ou existir estritamente na documenta\u00e7\u00e3o, desde que seja precisa e compreensiva.</li> <li>Um n\u00famero de vers\u00e3o normal DEVE ter o formato de X.Y.Z, onde X, Y, e Z s\u00e3o inteiros n\u00e3o negativos, e N\u00c3O DEVE conter zeros \u00e0 esquerda. X \u00e9 a vers\u00e3o Maior, Y \u00e9 a vers\u00e3o Menor, e Z \u00e9 a vers\u00e3o de Corre\u00e7\u00e3o. Cada elemento DEVE aumentar numericamente. Por exemplo: 1.9.0 -&gt; 1.10.0 -&gt; 1.11.0.</li> <li>Uma vez que um pacote versionado foi lan\u00e7ado(released), o conte\u00fado desta vers\u00e3o N\u00c3O DEVE ser modificado. Qualquer modifica\u00e7\u00e3o DEVE ser lan\u00e7ado como uma nova vers\u00e3o.</li> <li>No in\u00edcio do desenvolvimento, a vers\u00e3o Maior DEVE ser zero (0.y.z). Qualquer coisa PODE mudar a qualquer momento. A API p\u00fablica N\u00c3O DEVE ser considerada est\u00e1vel.</li> <li>Vers\u00e3o 1.0.0 define a API como p\u00fablica. A maneira como o n\u00famero de vers\u00e3o \u00e9 incrementado ap\u00f3s este lan\u00e7amento \u00e9 dependente da API p\u00fablica e como ela muda.</li> <li>Vers\u00e3o de Corre\u00e7\u00e3o Z (x.y.Z | x &gt; 0) DEVE ser incrementado apenas se mantiver compatibilidade e introduzir corre\u00e7\u00e3o de bugs. Uma corre\u00e7\u00e3o de bug \u00e9 definida como uma mudan\u00e7a interna que corrige um comportamento incorreto.</li> <li>Vers\u00e3o Menor Y (x.Y.z | x &gt; 0) DEVE ser incrementada se uma funcionalidade nova e compat\u00edvel for introduzida na API p\u00fablica. DEVE ser incrementada se qualquer funcionalidade da API p\u00fablica for definida como descontinuada. PODE ser incrementada se uma nova funcionalidade ou melhoria substancial for introduzida dentro do c\u00f3digo privado. PODE incluir mudan\u00e7as a n\u00edvel de corre\u00e7\u00e3o. A vers\u00e3o de Corre\u00e7\u00e3o DEVE ser redefinida para 0(zero) quando a vers\u00e3o Menor for incrementada.</li> <li>Vers\u00e3o Maior X (X.y.z | X &gt; 0) DEVE ser incrementada se forem introduzidas mudan\u00e7as incompat\u00edveis na API p\u00fablica. PODE incluir altera\u00e7\u00f5es a n\u00edvel de vers\u00e3o Menor e de vers\u00e3o de Corre\u00e7\u00e3o. Vers\u00e3o de Corre\u00e7\u00e3o e Vers\u00e3o Menor DEVEM ser redefinidas para 0(zero) quando a vers\u00e3o Maior for incrementada.</li> <li>Uma vers\u00e3o de Pr\u00e9-Lan\u00e7amento (pre-release) PODE ser identificada adicionando um h\u00edfen (dash) e uma s\u00e9rie de identificadores separados por ponto (dot) imediatamente ap\u00f3s a vers\u00e3o de Corre\u00e7\u00e3o. Identificador DEVE incluir apenas caracteres alfanum\u00e9ricos e h\u00edfen [0-9A-Za-z-]. Identificador N\u00c3O DEVE ser vazio. Indicador num\u00e9rico N\u00c3O DEVE incluir zeros \u00e0 esquerda. Vers\u00e3o de Pr\u00e9-Lan\u00e7amento tem preced\u00eancia inferior \u00e0 vers\u00e3o normal a que est\u00e1 associada. Uma vers\u00e3o de Pr\u00e9-Lan\u00e7amento (pre-release) indica que a vers\u00e3o \u00e9 inst\u00e1vel e pode n\u00e3o satisfazer os requisitos de compatibilidade pretendidos, como indicado por sua vers\u00e3o normal associada. Exemplos: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92.</li> <li>Metadados de constru\u00e7\u00e3o(Build) PODE ser identificada por adicionar um sinal de adi\u00e7\u00e3o (+) e uma s\u00e9rie de identificadores separados por ponto imediatamente ap\u00f3s a Corre\u00e7\u00e3o ou Pr\u00e9-Lan\u00e7amento. Identificador DEVE ser composto apenas por caracteres alfanum\u00e9ricos e h\u00edfen [0-9A-Za-z-]. Identificador N\u00c3O DEVE ser vazio. Metadados de constru\u00e7\u00e3o PODEM ser ignorados quando se determina a vers\u00e3o de preced\u00eancia. Assim, duas vers\u00f5es que diferem apenas nos metadados de constru\u00e7\u00e3o, t\u00eam a mesma preced\u00eancia. Exemplos: 1.0.0-alpha+001, 1.0.0+20130313144700, 1.0.0-beta+exp.sha.5114f85.</li> <li>A preced\u00eancia refere como as vers\u00f5es s\u00e3o comparadas uma com a outra quando solicitado.</li> <li>A preced\u00eancia DEVE ser calculada separando identificadores de vers\u00e3o em Maior, Menor, Corre\u00e7\u00e3o e Pr\u00e9-lan\u00e7amento, nesta ordem. (Metadados de constru\u00e7\u00e3o n\u00e3o faz parte da preced\u00eancia).</li> </ol> <p>I. A preced\u00eancia \u00e9 determinada pela primeira diferen\u00e7a quando se compara cada identificador da esquerda para direita, como se segue: Vers\u00f5es Maior, Menor e Corre\u00e7\u00e3o s\u00e3o sempre comparadas numericamente.</p> <pre><code>Exemplo: 1.0.0 &lt; 2.0.0 &lt; 2.1.0 &lt; 2.1.1.\n</code></pre> <p>II. Quando Maior, Menor e Corre\u00e7\u00e3o s\u00e3o iguais, a vers\u00e3o de Pr\u00e9-Lan\u00e7amento tem preced\u00eancia menor que a vers\u00e3o normal.</p> <pre><code>Exemplo: 1.0.0-alpha &lt; 1.0.0.\n</code></pre> <p>III. A preced\u00eancia entre duas vers\u00f5es de Pr\u00e9-lan\u00e7amento com mesma vers\u00e3o Maior, Menor e Corre\u00e7\u00e3o DEVE ser determinada comparando cada identificador separado por ponto da esquerda para direita at\u00e9 que seja encontrada diferen\u00e7a da seguinte forma:</p> <ul> <li>Identificadores consistindo apenas d\u00edgitos s\u00e3o comparados numericamente.</li> <li>Identificadores com letras ou h\u00edfen s\u00e3o comparados lexicalmente na ordem de classifica\u00e7\u00e3o ASCII.</li> <li>Identificadores num\u00e9ricos sempre t\u00eam menor preced\u00eancia do que os n\u00e3o num\u00e9ricos.</li> <li>Um conjunto maior de campos de pr\u00e9-lan\u00e7amento tem uma preced\u00eancia maior do que um conjunto menor, se todos os identificadores anteriores s\u00e3o iguais.</li> </ul> <pre><code>Exemplo: 1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt; 1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0-rc.1 &lt; 1.0.0.`\n</code></pre>"},{"location":"user_guide/zenpy/","title":"ZEN do Python","text":"<p>PEP 20</p> <ul> <li>Bonito \u00e9 melhor do que feio.</li> <li>O expl\u00edcito \u00e9 melhor do que o impl\u00edcito.</li> <li>Simples \u00e9 melhor do que complexo.</li> <li>Complexo \u00e9 melhor do que complicado.</li> <li>Plano \u00e9 melhor do que aninhado.</li> <li>Esparso \u00e9 melhor do que denso.</li> <li>A legibilidade \u00e9 importante.</li> <li>Casos especiais n\u00e3o s\u00e3o especiais o suficiente para quebrar as regras. Embora a praticidade seja melhor que a pureza.</li> <li>Os erros nunca devem passar silenciosamente. A menos que sejam explicitamente silenciados.</li> <li>Em caso de ambiguidade, recuse a tenta\u00e7\u00e3o de adivinhar.</li> <li>Deve haver uma - e, de prefer\u00eancia, apenas uma - maneira \u00f3bvia de fazer isso. Embora essa maneira possa n\u00e3o ser \u00f3bvia a princ\u00edpio, a menos que voc\u00ea seja holand\u00eas.</li> <li>Agora \u00e9 melhor do que nunca. Embora, muitas vezes, nunca seja melhor do que agora.</li> <li>Se a implementa\u00e7\u00e3o for dif\u00edcil de explicar, \u00e9 uma m\u00e1 ideia.</li> <li>Se a implementa\u00e7\u00e3o for f\u00e1cil de explicar, pode ser uma boa ideia.</li> <li>Os namespaces s\u00e3o uma \u00f3tima ideia - vamos fazer mais deles!</li> </ul>"}]}